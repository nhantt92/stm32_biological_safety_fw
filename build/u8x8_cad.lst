ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_cad.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_i2c_data_transfer,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	u8x8_i2c_data_transfer:
  23              	.LFB13:
  24              		.file 1 "u8g2/csrc/u8x8_cad.c"
   1:u8g2/csrc/u8x8_cad.c **** /*
   2:u8g2/csrc/u8x8_cad.c ****   
   3:u8g2/csrc/u8x8_cad.c ****   u8x8_cad.c
   4:u8g2/csrc/u8x8_cad.c ****   
   5:u8g2/csrc/u8x8_cad.c ****   "command arg data" interface to the graphics controller
   6:u8g2/csrc/u8x8_cad.c **** 
   7:u8g2/csrc/u8x8_cad.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:u8g2/csrc/u8x8_cad.c **** 
   9:u8g2/csrc/u8x8_cad.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:u8g2/csrc/u8x8_cad.c ****   All rights reserved.
  11:u8g2/csrc/u8x8_cad.c **** 
  12:u8g2/csrc/u8x8_cad.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g2/csrc/u8x8_cad.c ****   are permitted provided that the following conditions are met:
  14:u8g2/csrc/u8x8_cad.c **** 
  15:u8g2/csrc/u8x8_cad.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g2/csrc/u8x8_cad.c ****     of conditions and the following disclaimer.
  17:u8g2/csrc/u8x8_cad.c ****     
  18:u8g2/csrc/u8x8_cad.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g2/csrc/u8x8_cad.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g2/csrc/u8x8_cad.c ****     materials provided with the distribution.
  21:u8g2/csrc/u8x8_cad.c **** 
  22:u8g2/csrc/u8x8_cad.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g2/csrc/u8x8_cad.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g2/csrc/u8x8_cad.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g2/csrc/u8x8_cad.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g2/csrc/u8x8_cad.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g2/csrc/u8x8_cad.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g2/csrc/u8x8_cad.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g2/csrc/u8x8_cad.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g2/csrc/u8x8_cad.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g2/csrc/u8x8_cad.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  32:u8g2/csrc/u8x8_cad.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g2/csrc/u8x8_cad.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:u8g2/csrc/u8x8_cad.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 2


  35:u8g2/csrc/u8x8_cad.c **** 
  36:u8g2/csrc/u8x8_cad.c **** 
  37:u8g2/csrc/u8x8_cad.c ****   The following sequence must be used for any data, which is set to the display:
  38:u8g2/csrc/u8x8_cad.c ****   
  39:u8g2/csrc/u8x8_cad.c ****   
  40:u8g2/csrc/u8x8_cad.c ****   uint8_t u8x8_cad_StartTransfer(u8x8_t *u8x8)
  41:u8g2/csrc/u8x8_cad.c **** 
  42:u8g2/csrc/u8x8_cad.c ****   any of the following calls
  43:u8g2/csrc/u8x8_cad.c ****     uint8_t u8x8_cad_SendCmd(u8x8_t *u8x8, uint8_t cmd)
  44:u8g2/csrc/u8x8_cad.c ****     uint8_t u8x8_cad_SendArg(u8x8_t *u8x8, uint8_t arg)
  45:u8g2/csrc/u8x8_cad.c ****     uint8_t u8x8_cad_SendData(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
  46:u8g2/csrc/u8x8_cad.c ****   
  47:u8g2/csrc/u8x8_cad.c ****   uint8_t u8x8_cad_EndTransfer(u8x8_t *u8x8)
  48:u8g2/csrc/u8x8_cad.c **** 
  49:u8g2/csrc/u8x8_cad.c **** 
  50:u8g2/csrc/u8x8_cad.c **** 
  51:u8g2/csrc/u8x8_cad.c **** */
  52:u8g2/csrc/u8x8_cad.c **** /*
  53:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_template(u8x8_t *u8x8, uint8_t msg, uint16_t arg_int, void *arg_ptr)
  54:u8g2/csrc/u8x8_cad.c **** {
  55:u8g2/csrc/u8x8_cad.c ****   uint8_t i;
  56:u8g2/csrc/u8x8_cad.c ****   
  57:u8g2/csrc/u8x8_cad.c ****   switch(msg)
  58:u8g2/csrc/u8x8_cad.c ****   {
  59:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
  60:u8g2/csrc/u8x8_cad.c ****       u8x8_mcd_byte_SetDC(mcd->next, 1);
  61:u8g2/csrc/u8x8_cad.c ****       u8x8_mcd_byte_Send(mcd->next, arg_int);
  62:u8g2/csrc/u8x8_cad.c ****       break;
  63:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
  64:u8g2/csrc/u8x8_cad.c ****       u8x8_mcd_byte_SetDC(mcd->next, 1);
  65:u8g2/csrc/u8x8_cad.c ****       u8x8_mcd_byte_Send(mcd->next, arg_int);
  66:u8g2/csrc/u8x8_cad.c ****       break;
  67:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
  68:u8g2/csrc/u8x8_cad.c ****       u8x8_mcd_byte_SetDC(mcd->next, 0);
  69:u8g2/csrc/u8x8_cad.c ****       for( i = 0; i < 8; i++ )
  70:u8g2/csrc/u8x8_cad.c **** 	u8x8_mcd_byte_Send(mcd->next, ((uint8_t *)arg_ptr)[i]);
  71:u8g2/csrc/u8x8_cad.c ****       break;
  72:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_RESET:
  73:u8g2/csrc/u8x8_cad.c ****       return mcd->next->cb(mcd->next, msg, arg_int, arg_ptr);
  74:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
  75:u8g2/csrc/u8x8_cad.c ****       return mcd->next->cb(mcd->next, msg, arg_int, arg_ptr);
  76:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
  77:u8g2/csrc/u8x8_cad.c ****       return mcd->next->cb(mcd->next, msg, arg_int, arg_ptr);
  78:u8g2/csrc/u8x8_cad.c ****     default:
  79:u8g2/csrc/u8x8_cad.c ****       break;
  80:u8g2/csrc/u8x8_cad.c ****   }
  81:u8g2/csrc/u8x8_cad.c ****   return 1;
  82:u8g2/csrc/u8x8_cad.c **** }
  83:u8g2/csrc/u8x8_cad.c **** 
  84:u8g2/csrc/u8x8_cad.c **** */
  85:u8g2/csrc/u8x8_cad.c **** 
  86:u8g2/csrc/u8x8_cad.c **** #include "u8x8.h"
  87:u8g2/csrc/u8x8_cad.c **** 
  88:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_SendCmd(u8x8_t *u8x8, uint8_t cmd)
  89:u8g2/csrc/u8x8_cad.c **** {
  90:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
  91:u8g2/csrc/u8x8_cad.c **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 3


  92:u8g2/csrc/u8x8_cad.c **** 
  93:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_SendArg(u8x8_t *u8x8, uint8_t arg)
  94:u8g2/csrc/u8x8_cad.c **** {
  95:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
  96:u8g2/csrc/u8x8_cad.c **** }
  97:u8g2/csrc/u8x8_cad.c **** 
  98:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_SendMultipleArg(u8x8_t *u8x8, uint8_t cnt, uint8_t arg)
  99:u8g2/csrc/u8x8_cad.c **** {
 100:u8g2/csrc/u8x8_cad.c ****   while( cnt > 0 )
 101:u8g2/csrc/u8x8_cad.c ****   {
 102:u8g2/csrc/u8x8_cad.c ****     u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
 103:u8g2/csrc/u8x8_cad.c ****     cnt--;
 104:u8g2/csrc/u8x8_cad.c ****   }
 105:u8g2/csrc/u8x8_cad.c ****   return 1;
 106:u8g2/csrc/u8x8_cad.c **** }
 107:u8g2/csrc/u8x8_cad.c **** 
 108:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_SendData(u8x8_t *u8x8, uint8_t cnt, uint8_t *data)
 109:u8g2/csrc/u8x8_cad.c **** {
 110:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
 111:u8g2/csrc/u8x8_cad.c **** }
 112:u8g2/csrc/u8x8_cad.c **** 
 113:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_StartTransfer(u8x8_t *u8x8)
 114:u8g2/csrc/u8x8_cad.c **** {
 115:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
 116:u8g2/csrc/u8x8_cad.c **** }
 117:u8g2/csrc/u8x8_cad.c **** 
 118:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_EndTransfer(u8x8_t *u8x8)
 119:u8g2/csrc/u8x8_cad.c **** {
 120:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
 121:u8g2/csrc/u8x8_cad.c **** }
 122:u8g2/csrc/u8x8_cad.c **** 
 123:u8g2/csrc/u8x8_cad.c **** /*
 124:u8g2/csrc/u8x8_cad.c ****   21 c		send command c
 125:u8g2/csrc/u8x8_cad.c ****   22 a		send arg a
 126:u8g2/csrc/u8x8_cad.c ****   23 d		send data d
 127:u8g2/csrc/u8x8_cad.c ****   24			CS on
 128:u8g2/csrc/u8x8_cad.c ****   25			CS off
 129:u8g2/csrc/u8x8_cad.c ****   254 milli	delay by milliseconds
 130:u8g2/csrc/u8x8_cad.c ****   255		end of sequence
 131:u8g2/csrc/u8x8_cad.c **** */
 132:u8g2/csrc/u8x8_cad.c **** 
 133:u8g2/csrc/u8x8_cad.c **** void u8x8_cad_SendSequence(u8x8_t *u8x8, uint8_t const *data)
 134:u8g2/csrc/u8x8_cad.c **** {
 135:u8g2/csrc/u8x8_cad.c ****   uint8_t cmd;
 136:u8g2/csrc/u8x8_cad.c ****   uint8_t v;
 137:u8g2/csrc/u8x8_cad.c **** 
 138:u8g2/csrc/u8x8_cad.c ****   for(;;)
 139:u8g2/csrc/u8x8_cad.c ****   {
 140:u8g2/csrc/u8x8_cad.c ****     cmd = *data;
 141:u8g2/csrc/u8x8_cad.c ****     data++;
 142:u8g2/csrc/u8x8_cad.c ****     switch( cmd )
 143:u8g2/csrc/u8x8_cad.c ****     {
 144:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_SEND_CMD:
 145:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_SEND_ARG:
 146:u8g2/csrc/u8x8_cad.c **** 	  v = *data;
 147:u8g2/csrc/u8x8_cad.c **** 	  u8x8->cad_cb(u8x8, cmd, v, NULL);
 148:u8g2/csrc/u8x8_cad.c **** 	  data++;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 4


 149:u8g2/csrc/u8x8_cad.c **** 	  break;
 150:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_SEND_DATA:
 151:u8g2/csrc/u8x8_cad.c **** 	  v = *data;
 152:u8g2/csrc/u8x8_cad.c **** 	  u8x8_cad_SendData(u8x8, 1, &v);
 153:u8g2/csrc/u8x8_cad.c **** 	  data++;
 154:u8g2/csrc/u8x8_cad.c **** 	  break;
 155:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_START_TRANSFER:
 156:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_END_TRANSFER:
 157:u8g2/csrc/u8x8_cad.c **** 	  u8x8->cad_cb(u8x8, cmd, 0, NULL);
 158:u8g2/csrc/u8x8_cad.c **** 	  break;
 159:u8g2/csrc/u8x8_cad.c ****       case 0x0fe:
 160:u8g2/csrc/u8x8_cad.c **** 	  v = *data;
 161:u8g2/csrc/u8x8_cad.c **** 	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
 162:u8g2/csrc/u8x8_cad.c **** 	  data++;
 163:u8g2/csrc/u8x8_cad.c **** 	  break;
 164:u8g2/csrc/u8x8_cad.c ****       default:
 165:u8g2/csrc/u8x8_cad.c **** 	return;
 166:u8g2/csrc/u8x8_cad.c ****     }
 167:u8g2/csrc/u8x8_cad.c ****   }
 168:u8g2/csrc/u8x8_cad.c **** }
 169:u8g2/csrc/u8x8_cad.c **** 
 170:u8g2/csrc/u8x8_cad.c **** 
 171:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_empty(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 172:u8g2/csrc/u8x8_cad.c **** {
 173:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 174:u8g2/csrc/u8x8_cad.c ****   {
 175:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 176:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 177:u8g2/csrc/u8x8_cad.c ****       break;
 178:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 179:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 180:u8g2/csrc/u8x8_cad.c ****       break;
 181:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 182:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 183:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 184:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 185:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 186:u8g2/csrc/u8x8_cad.c ****     default:
 187:u8g2/csrc/u8x8_cad.c ****       return 0;
 188:u8g2/csrc/u8x8_cad.c ****   }
 189:u8g2/csrc/u8x8_cad.c ****   return 1;
 190:u8g2/csrc/u8x8_cad.c **** }
 191:u8g2/csrc/u8x8_cad.c **** 
 192:u8g2/csrc/u8x8_cad.c **** 
 193:u8g2/csrc/u8x8_cad.c **** /*
 194:u8g2/csrc/u8x8_cad.c ****   convert to bytes by using 
 195:u8g2/csrc/u8x8_cad.c ****     dc = 1 for commands and args and
 196:u8g2/csrc/u8x8_cad.c ****     dc = 0 for data
 197:u8g2/csrc/u8x8_cad.c **** */
 198:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_110(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 199:u8g2/csrc/u8x8_cad.c **** {
 200:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 201:u8g2/csrc/u8x8_cad.c ****   {
 202:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 203:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 204:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 205:u8g2/csrc/u8x8_cad.c ****       break;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 5


 206:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 207:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 208:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 209:u8g2/csrc/u8x8_cad.c ****       break;
 210:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 211:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 212:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 213:u8g2/csrc/u8x8_cad.c ****       //break;
 214:u8g2/csrc/u8x8_cad.c ****       /* fall through */
 215:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 216:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 217:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 218:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 219:u8g2/csrc/u8x8_cad.c ****     default:
 220:u8g2/csrc/u8x8_cad.c ****       return 0;
 221:u8g2/csrc/u8x8_cad.c ****   }
 222:u8g2/csrc/u8x8_cad.c ****   return 1;
 223:u8g2/csrc/u8x8_cad.c **** }
 224:u8g2/csrc/u8x8_cad.c **** 
 225:u8g2/csrc/u8x8_cad.c **** /*
 226:u8g2/csrc/u8x8_cad.c ****   convert to bytes by using 
 227:u8g2/csrc/u8x8_cad.c ****     dc = 1 for commands and args and
 228:u8g2/csrc/u8x8_cad.c ****     dc = 0 for data
 229:u8g2/csrc/u8x8_cad.c ****     t6963
 230:u8g2/csrc/u8x8_cad.c **** */
 231:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_100(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 232:u8g2/csrc/u8x8_cad.c **** {
 233:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 234:u8g2/csrc/u8x8_cad.c ****   {
 235:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 236:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 237:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 238:u8g2/csrc/u8x8_cad.c ****       break;
 239:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 240:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 241:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 242:u8g2/csrc/u8x8_cad.c ****       break;
 243:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 244:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 245:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 246:u8g2/csrc/u8x8_cad.c ****       //break;
 247:u8g2/csrc/u8x8_cad.c ****       /* fall through */
 248:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 249:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 250:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 251:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 252:u8g2/csrc/u8x8_cad.c ****     default:
 253:u8g2/csrc/u8x8_cad.c ****       return 0;
 254:u8g2/csrc/u8x8_cad.c ****   }
 255:u8g2/csrc/u8x8_cad.c ****   return 1;
 256:u8g2/csrc/u8x8_cad.c **** }
 257:u8g2/csrc/u8x8_cad.c **** 
 258:u8g2/csrc/u8x8_cad.c **** /*
 259:u8g2/csrc/u8x8_cad.c ****   convert to bytes by using 
 260:u8g2/csrc/u8x8_cad.c ****     dc = 0 for commands and args and
 261:u8g2/csrc/u8x8_cad.c ****     dc = 1 for data
 262:u8g2/csrc/u8x8_cad.c **** */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 6


 263:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_001(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 264:u8g2/csrc/u8x8_cad.c **** {
 265:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 266:u8g2/csrc/u8x8_cad.c ****   {
 267:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 268:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 269:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 270:u8g2/csrc/u8x8_cad.c ****       break;
 271:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 272:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 273:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 274:u8g2/csrc/u8x8_cad.c ****       break;
 275:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 276:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 277:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 278:u8g2/csrc/u8x8_cad.c ****       //break;
 279:u8g2/csrc/u8x8_cad.c ****       /* fall through */
 280:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 281:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 282:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 283:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 284:u8g2/csrc/u8x8_cad.c ****     default:
 285:u8g2/csrc/u8x8_cad.c ****       return 0;
 286:u8g2/csrc/u8x8_cad.c ****   }
 287:u8g2/csrc/u8x8_cad.c ****   return 1;
 288:u8g2/csrc/u8x8_cad.c **** }
 289:u8g2/csrc/u8x8_cad.c **** 
 290:u8g2/csrc/u8x8_cad.c **** /*
 291:u8g2/csrc/u8x8_cad.c ****   convert to bytes by using 
 292:u8g2/csrc/u8x8_cad.c ****     dc = 0 for commands 
 293:u8g2/csrc/u8x8_cad.c ****     dc = 1 for args and data
 294:u8g2/csrc/u8x8_cad.c **** */
 295:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_011(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 296:u8g2/csrc/u8x8_cad.c **** {
 297:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 298:u8g2/csrc/u8x8_cad.c ****   {
 299:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 300:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 0);
 301:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 302:u8g2/csrc/u8x8_cad.c ****       break;
 303:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 304:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 305:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 306:u8g2/csrc/u8x8_cad.c ****       break;
 307:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 308:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SetDC(u8x8, 1);
 309:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 310:u8g2/csrc/u8x8_cad.c ****       //break;
 311:u8g2/csrc/u8x8_cad.c ****       /* fall through */
 312:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 313:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 314:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 315:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 316:u8g2/csrc/u8x8_cad.c ****     default:
 317:u8g2/csrc/u8x8_cad.c ****       return 0;
 318:u8g2/csrc/u8x8_cad.c ****   }
 319:u8g2/csrc/u8x8_cad.c ****   return 1;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 7


 320:u8g2/csrc/u8x8_cad.c **** }
 321:u8g2/csrc/u8x8_cad.c **** 
 322:u8g2/csrc/u8x8_cad.c **** /* cad procedure for the ST7920 in SPI mode */
 323:u8g2/csrc/u8x8_cad.c **** /* u8x8_byte_SetDC is not used */
 324:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_st7920_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 325:u8g2/csrc/u8x8_cad.c **** {
 326:u8g2/csrc/u8x8_cad.c ****   uint8_t *data;
 327:u8g2/csrc/u8x8_cad.c ****   uint8_t b;
 328:u8g2/csrc/u8x8_cad.c ****   uint8_t i;
 329:u8g2/csrc/u8x8_cad.c ****   static uint8_t buf[16];
 330:u8g2/csrc/u8x8_cad.c ****   uint8_t *ptr;
 331:u8g2/csrc/u8x8_cad.c ****   
 332:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 333:u8g2/csrc/u8x8_cad.c ****   {
 334:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 335:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x0f8);
 336:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 337:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int & 0x0f0);
 338:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 339:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int << 4);
 340:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 341:u8g2/csrc/u8x8_cad.c ****       break;
 342:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 343:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x0f8);
 344:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int & 0x0f0);
 345:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int << 4);
 346:u8g2/csrc/u8x8_cad.c ****       break;
 347:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 348:u8g2/csrc/u8x8_cad.c ****     
 349:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x0fa);
 350:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 351:u8g2/csrc/u8x8_cad.c **** 
 352:u8g2/csrc/u8x8_cad.c ****       /* this loop should be optimized: multiple bytes should be sent */
 353:u8g2/csrc/u8x8_cad.c ****       /* u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr); */
 354:u8g2/csrc/u8x8_cad.c ****       data = (uint8_t *)arg_ptr;
 355:u8g2/csrc/u8x8_cad.c ****     
 356:u8g2/csrc/u8x8_cad.c ****       /* the following loop increases speed by 20% */
 357:u8g2/csrc/u8x8_cad.c ****       while( arg_int >= 8 )
 358:u8g2/csrc/u8x8_cad.c ****       {
 359:u8g2/csrc/u8x8_cad.c **** 	i = 8;
 360:u8g2/csrc/u8x8_cad.c **** 	ptr = buf;
 361:u8g2/csrc/u8x8_cad.c **** 	do
 362:u8g2/csrc/u8x8_cad.c **** 	{
 363:u8g2/csrc/u8x8_cad.c **** 	  b = *data++;
 364:u8g2/csrc/u8x8_cad.c **** 	  *ptr++= b & 0x0f0;
 365:u8g2/csrc/u8x8_cad.c **** 	  b <<= 4;
 366:u8g2/csrc/u8x8_cad.c **** 	  *ptr++= b;
 367:u8g2/csrc/u8x8_cad.c **** 	  i--;
 368:u8g2/csrc/u8x8_cad.c **** 	} while( i > 0 );
 369:u8g2/csrc/u8x8_cad.c **** 	arg_int -= 8;
 370:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendBytes(u8x8, 16, buf); 
 371:u8g2/csrc/u8x8_cad.c ****       }
 372:u8g2/csrc/u8x8_cad.c ****       
 373:u8g2/csrc/u8x8_cad.c ****     
 374:u8g2/csrc/u8x8_cad.c ****       while( arg_int > 0 )
 375:u8g2/csrc/u8x8_cad.c ****       {
 376:u8g2/csrc/u8x8_cad.c **** 	b = *data;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 8


 377:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, b & 0x0f0);
 378:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, b << 4);
 379:u8g2/csrc/u8x8_cad.c **** 	data++;
 380:u8g2/csrc/u8x8_cad.c **** 	arg_int--;
 381:u8g2/csrc/u8x8_cad.c ****       }
 382:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 383:u8g2/csrc/u8x8_cad.c ****       break;
 384:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 385:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 386:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 387:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 388:u8g2/csrc/u8x8_cad.c ****     default:
 389:u8g2/csrc/u8x8_cad.c ****       return 0;
 390:u8g2/csrc/u8x8_cad.c ****   }
 391:u8g2/csrc/u8x8_cad.c ****   return 1;
 392:u8g2/csrc/u8x8_cad.c **** }
 393:u8g2/csrc/u8x8_cad.c **** 
 394:u8g2/csrc/u8x8_cad.c **** 
 395:u8g2/csrc/u8x8_cad.c **** /* cad procedure for the SSD13xx family in I2C mode */
 396:u8g2/csrc/u8x8_cad.c **** /* this procedure is also used by the ST7588 */
 397:u8g2/csrc/u8x8_cad.c **** /* u8x8_byte_SetDC is not used */
 398:u8g2/csrc/u8x8_cad.c **** /* U8X8_MSG_BYTE_START_TRANSFER starts i2c transfer, U8X8_MSG_BYTE_END_TRANSFER stops transfer */
 399:u8g2/csrc/u8x8_cad.c **** /* After transfer start, a full byte indicates command or data mode */
 400:u8g2/csrc/u8x8_cad.c **** 
 401:u8g2/csrc/u8x8_cad.c **** static void u8x8_i2c_data_transfer(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr) U8X8_NOINLINE;
 402:u8g2/csrc/u8x8_cad.c **** static void u8x8_i2c_data_transfer(u8x8_t *u8x8, uint8_t arg_int, void *arg_ptr)
 403:u8g2/csrc/u8x8_cad.c **** {
  25              		.loc 1 403 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 3, -24
  34              		.cfi_offset 4, -20
  35              		.cfi_offset 5, -16
  36              		.cfi_offset 6, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
  40 0004 0E46     		mov	r6, r1
  41 0006 1746     		mov	r7, r2
 404:u8g2/csrc/u8x8_cad.c ****     u8x8_byte_StartTransfer(u8x8);    
  42              		.loc 1 404 0
  43 0008 FFF7FEFF 		bl	u8x8_byte_StartTransfer
  44              	.LVL1:
 405:u8g2/csrc/u8x8_cad.c ****     u8x8_byte_SendByte(u8x8, 0x040);
  45              		.loc 1 405 0
  46 000c 4021     		movs	r1, #64
  47 000e 2046     		mov	r0, r4
  48 0010 FFF7FEFF 		bl	u8x8_byte_SendByte
  49              	.LVL2:
 406:u8g2/csrc/u8x8_cad.c ****     u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, arg_int, arg_ptr);
  50              		.loc 1 406 0
  51 0014 2569     		ldr	r5, [r4, #16]
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 9


  52 0016 3B46     		mov	r3, r7
  53 0018 3246     		mov	r2, r6
  54 001a 1721     		movs	r1, #23
  55 001c 2046     		mov	r0, r4
  56 001e A847     		blx	r5
  57              	.LVL3:
 407:u8g2/csrc/u8x8_cad.c ****     u8x8_byte_EndTransfer(u8x8);
  58              		.loc 1 407 0
  59 0020 2046     		mov	r0, r4
  60 0022 FFF7FEFF 		bl	u8x8_byte_EndTransfer
  61              	.LVL4:
 408:u8g2/csrc/u8x8_cad.c **** }
  62              		.loc 1 408 0
  63 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
  64              		.cfi_endproc
  65              	.LFE13:
  67              		.section	.text.u8x8_cad_SendCmd,"ax",%progbits
  68              		.align	1
  69              		.global	u8x8_cad_SendCmd
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  75              	u8x8_cad_SendCmd:
  76              	.LFB0:
  89:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_CMD, cmd, NULL);
  77              		.loc 1 89 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              	.LVL5:
  82 0000 10B5     		push	{r4, lr}
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  90:u8g2/csrc/u8x8_cad.c **** }
  87              		.loc 1 90 0
  88 0002 C468     		ldr	r4, [r0, #12]
  89 0004 0023     		movs	r3, #0
  90 0006 0A46     		mov	r2, r1
  91 0008 1521     		movs	r1, #21
  92              	.LVL6:
  93 000a A047     		blx	r4
  94              	.LVL7:
  91:u8g2/csrc/u8x8_cad.c **** 
  95              		.loc 1 91 0
  96 000c 10BD     		pop	{r4, pc}
  97              		.cfi_endproc
  98              	.LFE0:
 100              		.section	.text.u8x8_cad_SendArg,"ax",%progbits
 101              		.align	1
 102              		.global	u8x8_cad_SendArg
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 10


 108              	u8x8_cad_SendArg:
 109              	.LFB1:
  94:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_ARG, arg, NULL);
 110              		.loc 1 94 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL8:
 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI2:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
  95:u8g2/csrc/u8x8_cad.c **** }
 120              		.loc 1 95 0
 121 0002 C468     		ldr	r4, [r0, #12]
 122 0004 0023     		movs	r3, #0
 123 0006 0A46     		mov	r2, r1
 124 0008 1621     		movs	r1, #22
 125              	.LVL9:
 126 000a A047     		blx	r4
 127              	.LVL10:
  96:u8g2/csrc/u8x8_cad.c **** 
 128              		.loc 1 96 0
 129 000c 10BD     		pop	{r4, pc}
 130              		.cfi_endproc
 131              	.LFE1:
 133              		.section	.text.u8x8_cad_SendMultipleArg,"ax",%progbits
 134              		.align	1
 135              		.global	u8x8_cad_SendMultipleArg
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu softvfp
 141              	u8x8_cad_SendMultipleArg:
 142              	.LFB2:
  99:u8g2/csrc/u8x8_cad.c ****   while( cnt > 0 )
 143              		.loc 1 99 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL11:
 148 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 24
 151              		.cfi_offset 3, -24
 152              		.cfi_offset 4, -20
 153              		.cfi_offset 5, -16
 154              		.cfi_offset 6, -12
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 0546     		mov	r5, r0
 158 0004 0C46     		mov	r4, r1
 159 0006 1746     		mov	r7, r2
 100:u8g2/csrc/u8x8_cad.c ****   {
 160              		.loc 1 100 0
 161 0008 07E0     		b	.L8
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 11


 162              	.LVL12:
 163              	.L9:
 102:u8g2/csrc/u8x8_cad.c ****     cnt--;
 164              		.loc 1 102 0
 165 000a EE68     		ldr	r6, [r5, #12]
 166 000c 0023     		movs	r3, #0
 167 000e 3A46     		mov	r2, r7
 168 0010 1621     		movs	r1, #22
 169 0012 2846     		mov	r0, r5
 170 0014 B047     		blx	r6
 171              	.LVL13:
 103:u8g2/csrc/u8x8_cad.c ****   }
 172              		.loc 1 103 0
 173 0016 013C     		subs	r4, r4, #1
 174              	.LVL14:
 175 0018 E4B2     		uxtb	r4, r4
 176              	.LVL15:
 177              	.L8:
 100:u8g2/csrc/u8x8_cad.c ****   {
 178              		.loc 1 100 0
 179 001a 002C     		cmp	r4, #0
 180 001c F5D1     		bne	.L9
 106:u8g2/csrc/u8x8_cad.c **** 
 181              		.loc 1 106 0
 182 001e 0120     		movs	r0, #1
 183 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 184              		.cfi_endproc
 185              	.LFE2:
 187              		.section	.text.u8x8_cad_SendData,"ax",%progbits
 188              		.align	1
 189              		.global	u8x8_cad_SendData
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 193              		.fpu softvfp
 195              	u8x8_cad_SendData:
 196              	.LFB3:
 109:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, cnt, data);
 197              		.loc 1 109 0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              	.LVL16:
 202 0000 10B5     		push	{r4, lr}
 203              	.LCFI4:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 110:u8g2/csrc/u8x8_cad.c **** }
 207              		.loc 1 110 0
 208 0002 C468     		ldr	r4, [r0, #12]
 209 0004 1346     		mov	r3, r2
 210 0006 0A46     		mov	r2, r1
 211              	.LVL17:
 212 0008 1721     		movs	r1, #23
 213              	.LVL18:
 214 000a A047     		blx	r4
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 12


 215              	.LVL19:
 111:u8g2/csrc/u8x8_cad.c **** 
 216              		.loc 1 111 0
 217 000c 10BD     		pop	{r4, pc}
 218              		.cfi_endproc
 219              	.LFE3:
 221              		.section	.text.u8x8_cad_StartTransfer,"ax",%progbits
 222              		.align	1
 223              		.global	u8x8_cad_StartTransfer
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 229              	u8x8_cad_StartTransfer:
 230              	.LFB4:
 114:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_START_TRANSFER, 0, NULL);
 231              		.loc 1 114 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              	.LVL20:
 236 0000 10B5     		push	{r4, lr}
 237              	.LCFI5:
 238              		.cfi_def_cfa_offset 8
 239              		.cfi_offset 4, -8
 240              		.cfi_offset 14, -4
 115:u8g2/csrc/u8x8_cad.c **** }
 241              		.loc 1 115 0
 242 0002 C468     		ldr	r4, [r0, #12]
 243 0004 0023     		movs	r3, #0
 244 0006 1A46     		mov	r2, r3
 245 0008 1821     		movs	r1, #24
 246 000a A047     		blx	r4
 247              	.LVL21:
 116:u8g2/csrc/u8x8_cad.c **** 
 248              		.loc 1 116 0
 249 000c 10BD     		pop	{r4, pc}
 250              		.cfi_endproc
 251              	.LFE4:
 253              		.section	.text.u8x8_cad_EndTransfer,"ax",%progbits
 254              		.align	1
 255              		.global	u8x8_cad_EndTransfer
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	u8x8_cad_EndTransfer:
 262              	.LFB5:
 119:u8g2/csrc/u8x8_cad.c ****   return u8x8->cad_cb(u8x8, U8X8_MSG_CAD_END_TRANSFER, 0, NULL);
 263              		.loc 1 119 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 0
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL22:
 268 0000 10B5     		push	{r4, lr}
 269              	.LCFI6:
 270              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 13


 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 120:u8g2/csrc/u8x8_cad.c **** }
 273              		.loc 1 120 0
 274 0002 C468     		ldr	r4, [r0, #12]
 275 0004 0023     		movs	r3, #0
 276 0006 1A46     		mov	r2, r3
 277 0008 1921     		movs	r1, #25
 278 000a A047     		blx	r4
 279              	.LVL23:
 121:u8g2/csrc/u8x8_cad.c **** 
 280              		.loc 1 121 0
 281 000c 10BD     		pop	{r4, pc}
 282              		.cfi_endproc
 283              	.LFE5:
 285              		.section	.text.u8x8_cad_SendSequence,"ax",%progbits
 286              		.align	1
 287              		.global	u8x8_cad_SendSequence
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	u8x8_cad_SendSequence:
 294              	.LFB6:
 134:u8g2/csrc/u8x8_cad.c ****   uint8_t cmd;
 295              		.loc 1 134 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 8
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              	.LVL24:
 300 0000 70B5     		push	{r4, r5, r6, lr}
 301              	.LCFI7:
 302              		.cfi_def_cfa_offset 16
 303              		.cfi_offset 4, -16
 304              		.cfi_offset 5, -12
 305              		.cfi_offset 6, -8
 306              		.cfi_offset 14, -4
 307 0002 82B0     		sub	sp, sp, #8
 308              	.LCFI8:
 309              		.cfi_def_cfa_offset 24
 310 0004 0646     		mov	r6, r0
 311 0006 0D46     		mov	r5, r1
 312              	.LVL25:
 313              	.L18:
 140:u8g2/csrc/u8x8_cad.c ****     data++;
 314              		.loc 1 140 0
 315 0008 2C46     		mov	r4, r5
 316 000a 14F8011B 		ldrb	r1, [r4], #1	@ zero_extendqisi2
 317              	.LVL26:
 142:u8g2/csrc/u8x8_cad.c ****     {
 318              		.loc 1 142 0
 319 000e 1729     		cmp	r1, #23
 320 0010 18D0     		beq	.L20
 321 0012 0CD9     		bls	.L28
 322 0014 1929     		cmp	r1, #25
 323 0016 1FD9     		bls	.L23
 324 0018 FE29     		cmp	r1, #254
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 14


 325 001a 24D1     		bne	.L17
 160:u8g2/csrc/u8x8_cad.c **** 	  u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_MILLI, v);	    
 326              		.loc 1 160 0
 327 001c 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 328 001e 8DF80720 		strb	r2, [sp, #7]
 161:u8g2/csrc/u8x8_cad.c **** 	  data++;
 329              		.loc 1 161 0
 330 0022 2921     		movs	r1, #41
 331              	.LVL27:
 332 0024 3046     		mov	r0, r6
 333 0026 FFF7FEFF 		bl	u8x8_gpio_call
 334              	.LVL28:
 162:u8g2/csrc/u8x8_cad.c **** 	  break;
 335              		.loc 1 162 0
 336 002a 0235     		adds	r5, r5, #2
 337              	.LVL29:
 163:u8g2/csrc/u8x8_cad.c ****       default:
 338              		.loc 1 163 0
 339 002c ECE7     		b	.L18
 340              	.LVL30:
 341              	.L28:
 142:u8g2/csrc/u8x8_cad.c ****     {
 342              		.loc 1 142 0
 343 002e 1529     		cmp	r1, #21
 344 0030 19D3     		bcc	.L17
 146:u8g2/csrc/u8x8_cad.c **** 	  u8x8->cad_cb(u8x8, cmd, v, NULL);
 345              		.loc 1 146 0
 346 0032 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 347 0034 8DF80720 		strb	r2, [sp, #7]
 147:u8g2/csrc/u8x8_cad.c **** 	  data++;
 348              		.loc 1 147 0
 349 0038 F468     		ldr	r4, [r6, #12]
 350              	.LVL31:
 351 003a 0023     		movs	r3, #0
 352 003c 3046     		mov	r0, r6
 353 003e A047     		blx	r4
 354              	.LVL32:
 148:u8g2/csrc/u8x8_cad.c **** 	  break;
 355              		.loc 1 148 0
 356 0040 0235     		adds	r5, r5, #2
 357              	.LVL33:
 149:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_SEND_DATA:
 358              		.loc 1 149 0
 359 0042 E1E7     		b	.L18
 360              	.LVL34:
 361              	.L20:
 151:u8g2/csrc/u8x8_cad.c **** 	  u8x8_cad_SendData(u8x8, 1, &v);
 362              		.loc 1 151 0
 363 0044 6B78     		ldrb	r3, [r5, #1]	@ zero_extendqisi2
 364 0046 02AA     		add	r2, sp, #8
 365 0048 02F8013D 		strb	r3, [r2, #-1]!
 152:u8g2/csrc/u8x8_cad.c **** 	  data++;
 366              		.loc 1 152 0
 367 004c 0121     		movs	r1, #1
 368              	.LVL35:
 369 004e 3046     		mov	r0, r6
 370 0050 FFF7FEFF 		bl	u8x8_cad_SendData
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 15


 371              	.LVL36:
 153:u8g2/csrc/u8x8_cad.c **** 	  break;
 372              		.loc 1 153 0
 373 0054 0235     		adds	r5, r5, #2
 374              	.LVL37:
 154:u8g2/csrc/u8x8_cad.c ****       case U8X8_MSG_CAD_START_TRANSFER:
 375              		.loc 1 154 0
 376 0056 D7E7     		b	.L18
 377              	.LVL38:
 378              	.L23:
 157:u8g2/csrc/u8x8_cad.c **** 	  break;
 379              		.loc 1 157 0
 380 0058 F568     		ldr	r5, [r6, #12]
 381 005a 0023     		movs	r3, #0
 382 005c 1A46     		mov	r2, r3
 383 005e 3046     		mov	r0, r6
 384 0060 A847     		blx	r5
 385              	.LVL39:
 141:u8g2/csrc/u8x8_cad.c ****     switch( cmd )
 386              		.loc 1 141 0
 387 0062 2546     		mov	r5, r4
 158:u8g2/csrc/u8x8_cad.c ****       case 0x0fe:
 388              		.loc 1 158 0
 389 0064 D0E7     		b	.L18
 390              	.LVL40:
 391              	.L17:
 168:u8g2/csrc/u8x8_cad.c **** 
 392              		.loc 1 168 0
 393 0066 02B0     		add	sp, sp, #8
 394              	.LCFI9:
 395              		.cfi_def_cfa_offset 16
 396              		@ sp needed
 397 0068 70BD     		pop	{r4, r5, r6, pc}
 398              		.cfi_endproc
 399              	.LFE6:
 401              		.section	.text.u8x8_cad_empty,"ax",%progbits
 402              		.align	1
 403              		.global	u8x8_cad_empty
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 407              		.fpu softvfp
 409              	u8x8_cad_empty:
 410              	.LFB7:
 172:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 411              		.loc 1 172 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              	.LVL41:
 416 0000 10B5     		push	{r4, lr}
 417              	.LCFI10:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 4, -8
 420              		.cfi_offset 14, -4
 173:u8g2/csrc/u8x8_cad.c ****   {
 421              		.loc 1 173 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 16


 422 0002 A1F11404 		sub	r4, r1, #20
 423 0006 052C     		cmp	r4, #5
 424 0008 11D8     		bhi	.L35
 425 000a DFE804F0 		tbb	[pc, r4]
 426              	.L32:
 427 000e 0D       		.byte	(.L31-.L32)/2
 428 000f 03       		.byte	(.L33-.L32)/2
 429 0010 08       		.byte	(.L34-.L32)/2
 430 0011 0D       		.byte	(.L31-.L32)/2
 431 0012 0D       		.byte	(.L31-.L32)/2
 432 0013 0D       		.byte	(.L31-.L32)/2
 433              		.p2align 1
 434              	.L33:
 176:u8g2/csrc/u8x8_cad.c ****       break;
 435              		.loc 1 176 0
 436 0014 1146     		mov	r1, r2
 437              	.LVL42:
 438 0016 FFF7FEFF 		bl	u8x8_byte_SendByte
 439              	.LVL43:
 189:u8g2/csrc/u8x8_cad.c **** }
 440              		.loc 1 189 0
 441 001a 0120     		movs	r0, #1
 442              	.L30:
 190:u8g2/csrc/u8x8_cad.c **** 
 443              		.loc 1 190 0
 444 001c 10BD     		pop	{r4, pc}
 445              	.LVL44:
 446              	.L34:
 179:u8g2/csrc/u8x8_cad.c ****       break;
 447              		.loc 1 179 0
 448 001e 1146     		mov	r1, r2
 449              	.LVL45:
 450 0020 FFF7FEFF 		bl	u8x8_byte_SendByte
 451              	.LVL46:
 189:u8g2/csrc/u8x8_cad.c **** }
 452              		.loc 1 189 0
 453 0024 0120     		movs	r0, #1
 180:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 454              		.loc 1 180 0
 455 0026 F9E7     		b	.L30
 456              	.LVL47:
 457              	.L31:
 185:u8g2/csrc/u8x8_cad.c ****     default:
 458              		.loc 1 185 0
 459 0028 0469     		ldr	r4, [r0, #16]
 460 002a A047     		blx	r4
 461              	.LVL48:
 462 002c F6E7     		b	.L30
 463              	.LVL49:
 464              	.L35:
 187:u8g2/csrc/u8x8_cad.c ****   }
 465              		.loc 1 187 0
 466 002e 0020     		movs	r0, #0
 467              	.LVL50:
 468 0030 F4E7     		b	.L30
 469              		.cfi_endproc
 470              	.LFE7:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 17


 472              		.section	.text.u8x8_cad_110,"ax",%progbits
 473              		.align	1
 474              		.global	u8x8_cad_110
 475              		.syntax unified
 476              		.thumb
 477              		.thumb_func
 478              		.fpu softvfp
 480              	u8x8_cad_110:
 481              	.LFB8:
 199:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 482              		.loc 1 199 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 0
 486              	.LVL51:
 487 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 488              	.LCFI11:
 489              		.cfi_def_cfa_offset 24
 490              		.cfi_offset 4, -24
 491              		.cfi_offset 5, -20
 492              		.cfi_offset 6, -16
 493              		.cfi_offset 7, -12
 494              		.cfi_offset 8, -8
 495              		.cfi_offset 14, -4
 496 0004 0446     		mov	r4, r0
 497 0006 0D46     		mov	r5, r1
 498 0008 1646     		mov	r6, r2
 499 000a 9846     		mov	r8, r3
 200:u8g2/csrc/u8x8_cad.c ****   {
 500              		.loc 1 200 0
 501 000c A1F11403 		sub	r3, r1, #20
 502              	.LVL52:
 503 0010 052B     		cmp	r3, #5
 504 0012 21D8     		bhi	.L44
 505 0014 DFE803F0 		tbb	[pc, r3]
 506              	.LVL53:
 507              	.L40:
 508 0018 18       		.byte	(.L39-.L40)/2
 509 0019 03       		.byte	(.L41-.L40)/2
 510 001a 0C       		.byte	(.L42-.L40)/2
 511 001b 15       		.byte	(.L43-.L40)/2
 512 001c 18       		.byte	(.L39-.L40)/2
 513 001d 18       		.byte	(.L39-.L40)/2
 514              		.p2align 1
 515              	.L41:
 203:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 516              		.loc 1 203 0
 517 001e 0121     		movs	r1, #1
 518              	.LVL54:
 519 0020 FFF7FEFF 		bl	u8x8_byte_SetDC
 520              	.LVL55:
 204:u8g2/csrc/u8x8_cad.c ****       break;
 521              		.loc 1 204 0
 522 0024 3146     		mov	r1, r6
 523 0026 2046     		mov	r0, r4
 524 0028 FFF7FEFF 		bl	u8x8_byte_SendByte
 525              	.LVL56:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 18


 222:u8g2/csrc/u8x8_cad.c **** }
 526              		.loc 1 222 0
 527 002c 0120     		movs	r0, #1
 205:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 528              		.loc 1 205 0
 529 002e 11E0     		b	.L38
 530              	.LVL57:
 531              	.L42:
 207:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 532              		.loc 1 207 0
 533 0030 0121     		movs	r1, #1
 534              	.LVL58:
 535 0032 FFF7FEFF 		bl	u8x8_byte_SetDC
 536              	.LVL59:
 208:u8g2/csrc/u8x8_cad.c ****       break;
 537              		.loc 1 208 0
 538 0036 3146     		mov	r1, r6
 539 0038 2046     		mov	r0, r4
 540 003a FFF7FEFF 		bl	u8x8_byte_SendByte
 541              	.LVL60:
 222:u8g2/csrc/u8x8_cad.c **** }
 542              		.loc 1 222 0
 543 003e 0120     		movs	r0, #1
 209:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 544              		.loc 1 209 0
 545 0040 08E0     		b	.L38
 546              	.LVL61:
 547              	.L43:
 211:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 548              		.loc 1 211 0
 549 0042 0021     		movs	r1, #0
 550              	.LVL62:
 551 0044 FFF7FEFF 		bl	u8x8_byte_SetDC
 552              	.LVL63:
 553              	.L39:
 218:u8g2/csrc/u8x8_cad.c ****     default:
 554              		.loc 1 218 0
 555 0048 2769     		ldr	r7, [r4, #16]
 556 004a 4346     		mov	r3, r8
 557 004c 3246     		mov	r2, r6
 558 004e 2946     		mov	r1, r5
 559 0050 2046     		mov	r0, r4
 560 0052 B847     		blx	r7
 561              	.LVL64:
 562              	.L38:
 223:u8g2/csrc/u8x8_cad.c **** 
 563              		.loc 1 223 0
 564 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 565              	.LVL65:
 566              	.L44:
 220:u8g2/csrc/u8x8_cad.c ****   }
 567              		.loc 1 220 0
 568 0058 0020     		movs	r0, #0
 569              	.LVL66:
 570 005a FBE7     		b	.L38
 571              		.cfi_endproc
 572              	.LFE8:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 19


 574              		.section	.text.u8x8_cad_100,"ax",%progbits
 575              		.align	1
 576              		.global	u8x8_cad_100
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu softvfp
 582              	u8x8_cad_100:
 583              	.LFB9:
 232:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 584              		.loc 1 232 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              	.LVL67:
 589 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 590              	.LCFI12:
 591              		.cfi_def_cfa_offset 24
 592              		.cfi_offset 4, -24
 593              		.cfi_offset 5, -20
 594              		.cfi_offset 6, -16
 595              		.cfi_offset 7, -12
 596              		.cfi_offset 8, -8
 597              		.cfi_offset 14, -4
 598 0004 0446     		mov	r4, r0
 599 0006 0D46     		mov	r5, r1
 600 0008 1646     		mov	r6, r2
 601 000a 9846     		mov	r8, r3
 233:u8g2/csrc/u8x8_cad.c ****   {
 602              		.loc 1 233 0
 603 000c A1F11403 		sub	r3, r1, #20
 604              	.LVL68:
 605 0010 052B     		cmp	r3, #5
 606 0012 21D8     		bhi	.L53
 607 0014 DFE803F0 		tbb	[pc, r3]
 608              	.LVL69:
 609              	.L49:
 610 0018 18       		.byte	(.L48-.L49)/2
 611 0019 03       		.byte	(.L50-.L49)/2
 612 001a 0C       		.byte	(.L51-.L49)/2
 613 001b 15       		.byte	(.L52-.L49)/2
 614 001c 18       		.byte	(.L48-.L49)/2
 615 001d 18       		.byte	(.L48-.L49)/2
 616              		.p2align 1
 617              	.L50:
 236:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 618              		.loc 1 236 0
 619 001e 0121     		movs	r1, #1
 620              	.LVL70:
 621 0020 FFF7FEFF 		bl	u8x8_byte_SetDC
 622              	.LVL71:
 237:u8g2/csrc/u8x8_cad.c ****       break;
 623              		.loc 1 237 0
 624 0024 3146     		mov	r1, r6
 625 0026 2046     		mov	r0, r4
 626 0028 FFF7FEFF 		bl	u8x8_byte_SendByte
 627              	.LVL72:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 20


 255:u8g2/csrc/u8x8_cad.c **** }
 628              		.loc 1 255 0
 629 002c 0120     		movs	r0, #1
 238:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 630              		.loc 1 238 0
 631 002e 11E0     		b	.L47
 632              	.LVL73:
 633              	.L51:
 240:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 634              		.loc 1 240 0
 635 0030 0021     		movs	r1, #0
 636              	.LVL74:
 637 0032 FFF7FEFF 		bl	u8x8_byte_SetDC
 638              	.LVL75:
 241:u8g2/csrc/u8x8_cad.c ****       break;
 639              		.loc 1 241 0
 640 0036 3146     		mov	r1, r6
 641 0038 2046     		mov	r0, r4
 642 003a FFF7FEFF 		bl	u8x8_byte_SendByte
 643              	.LVL76:
 255:u8g2/csrc/u8x8_cad.c **** }
 644              		.loc 1 255 0
 645 003e 0120     		movs	r0, #1
 242:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 646              		.loc 1 242 0
 647 0040 08E0     		b	.L47
 648              	.LVL77:
 649              	.L52:
 244:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 650              		.loc 1 244 0
 651 0042 0021     		movs	r1, #0
 652              	.LVL78:
 653 0044 FFF7FEFF 		bl	u8x8_byte_SetDC
 654              	.LVL79:
 655              	.L48:
 251:u8g2/csrc/u8x8_cad.c ****     default:
 656              		.loc 1 251 0
 657 0048 2769     		ldr	r7, [r4, #16]
 658 004a 4346     		mov	r3, r8
 659 004c 3246     		mov	r2, r6
 660 004e 2946     		mov	r1, r5
 661 0050 2046     		mov	r0, r4
 662 0052 B847     		blx	r7
 663              	.LVL80:
 664              	.L47:
 256:u8g2/csrc/u8x8_cad.c **** 
 665              		.loc 1 256 0
 666 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 667              	.LVL81:
 668              	.L53:
 253:u8g2/csrc/u8x8_cad.c ****   }
 669              		.loc 1 253 0
 670 0058 0020     		movs	r0, #0
 671              	.LVL82:
 672 005a FBE7     		b	.L47
 673              		.cfi_endproc
 674              	.LFE9:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 21


 676              		.section	.text.u8x8_cad_001,"ax",%progbits
 677              		.align	1
 678              		.global	u8x8_cad_001
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	u8x8_cad_001:
 685              	.LFB10:
 264:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 686              		.loc 1 264 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              	.LVL83:
 691 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 692              	.LCFI13:
 693              		.cfi_def_cfa_offset 24
 694              		.cfi_offset 4, -24
 695              		.cfi_offset 5, -20
 696              		.cfi_offset 6, -16
 697              		.cfi_offset 7, -12
 698              		.cfi_offset 8, -8
 699              		.cfi_offset 14, -4
 700 0004 0446     		mov	r4, r0
 701 0006 0D46     		mov	r5, r1
 702 0008 1646     		mov	r6, r2
 703 000a 9846     		mov	r8, r3
 265:u8g2/csrc/u8x8_cad.c ****   {
 704              		.loc 1 265 0
 705 000c A1F11403 		sub	r3, r1, #20
 706              	.LVL84:
 707 0010 052B     		cmp	r3, #5
 708 0012 21D8     		bhi	.L62
 709 0014 DFE803F0 		tbb	[pc, r3]
 710              	.LVL85:
 711              	.L58:
 712 0018 18       		.byte	(.L57-.L58)/2
 713 0019 03       		.byte	(.L59-.L58)/2
 714 001a 0C       		.byte	(.L60-.L58)/2
 715 001b 15       		.byte	(.L61-.L58)/2
 716 001c 18       		.byte	(.L57-.L58)/2
 717 001d 18       		.byte	(.L57-.L58)/2
 718              		.p2align 1
 719              	.L59:
 268:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 720              		.loc 1 268 0
 721 001e 0021     		movs	r1, #0
 722              	.LVL86:
 723 0020 FFF7FEFF 		bl	u8x8_byte_SetDC
 724              	.LVL87:
 269:u8g2/csrc/u8x8_cad.c ****       break;
 725              		.loc 1 269 0
 726 0024 3146     		mov	r1, r6
 727 0026 2046     		mov	r0, r4
 728 0028 FFF7FEFF 		bl	u8x8_byte_SendByte
 729              	.LVL88:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 22


 287:u8g2/csrc/u8x8_cad.c **** }
 730              		.loc 1 287 0
 731 002c 0120     		movs	r0, #1
 270:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 732              		.loc 1 270 0
 733 002e 11E0     		b	.L56
 734              	.LVL89:
 735              	.L60:
 272:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 736              		.loc 1 272 0
 737 0030 0021     		movs	r1, #0
 738              	.LVL90:
 739 0032 FFF7FEFF 		bl	u8x8_byte_SetDC
 740              	.LVL91:
 273:u8g2/csrc/u8x8_cad.c ****       break;
 741              		.loc 1 273 0
 742 0036 3146     		mov	r1, r6
 743 0038 2046     		mov	r0, r4
 744 003a FFF7FEFF 		bl	u8x8_byte_SendByte
 745              	.LVL92:
 287:u8g2/csrc/u8x8_cad.c **** }
 746              		.loc 1 287 0
 747 003e 0120     		movs	r0, #1
 274:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 748              		.loc 1 274 0
 749 0040 08E0     		b	.L56
 750              	.LVL93:
 751              	.L61:
 276:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 752              		.loc 1 276 0
 753 0042 0121     		movs	r1, #1
 754              	.LVL94:
 755 0044 FFF7FEFF 		bl	u8x8_byte_SetDC
 756              	.LVL95:
 757              	.L57:
 283:u8g2/csrc/u8x8_cad.c ****     default:
 758              		.loc 1 283 0
 759 0048 2769     		ldr	r7, [r4, #16]
 760 004a 4346     		mov	r3, r8
 761 004c 3246     		mov	r2, r6
 762 004e 2946     		mov	r1, r5
 763 0050 2046     		mov	r0, r4
 764 0052 B847     		blx	r7
 765              	.LVL96:
 766              	.L56:
 288:u8g2/csrc/u8x8_cad.c **** 
 767              		.loc 1 288 0
 768 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 769              	.LVL97:
 770              	.L62:
 285:u8g2/csrc/u8x8_cad.c ****   }
 771              		.loc 1 285 0
 772 0058 0020     		movs	r0, #0
 773              	.LVL98:
 774 005a FBE7     		b	.L56
 775              		.cfi_endproc
 776              	.LFE10:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 23


 778              		.section	.text.u8x8_cad_011,"ax",%progbits
 779              		.align	1
 780              		.global	u8x8_cad_011
 781              		.syntax unified
 782              		.thumb
 783              		.thumb_func
 784              		.fpu softvfp
 786              	u8x8_cad_011:
 787              	.LFB11:
 296:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 788              		.loc 1 296 0
 789              		.cfi_startproc
 790              		@ args = 0, pretend = 0, frame = 0
 791              		@ frame_needed = 0, uses_anonymous_args = 0
 792              	.LVL99:
 793 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 794              	.LCFI14:
 795              		.cfi_def_cfa_offset 24
 796              		.cfi_offset 4, -24
 797              		.cfi_offset 5, -20
 798              		.cfi_offset 6, -16
 799              		.cfi_offset 7, -12
 800              		.cfi_offset 8, -8
 801              		.cfi_offset 14, -4
 802 0004 0446     		mov	r4, r0
 803 0006 0D46     		mov	r5, r1
 804 0008 1646     		mov	r6, r2
 805 000a 9846     		mov	r8, r3
 297:u8g2/csrc/u8x8_cad.c ****   {
 806              		.loc 1 297 0
 807 000c A1F11403 		sub	r3, r1, #20
 808              	.LVL100:
 809 0010 052B     		cmp	r3, #5
 810 0012 21D8     		bhi	.L71
 811 0014 DFE803F0 		tbb	[pc, r3]
 812              	.LVL101:
 813              	.L67:
 814 0018 18       		.byte	(.L66-.L67)/2
 815 0019 03       		.byte	(.L68-.L67)/2
 816 001a 0C       		.byte	(.L69-.L67)/2
 817 001b 15       		.byte	(.L70-.L67)/2
 818 001c 18       		.byte	(.L66-.L67)/2
 819 001d 18       		.byte	(.L66-.L67)/2
 820              		.p2align 1
 821              	.L68:
 300:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 822              		.loc 1 300 0
 823 001e 0021     		movs	r1, #0
 824              	.LVL102:
 825 0020 FFF7FEFF 		bl	u8x8_byte_SetDC
 826              	.LVL103:
 301:u8g2/csrc/u8x8_cad.c ****       break;
 827              		.loc 1 301 0
 828 0024 3146     		mov	r1, r6
 829 0026 2046     		mov	r0, r4
 830 0028 FFF7FEFF 		bl	u8x8_byte_SendByte
 831              	.LVL104:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 24


 319:u8g2/csrc/u8x8_cad.c **** }
 832              		.loc 1 319 0
 833 002c 0120     		movs	r0, #1
 302:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 834              		.loc 1 302 0
 835 002e 11E0     		b	.L65
 836              	.LVL105:
 837              	.L69:
 304:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 838              		.loc 1 304 0
 839 0030 0121     		movs	r1, #1
 840              	.LVL106:
 841 0032 FFF7FEFF 		bl	u8x8_byte_SetDC
 842              	.LVL107:
 305:u8g2/csrc/u8x8_cad.c ****       break;
 843              		.loc 1 305 0
 844 0036 3146     		mov	r1, r6
 845 0038 2046     		mov	r0, r4
 846 003a FFF7FEFF 		bl	u8x8_byte_SendByte
 847              	.LVL108:
 319:u8g2/csrc/u8x8_cad.c **** }
 848              		.loc 1 319 0
 849 003e 0120     		movs	r0, #1
 306:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 850              		.loc 1 306 0
 851 0040 08E0     		b	.L65
 852              	.LVL109:
 853              	.L70:
 308:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendBytes(u8x8, arg_int, arg_ptr);
 854              		.loc 1 308 0
 855 0042 0121     		movs	r1, #1
 856              	.LVL110:
 857 0044 FFF7FEFF 		bl	u8x8_byte_SetDC
 858              	.LVL111:
 859              	.L66:
 315:u8g2/csrc/u8x8_cad.c ****     default:
 860              		.loc 1 315 0
 861 0048 2769     		ldr	r7, [r4, #16]
 862 004a 4346     		mov	r3, r8
 863 004c 3246     		mov	r2, r6
 864 004e 2946     		mov	r1, r5
 865 0050 2046     		mov	r0, r4
 866 0052 B847     		blx	r7
 867              	.LVL112:
 868              	.L65:
 320:u8g2/csrc/u8x8_cad.c **** 
 869              		.loc 1 320 0
 870 0054 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 871              	.LVL113:
 872              	.L71:
 317:u8g2/csrc/u8x8_cad.c ****   }
 873              		.loc 1 317 0
 874 0058 0020     		movs	r0, #0
 875              	.LVL114:
 876 005a FBE7     		b	.L65
 877              		.cfi_endproc
 878              	.LFE11:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 25


 880              		.section	.text.u8x8_cad_st7920_spi,"ax",%progbits
 881              		.align	1
 882              		.global	u8x8_cad_st7920_spi
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 886              		.fpu softvfp
 888              	u8x8_cad_st7920_spi:
 889              	.LFB12:
 325:u8g2/csrc/u8x8_cad.c ****   uint8_t *data;
 890              		.loc 1 325 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 0
 893              		@ frame_needed = 0, uses_anonymous_args = 0
 894              	.LVL115:
 895 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 896              	.LCFI15:
 897              		.cfi_def_cfa_offset 24
 898              		.cfi_offset 3, -24
 899              		.cfi_offset 4, -20
 900              		.cfi_offset 5, -16
 901              		.cfi_offset 6, -12
 902              		.cfi_offset 7, -8
 903              		.cfi_offset 14, -4
 904 0002 0646     		mov	r6, r0
 905 0004 1546     		mov	r5, r2
 906 0006 1F46     		mov	r7, r3
 332:u8g2/csrc/u8x8_cad.c ****   {
 907              		.loc 1 332 0
 908 0008 A1F11403 		sub	r3, r1, #20
 909              	.LVL116:
 910 000c 052B     		cmp	r3, #5
 911 000e 74D8     		bhi	.L84
 912 0010 DFE803F0 		tbb	[pc, r3]
 913              	.LVL117:
 914              	.L76:
 915 0014 6E       		.byte	(.L75-.L76)/2
 916 0015 03       		.byte	(.L77-.L76)/2
 917 0016 22       		.byte	(.L78-.L76)/2
 918 0017 32       		.byte	(.L79-.L76)/2
 919 0018 6E       		.byte	(.L75-.L76)/2
 920 0019 6E       		.byte	(.L75-.L76)/2
 921              		.p2align 1
 922              	.L77:
 335:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 923              		.loc 1 335 0
 924 001a F821     		movs	r1, #248
 925              	.LVL118:
 926 001c FFF7FEFF 		bl	u8x8_byte_SendByte
 927              	.LVL119:
 336:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int & 0x0f0);
 928              		.loc 1 336 0
 929 0020 0122     		movs	r2, #1
 930 0022 2C21     		movs	r1, #44
 931 0024 3046     		mov	r0, r6
 932 0026 FFF7FEFF 		bl	u8x8_gpio_call
 933              	.LVL120:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 26


 337:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 934              		.loc 1 337 0
 935 002a 05F0F001 		and	r1, r5, #240
 936 002e 3046     		mov	r0, r6
 937 0030 FFF7FEFF 		bl	u8x8_byte_SendByte
 938              	.LVL121:
 338:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int << 4);
 939              		.loc 1 338 0
 940 0034 0122     		movs	r2, #1
 941 0036 2C21     		movs	r1, #44
 942 0038 3046     		mov	r0, r6
 943 003a FFF7FEFF 		bl	u8x8_gpio_call
 944              	.LVL122:
 339:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 945              		.loc 1 339 0
 946 003e 2901     		lsls	r1, r5, #4
 947 0040 01F0F001 		and	r1, r1, #240
 948 0044 3046     		mov	r0, r6
 949 0046 FFF7FEFF 		bl	u8x8_byte_SendByte
 950              	.LVL123:
 340:u8g2/csrc/u8x8_cad.c ****       break;
 951              		.loc 1 340 0
 952 004a 0122     		movs	r2, #1
 953 004c 2C21     		movs	r1, #44
 954 004e 3046     		mov	r0, r6
 955 0050 FFF7FEFF 		bl	u8x8_gpio_call
 956              	.LVL124:
 391:u8g2/csrc/u8x8_cad.c **** }
 957              		.loc 1 391 0
 958 0054 0120     		movs	r0, #1
 959              	.LVL125:
 960              	.L74:
 392:u8g2/csrc/u8x8_cad.c **** 
 961              		.loc 1 392 0
 962 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 963              	.LVL126:
 964              	.L78:
 343:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int & 0x0f0);
 965              		.loc 1 343 0
 966 0058 F821     		movs	r1, #248
 967              	.LVL127:
 968 005a FFF7FEFF 		bl	u8x8_byte_SendByte
 969              	.LVL128:
 344:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int << 4);
 970              		.loc 1 344 0
 971 005e 05F0F001 		and	r1, r5, #240
 972 0062 3046     		mov	r0, r6
 973 0064 FFF7FEFF 		bl	u8x8_byte_SendByte
 974              	.LVL129:
 345:u8g2/csrc/u8x8_cad.c ****       break;
 975              		.loc 1 345 0
 976 0068 2901     		lsls	r1, r5, #4
 977 006a 01F0F001 		and	r1, r1, #240
 978 006e 3046     		mov	r0, r6
 979 0070 FFF7FEFF 		bl	u8x8_byte_SendByte
 980              	.LVL130:
 391:u8g2/csrc/u8x8_cad.c **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 27


 981              		.loc 1 391 0
 982 0074 0120     		movs	r0, #1
 346:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 983              		.loc 1 346 0
 984 0076 EEE7     		b	.L74
 985              	.LVL131:
 986              	.L79:
 349:u8g2/csrc/u8x8_cad.c ****       u8x8_gpio_Delay(u8x8, U8X8_MSG_DELAY_NANO, 1);
 987              		.loc 1 349 0
 988 0078 FA21     		movs	r1, #250
 989              	.LVL132:
 990 007a FFF7FEFF 		bl	u8x8_byte_SendByte
 991              	.LVL133:
 350:u8g2/csrc/u8x8_cad.c **** 
 992              		.loc 1 350 0
 993 007e 0122     		movs	r2, #1
 994 0080 2C21     		movs	r1, #44
 995 0082 3046     		mov	r0, r6
 996 0084 FFF7FEFF 		bl	u8x8_gpio_call
 997              	.LVL134:
 357:u8g2/csrc/u8x8_cad.c ****       {
 998              		.loc 1 357 0
 999 0088 17E0     		b	.L80
 1000              	.LVL135:
 1001              	.L85:
 360:u8g2/csrc/u8x8_cad.c **** 	do
 1002              		.loc 1 360 0
 1003 008a 1D48     		ldr	r0, .L87
 359:u8g2/csrc/u8x8_cad.c **** 	ptr = buf;
 1004              		.loc 1 359 0
 1005 008c 0823     		movs	r3, #8
 1006              	.L81:
 1007              	.LVL136:
 363:u8g2/csrc/u8x8_cad.c **** 	  *ptr++= b & 0x0f0;
 1008              		.loc 1 363 0 discriminator 1
 1009 008e 7C1C     		adds	r4, r7, #1
 1010              	.LVL137:
 1011 0090 3A78     		ldrb	r2, [r7]	@ zero_extendqisi2
 1012              	.LVL138:
 364:u8g2/csrc/u8x8_cad.c **** 	  b <<= 4;
 1013              		.loc 1 364 0 discriminator 1
 1014 0092 02F0F007 		and	r7, r2, #240
 1015 0096 0146     		mov	r1, r0
 1016 0098 01F8027B 		strb	r7, [r1], #2
 365:u8g2/csrc/u8x8_cad.c **** 	  *ptr++= b;
 1017              		.loc 1 365 0 discriminator 1
 1018 009c 1201     		lsls	r2, r2, #4
 1019              	.LVL139:
 366:u8g2/csrc/u8x8_cad.c **** 	  i--;
 1020              		.loc 1 366 0 discriminator 1
 1021 009e 4270     		strb	r2, [r0, #1]
 367:u8g2/csrc/u8x8_cad.c **** 	} while( i > 0 );
 1022              		.loc 1 367 0 discriminator 1
 1023 00a0 013B     		subs	r3, r3, #1
 1024              	.LVL140:
 363:u8g2/csrc/u8x8_cad.c **** 	  *ptr++= b & 0x0f0;
 1025              		.loc 1 363 0 discriminator 1
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 28


 1026 00a2 2746     		mov	r7, r4
 366:u8g2/csrc/u8x8_cad.c **** 	  i--;
 1027              		.loc 1 366 0 discriminator 1
 1028 00a4 0846     		mov	r0, r1
 368:u8g2/csrc/u8x8_cad.c **** 	arg_int -= 8;
 1029              		.loc 1 368 0 discriminator 1
 1030 00a6 13F0FF03 		ands	r3, r3, #255
 1031              	.LVL141:
 1032 00aa F0D1     		bne	.L81
 369:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendBytes(u8x8, 16, buf); 
 1033              		.loc 1 369 0
 1034 00ac 083D     		subs	r5, r5, #8
 1035              	.LVL142:
 1036 00ae EDB2     		uxtb	r5, r5
 1037              	.LVL143:
 370:u8g2/csrc/u8x8_cad.c ****       }
 1038              		.loc 1 370 0
 1039 00b0 134A     		ldr	r2, .L87
 1040              	.LVL144:
 1041 00b2 1021     		movs	r1, #16
 1042              	.LVL145:
 1043 00b4 3046     		mov	r0, r6
 1044              	.LVL146:
 1045 00b6 FFF7FEFF 		bl	u8x8_byte_SendBytes
 1046              	.LVL147:
 1047              	.L80:
 357:u8g2/csrc/u8x8_cad.c ****       {
 1048              		.loc 1 357 0
 1049 00ba 072D     		cmp	r5, #7
 1050 00bc E5D8     		bhi	.L85
 1051 00be 0EE0     		b	.L82
 1052              	.L83:
 376:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, b & 0x0f0);
 1053              		.loc 1 376 0
 1054 00c0 17F8014B 		ldrb	r4, [r7], #1	@ zero_extendqisi2
 1055              	.LVL148:
 377:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, b << 4);
 1056              		.loc 1 377 0
 1057 00c4 04F0F001 		and	r1, r4, #240
 1058 00c8 3046     		mov	r0, r6
 1059 00ca FFF7FEFF 		bl	u8x8_byte_SendByte
 1060              	.LVL149:
 378:u8g2/csrc/u8x8_cad.c **** 	data++;
 1061              		.loc 1 378 0
 1062 00ce 2101     		lsls	r1, r4, #4
 1063 00d0 01F0F001 		and	r1, r1, #240
 1064 00d4 3046     		mov	r0, r6
 1065 00d6 FFF7FEFF 		bl	u8x8_byte_SendByte
 1066              	.LVL150:
 380:u8g2/csrc/u8x8_cad.c ****       }
 1067              		.loc 1 380 0
 1068 00da 013D     		subs	r5, r5, #1
 1069              	.LVL151:
 1070 00dc EDB2     		uxtb	r5, r5
 1071              	.LVL152:
 1072              	.L82:
 374:u8g2/csrc/u8x8_cad.c ****       {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 29


 1073              		.loc 1 374 0
 1074 00de 002D     		cmp	r5, #0
 1075 00e0 EED1     		bne	.L83
 382:u8g2/csrc/u8x8_cad.c ****       break;
 1076              		.loc 1 382 0
 1077 00e2 0122     		movs	r2, #1
 1078 00e4 2C21     		movs	r1, #44
 1079 00e6 3046     		mov	r0, r6
 1080 00e8 FFF7FEFF 		bl	u8x8_gpio_call
 1081              	.LVL153:
 391:u8g2/csrc/u8x8_cad.c **** }
 1082              		.loc 1 391 0
 1083 00ec 0120     		movs	r0, #1
 383:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 1084              		.loc 1 383 0
 1085 00ee B2E7     		b	.L74
 1086              	.LVL154:
 1087              	.L75:
 387:u8g2/csrc/u8x8_cad.c ****     default:
 1088              		.loc 1 387 0
 1089 00f0 0469     		ldr	r4, [r0, #16]
 1090 00f2 3B46     		mov	r3, r7
 1091 00f4 2A46     		mov	r2, r5
 1092 00f6 A047     		blx	r4
 1093              	.LVL155:
 1094 00f8 ADE7     		b	.L74
 1095              	.LVL156:
 1096              	.L84:
 389:u8g2/csrc/u8x8_cad.c ****   }
 1097              		.loc 1 389 0
 1098 00fa 0020     		movs	r0, #0
 1099              	.LVL157:
 1100 00fc ABE7     		b	.L74
 1101              	.L88:
 1102 00fe 00BF     		.align	2
 1103              	.L87:
 1104 0100 00000000 		.word	.LANCHOR0
 1105              		.cfi_endproc
 1106              	.LFE12:
 1108              		.section	.text.u8x8_cad_ssd13xx_i2c,"ax",%progbits
 1109              		.align	1
 1110              		.global	u8x8_cad_ssd13xx_i2c
 1111              		.syntax unified
 1112              		.thumb
 1113              		.thumb_func
 1114              		.fpu softvfp
 1116              	u8x8_cad_ssd13xx_i2c:
 1117              	.LFB14:
 409:u8g2/csrc/u8x8_cad.c **** 
 410:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_ssd13xx_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 411:u8g2/csrc/u8x8_cad.c **** {
 1118              		.loc 1 411 0
 1119              		.cfi_startproc
 1120              		@ args = 0, pretend = 0, frame = 0
 1121              		@ frame_needed = 0, uses_anonymous_args = 0
 1122              	.LVL158:
 1123 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 30


 1124              	.LCFI16:
 1125              		.cfi_def_cfa_offset 24
 1126              		.cfi_offset 3, -24
 1127              		.cfi_offset 4, -20
 1128              		.cfi_offset 5, -16
 1129              		.cfi_offset 6, -12
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 0646     		mov	r6, r0
 1133 0004 1446     		mov	r4, r2
 1134 0006 1D46     		mov	r5, r3
 412:u8g2/csrc/u8x8_cad.c ****   uint8_t *p;
 413:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 1135              		.loc 1 413 0
 1136 0008 A1F11403 		sub	r3, r1, #20
 1137              	.LVL159:
 1138 000c 052B     		cmp	r3, #5
 1139 000e 04D8     		bhi	.L90
 1140 0010 DFE803F0 		tbb	[pc, r3]
 1141              	.LVL160:
 1142              	.L92:
 1143 0014 25       		.byte	(.L91-.L92)/2
 1144 0015 05       		.byte	(.L93-.L92)/2
 1145 0016 05       		.byte	(.L93-.L92)/2
 1146 0017 1C       		.byte	(.L94-.L92)/2
 1147 0018 33       		.byte	(.L98-.L92)/2
 1148 0019 33       		.byte	(.L98-.L92)/2
 1149              		.p2align 1
 1150              	.L90:
 414:u8g2/csrc/u8x8_cad.c ****   {
 415:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 416:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 417:u8g2/csrc/u8x8_cad.c ****       /* 7 Nov 2016: Can this be improved?  */
 418:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SetDC(u8x8, 0);
 419:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_StartTransfer(u8x8);
 420:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendByte(u8x8, u8x8_GetI2CAddress(u8x8));
 421:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x000);
 422:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 423:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);      
 424:u8g2/csrc/u8x8_cad.c ****       break;
 425:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 426:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SetDC(u8x8, 1);
 427:u8g2/csrc/u8x8_cad.c ****     
 428:u8g2/csrc/u8x8_cad.c ****       /* the FeatherWing OLED with the 32u4 transfer of long byte */
 429:u8g2/csrc/u8x8_cad.c ****       /* streams was not possible. This is broken down to */
 430:u8g2/csrc/u8x8_cad.c ****       /* smaller streams, 32 seems to be the limit... */
 431:u8g2/csrc/u8x8_cad.c ****       /* I guess this is related to the size of the Wire buffers in Arduino */
 432:u8g2/csrc/u8x8_cad.c ****       /* Unfortunately, this can not be handled in the byte level drivers, */
 433:u8g2/csrc/u8x8_cad.c ****       /* so this is done here. Even further, only 24 bytes will be sent, */
 434:u8g2/csrc/u8x8_cad.c ****       /* because there will be another byte (DC) required during the transfer */
 435:u8g2/csrc/u8x8_cad.c ****       p = arg_ptr;
 436:u8g2/csrc/u8x8_cad.c ****        while( arg_int > 24 )
 437:u8g2/csrc/u8x8_cad.c ****       {
 438:u8g2/csrc/u8x8_cad.c **** 	u8x8_i2c_data_transfer(u8x8, 24, p);
 439:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 440:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 441:u8g2/csrc/u8x8_cad.c ****       }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 31


 442:u8g2/csrc/u8x8_cad.c ****       u8x8_i2c_data_transfer(u8x8, arg_int, p);
 443:u8g2/csrc/u8x8_cad.c ****       break;
 444:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 445:u8g2/csrc/u8x8_cad.c ****       /* apply default i2c adr if required so that the start transfer msg can use this */
 446:u8g2/csrc/u8x8_cad.c ****       if ( u8x8->i2c_address == 255 )
 447:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x078;
 448:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 449:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 450:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 451:u8g2/csrc/u8x8_cad.c ****       /* cad transfer commands are ignored */
 452:u8g2/csrc/u8x8_cad.c ****       break;
 453:u8g2/csrc/u8x8_cad.c ****     default:
 454:u8g2/csrc/u8x8_cad.c ****       return 0;
 1151              		.loc 1 454 0
 1152 001a 0020     		movs	r0, #0
 1153              	.LVL161:
 1154 001c 2EE0     		b	.L95
 1155              	.LVL162:
 1156              	.L93:
 419:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SendByte(u8x8, u8x8_GetI2CAddress(u8x8));
 1157              		.loc 1 419 0
 1158 001e FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1159              	.LVL163:
 421:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 1160              		.loc 1 421 0
 1161 0022 0021     		movs	r1, #0
 1162 0024 3046     		mov	r0, r6
 1163 0026 FFF7FEFF 		bl	u8x8_byte_SendByte
 1164              	.LVL164:
 422:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);      
 1165              		.loc 1 422 0
 1166 002a 2146     		mov	r1, r4
 1167 002c 3046     		mov	r0, r6
 1168 002e FFF7FEFF 		bl	u8x8_byte_SendByte
 1169              	.LVL165:
 423:u8g2/csrc/u8x8_cad.c ****       break;
 1170              		.loc 1 423 0
 1171 0032 3046     		mov	r0, r6
 1172 0034 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1173              	.LVL166:
 455:u8g2/csrc/u8x8_cad.c ****   }
 456:u8g2/csrc/u8x8_cad.c ****   return 1;
 1174              		.loc 1 456 0
 1175 0038 0120     		movs	r0, #1
 424:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 1176              		.loc 1 424 0
 1177 003a 1FE0     		b	.L95
 1178              	.LVL167:
 1179              	.L96:
 438:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 1180              		.loc 1 438 0
 1181 003c 2A46     		mov	r2, r5
 1182 003e 1821     		movs	r1, #24
 1183 0040 3046     		mov	r0, r6
 1184 0042 FFF7FEFF 		bl	u8x8_i2c_data_transfer
 1185              	.LVL168:
 439:u8g2/csrc/u8x8_cad.c **** 	p+=24;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 32


 1186              		.loc 1 439 0
 1187 0046 183C     		subs	r4, r4, #24
 1188              	.LVL169:
 1189 0048 E4B2     		uxtb	r4, r4
 1190              	.LVL170:
 440:u8g2/csrc/u8x8_cad.c ****       }
 1191              		.loc 1 440 0
 1192 004a 1835     		adds	r5, r5, #24
 1193              	.LVL171:
 1194              	.L94:
 436:u8g2/csrc/u8x8_cad.c ****       {
 1195              		.loc 1 436 0
 1196 004c 182C     		cmp	r4, #24
 1197 004e F5D8     		bhi	.L96
 442:u8g2/csrc/u8x8_cad.c ****       break;
 1198              		.loc 1 442 0
 1199 0050 2A46     		mov	r2, r5
 1200 0052 2146     		mov	r1, r4
 1201 0054 3046     		mov	r0, r6
 1202 0056 FFF7FEFF 		bl	u8x8_i2c_data_transfer
 1203              	.LVL172:
 1204              		.loc 1 456 0
 1205 005a 0120     		movs	r0, #1
 443:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 1206              		.loc 1 443 0
 1207 005c 0EE0     		b	.L95
 1208              	.LVL173:
 1209              	.L91:
 446:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x078;
 1210              		.loc 1 446 0
 1211 005e 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1212 0062 FF2B     		cmp	r3, #255
 1213 0064 05D0     		beq	.L100
 1214              	.L97:
 448:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 1215              		.loc 1 448 0
 1216 0066 3769     		ldr	r7, [r6, #16]
 1217 0068 2B46     		mov	r3, r5
 1218 006a 2246     		mov	r2, r4
 1219 006c 3046     		mov	r0, r6
 1220              	.LVL174:
 1221 006e B847     		blx	r7
 1222              	.LVL175:
 1223 0070 04E0     		b	.L95
 1224              	.LVL176:
 1225              	.L100:
 447:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 1226              		.loc 1 447 0
 1227 0072 7823     		movs	r3, #120
 1228 0074 80F82030 		strb	r3, [r0, #32]
 1229 0078 F5E7     		b	.L97
 1230              	.L98:
 1231              		.loc 1 456 0
 1232 007a 0120     		movs	r0, #1
 1233              	.LVL177:
 1234              	.L95:
 457:u8g2/csrc/u8x8_cad.c **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 33


 1235              		.loc 1 457 0
 1236 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1237              		.cfi_endproc
 1238              	.LFE14:
 1240              		.section	.text.u8x8_cad_st75256_i2c,"ax",%progbits
 1241              		.align	1
 1242              		.global	u8x8_cad_st75256_i2c
 1243              		.syntax unified
 1244              		.thumb
 1245              		.thumb_func
 1246              		.fpu softvfp
 1248              	u8x8_cad_st75256_i2c:
 1249              	.LFB15:
 458:u8g2/csrc/u8x8_cad.c **** 
 459:u8g2/csrc/u8x8_cad.c **** /* the st75256 i2c driver is a copy of the ssd13xx driver, but with arg=1 */
 460:u8g2/csrc/u8x8_cad.c **** /* modified from cad001 (ssd13xx) to cad011 */
 461:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_st75256_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 462:u8g2/csrc/u8x8_cad.c **** {
 1250              		.loc 1 462 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 0
 1253              		@ frame_needed = 0, uses_anonymous_args = 0
 1254              	.LVL178:
 1255 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1256              	.LCFI17:
 1257              		.cfi_def_cfa_offset 24
 1258              		.cfi_offset 3, -24
 1259              		.cfi_offset 4, -20
 1260              		.cfi_offset 5, -16
 1261              		.cfi_offset 6, -12
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 0646     		mov	r6, r0
 1265 0004 1446     		mov	r4, r2
 1266 0006 1D46     		mov	r5, r3
 463:u8g2/csrc/u8x8_cad.c ****   uint8_t *p;
 464:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 1267              		.loc 1 464 0
 1268 0008 A1F11403 		sub	r3, r1, #20
 1269              	.LVL179:
 1270 000c 052B     		cmp	r3, #5
 1271 000e 04D8     		bhi	.L102
 1272 0010 DFE803F0 		tbb	[pc, r3]
 1273              	.LVL180:
 1274              	.L104:
 1275 0014 34       		.byte	(.L103-.L104)/2
 1276 0015 05       		.byte	(.L105-.L104)/2
 1277 0016 14       		.byte	(.L106-.L104)/2
 1278 0017 2B       		.byte	(.L107-.L104)/2
 1279 0018 42       		.byte	(.L111-.L104)/2
 1280 0019 42       		.byte	(.L111-.L104)/2
 1281              		.p2align 1
 1282              	.L102:
 465:u8g2/csrc/u8x8_cad.c ****   {
 466:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 467:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_StartTransfer(u8x8);
 468:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x000);
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 34


 469:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 470:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);      
 471:u8g2/csrc/u8x8_cad.c ****       break;
 472:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 473:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_StartTransfer(u8x8);
 474:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x040);
 475:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 476:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);
 477:u8g2/csrc/u8x8_cad.c ****       break;
 478:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 479:u8g2/csrc/u8x8_cad.c ****       /* see ssd13xx driver */
 480:u8g2/csrc/u8x8_cad.c ****       p = arg_ptr;
 481:u8g2/csrc/u8x8_cad.c ****        while( arg_int > 24 )
 482:u8g2/csrc/u8x8_cad.c ****       {
 483:u8g2/csrc/u8x8_cad.c **** 	u8x8_i2c_data_transfer(u8x8, 24, p);
 484:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 485:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 486:u8g2/csrc/u8x8_cad.c ****       }
 487:u8g2/csrc/u8x8_cad.c ****       u8x8_i2c_data_transfer(u8x8, arg_int, p);
 488:u8g2/csrc/u8x8_cad.c ****       break;
 489:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 490:u8g2/csrc/u8x8_cad.c ****       /* apply default i2c adr if required so that the start transfer msg can use this */
 491:u8g2/csrc/u8x8_cad.c ****       if ( u8x8->i2c_address == 255 )
 492:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x078;	/* ST75256, often this is 0x07e */
 493:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 494:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 495:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 496:u8g2/csrc/u8x8_cad.c ****       /* cad transfer commands are ignored */
 497:u8g2/csrc/u8x8_cad.c ****       break;
 498:u8g2/csrc/u8x8_cad.c ****     default:
 499:u8g2/csrc/u8x8_cad.c ****       return 0;
 1283              		.loc 1 499 0
 1284 001a 0020     		movs	r0, #0
 1285              	.LVL181:
 1286 001c 3DE0     		b	.L108
 1287              	.LVL182:
 1288              	.L105:
 467:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x000);
 1289              		.loc 1 467 0
 1290 001e FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1291              	.LVL183:
 468:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 1292              		.loc 1 468 0
 1293 0022 0021     		movs	r1, #0
 1294 0024 3046     		mov	r0, r6
 1295 0026 FFF7FEFF 		bl	u8x8_byte_SendByte
 1296              	.LVL184:
 469:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);      
 1297              		.loc 1 469 0
 1298 002a 2146     		mov	r1, r4
 1299 002c 3046     		mov	r0, r6
 1300 002e FFF7FEFF 		bl	u8x8_byte_SendByte
 1301              	.LVL185:
 470:u8g2/csrc/u8x8_cad.c ****       break;
 1302              		.loc 1 470 0
 1303 0032 3046     		mov	r0, r6
 1304 0034 FFF7FEFF 		bl	u8x8_byte_EndTransfer
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 35


 1305              	.LVL186:
 500:u8g2/csrc/u8x8_cad.c ****   }
 501:u8g2/csrc/u8x8_cad.c ****   return 1;
 1306              		.loc 1 501 0
 1307 0038 0120     		movs	r0, #1
 471:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 1308              		.loc 1 471 0
 1309 003a 2EE0     		b	.L108
 1310              	.LVL187:
 1311              	.L106:
 473:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, 0x040);
 1312              		.loc 1 473 0
 1313 003c FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1314              	.LVL188:
 474:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 1315              		.loc 1 474 0
 1316 0040 4021     		movs	r1, #64
 1317 0042 3046     		mov	r0, r6
 1318 0044 FFF7FEFF 		bl	u8x8_byte_SendByte
 1319              	.LVL189:
 475:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_EndTransfer(u8x8);
 1320              		.loc 1 475 0
 1321 0048 2146     		mov	r1, r4
 1322 004a 3046     		mov	r0, r6
 1323 004c FFF7FEFF 		bl	u8x8_byte_SendByte
 1324              	.LVL190:
 476:u8g2/csrc/u8x8_cad.c ****       break;
 1325              		.loc 1 476 0
 1326 0050 3046     		mov	r0, r6
 1327 0052 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1328              	.LVL191:
 1329              		.loc 1 501 0
 1330 0056 0120     		movs	r0, #1
 477:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 1331              		.loc 1 477 0
 1332 0058 1FE0     		b	.L108
 1333              	.LVL192:
 1334              	.L109:
 483:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 1335              		.loc 1 483 0
 1336 005a 2A46     		mov	r2, r5
 1337 005c 1821     		movs	r1, #24
 1338 005e 3046     		mov	r0, r6
 1339 0060 FFF7FEFF 		bl	u8x8_i2c_data_transfer
 1340              	.LVL193:
 484:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 1341              		.loc 1 484 0
 1342 0064 183C     		subs	r4, r4, #24
 1343              	.LVL194:
 1344 0066 E4B2     		uxtb	r4, r4
 1345              	.LVL195:
 485:u8g2/csrc/u8x8_cad.c ****       }
 1346              		.loc 1 485 0
 1347 0068 1835     		adds	r5, r5, #24
 1348              	.LVL196:
 1349              	.L107:
 481:u8g2/csrc/u8x8_cad.c ****       {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 36


 1350              		.loc 1 481 0
 1351 006a 182C     		cmp	r4, #24
 1352 006c F5D8     		bhi	.L109
 487:u8g2/csrc/u8x8_cad.c ****       break;
 1353              		.loc 1 487 0
 1354 006e 2A46     		mov	r2, r5
 1355 0070 2146     		mov	r1, r4
 1356 0072 3046     		mov	r0, r6
 1357 0074 FFF7FEFF 		bl	u8x8_i2c_data_transfer
 1358              	.LVL197:
 1359              		.loc 1 501 0
 1360 0078 0120     		movs	r0, #1
 488:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 1361              		.loc 1 488 0
 1362 007a 0EE0     		b	.L108
 1363              	.LVL198:
 1364              	.L103:
 491:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x078;	/* ST75256, often this is 0x07e */
 1365              		.loc 1 491 0
 1366 007c 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1367 0080 FF2B     		cmp	r3, #255
 1368 0082 05D0     		beq	.L113
 1369              	.L110:
 493:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 1370              		.loc 1 493 0
 1371 0084 3769     		ldr	r7, [r6, #16]
 1372 0086 2B46     		mov	r3, r5
 1373 0088 2246     		mov	r2, r4
 1374 008a 3046     		mov	r0, r6
 1375              	.LVL199:
 1376 008c B847     		blx	r7
 1377              	.LVL200:
 1378 008e 04E0     		b	.L108
 1379              	.LVL201:
 1380              	.L113:
 492:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 1381              		.loc 1 492 0
 1382 0090 7823     		movs	r3, #120
 1383 0092 80F82030 		strb	r3, [r0, #32]
 1384 0096 F5E7     		b	.L110
 1385              	.L111:
 1386              		.loc 1 501 0
 1387 0098 0120     		movs	r0, #1
 1388              	.LVL202:
 1389              	.L108:
 502:u8g2/csrc/u8x8_cad.c **** }
 1390              		.loc 1 502 0
 1391 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1392              		.cfi_endproc
 1393              	.LFE15:
 1395              		.section	.text.u8x8_cad_ld7032_i2c,"ax",%progbits
 1396              		.align	1
 1397              		.global	u8x8_cad_ld7032_i2c
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1401              		.fpu softvfp
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 37


 1403              	u8x8_cad_ld7032_i2c:
 1404              	.LFB16:
 503:u8g2/csrc/u8x8_cad.c **** 
 504:u8g2/csrc/u8x8_cad.c **** /* cad i2c procedure for the ld7032 controller */
 505:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_ld7032_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 506:u8g2/csrc/u8x8_cad.c **** {
 1405              		.loc 1 506 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 0
 1408              		@ frame_needed = 0, uses_anonymous_args = 0
 1409              	.LVL203:
 1410 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1411              	.LCFI18:
 1412              		.cfi_def_cfa_offset 24
 1413              		.cfi_offset 3, -24
 1414              		.cfi_offset 4, -20
 1415              		.cfi_offset 5, -16
 1416              		.cfi_offset 6, -12
 1417              		.cfi_offset 7, -8
 1418              		.cfi_offset 14, -4
 1419 0002 0446     		mov	r4, r0
 1420 0004 1546     		mov	r5, r2
 1421 0006 1E46     		mov	r6, r3
 507:u8g2/csrc/u8x8_cad.c ****   static uint8_t in_transfer = 0;
 508:u8g2/csrc/u8x8_cad.c ****   uint8_t *p;
 509:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 1422              		.loc 1 509 0
 1423 0008 A1F11403 		sub	r3, r1, #20
 1424              	.LVL204:
 1425 000c 052B     		cmp	r3, #5
 1426 000e 53D8     		bhi	.L126
 1427 0010 DFE803F0 		tbb	[pc, r3]
 1428              	.LVL205:
 1429              	.L117:
 1430 0014 36       		.byte	(.L116-.L117)/2
 1431 0015 03       		.byte	(.L118-.L117)/2
 1432 0016 14       		.byte	(.L119-.L117)/2
 1433 0017 2C       		.byte	(.L120-.L117)/2
 1434 0018 44       		.byte	(.L121-.L117)/2
 1435 0019 49       		.byte	(.L122-.L117)/2
 1436              		.p2align 1
 1437              	.L118:
 510:u8g2/csrc/u8x8_cad.c ****   {
 511:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 512:u8g2/csrc/u8x8_cad.c ****       if ( in_transfer != 0 )
 1438              		.loc 1 512 0
 1439 001a 284B     		ldr	r3, .L132
 1440 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 001e 53B9     		cbnz	r3, .L129
 1442              	.LVL206:
 1443              	.L123:
 513:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 514:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_StartTransfer(u8x8);
 1444              		.loc 1 514 0
 1445 0020 2046     		mov	r0, r4
 1446 0022 FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1447              	.LVL207:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 38


 515:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 1448              		.loc 1 515 0
 1449 0026 2946     		mov	r1, r5
 1450 0028 2046     		mov	r0, r4
 1451 002a FFF7FEFF 		bl	u8x8_byte_SendByte
 1452              	.LVL208:
 516:u8g2/csrc/u8x8_cad.c ****       in_transfer = 1;
 1453              		.loc 1 516 0
 1454 002e 0120     		movs	r0, #1
 1455 0030 224B     		ldr	r3, .L132
 1456 0032 1870     		strb	r0, [r3]
 1457              	.LVL209:
 1458              	.L115:
 517:u8g2/csrc/u8x8_cad.c ****       break;
 518:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 519:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 520:u8g2/csrc/u8x8_cad.c ****       break;
 521:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 522:u8g2/csrc/u8x8_cad.c ****       //u8x8_byte_SetDC(u8x8, 1);
 523:u8g2/csrc/u8x8_cad.c ****     
 524:u8g2/csrc/u8x8_cad.c ****       /* the FeatherWing OLED with the 32u4 transfer of long byte */
 525:u8g2/csrc/u8x8_cad.c ****       /* streams was not possible. This is broken down to */
 526:u8g2/csrc/u8x8_cad.c ****       /* smaller streams, 32 seems to be the limit... */
 527:u8g2/csrc/u8x8_cad.c ****       /* I guess this is related to the size of the Wire buffers in Arduino */
 528:u8g2/csrc/u8x8_cad.c ****       /* Unfortunately, this can not be handled in the byte level drivers, */
 529:u8g2/csrc/u8x8_cad.c ****       /* so this is done here. Even further, only 24 bytes will be sent, */
 530:u8g2/csrc/u8x8_cad.c ****       /* because there will be another byte (DC) required during the transfer */
 531:u8g2/csrc/u8x8_cad.c ****       p = arg_ptr;
 532:u8g2/csrc/u8x8_cad.c ****        while( arg_int > 24 )
 533:u8g2/csrc/u8x8_cad.c ****       {
 534:u8g2/csrc/u8x8_cad.c **** 	u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, 24, p);
 535:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 536:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 537:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 538:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 539:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, 0x08);	/* data write for LD7032 */
 540:u8g2/csrc/u8x8_cad.c ****       }
 541:u8g2/csrc/u8x8_cad.c ****       u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, arg_int, p);
 542:u8g2/csrc/u8x8_cad.c ****       break;
 543:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 544:u8g2/csrc/u8x8_cad.c ****       /* apply default i2c adr if required so that the start transfer msg can use this */
 545:u8g2/csrc/u8x8_cad.c ****       if ( u8x8->i2c_address == 255 )
 546:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x060;
 547:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 548:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 549:u8g2/csrc/u8x8_cad.c ****       in_transfer = 0;
 550:u8g2/csrc/u8x8_cad.c ****       break;
 551:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 552:u8g2/csrc/u8x8_cad.c ****       if ( in_transfer != 0 )
 553:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 554:u8g2/csrc/u8x8_cad.c ****       break;
 555:u8g2/csrc/u8x8_cad.c ****     default:
 556:u8g2/csrc/u8x8_cad.c ****       return 0;
 557:u8g2/csrc/u8x8_cad.c ****   }
 558:u8g2/csrc/u8x8_cad.c ****   return 1;
 559:u8g2/csrc/u8x8_cad.c **** }
 1459              		.loc 1 559 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 39


 1460 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1461              	.LVL210:
 1462              	.L129:
 513:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_StartTransfer(u8x8);
 1463              		.loc 1 513 0
 1464 0036 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1465              	.LVL211:
 1466 003a F1E7     		b	.L123
 1467              	.LVL212:
 1468              	.L119:
 519:u8g2/csrc/u8x8_cad.c ****       break;
 1469              		.loc 1 519 0
 1470 003c 2946     		mov	r1, r5
 1471              	.LVL213:
 1472 003e FFF7FEFF 		bl	u8x8_byte_SendByte
 1473              	.LVL214:
 558:u8g2/csrc/u8x8_cad.c **** }
 1474              		.loc 1 558 0
 1475 0042 0120     		movs	r0, #1
 520:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 1476              		.loc 1 520 0
 1477 0044 F6E7     		b	.L115
 1478              	.LVL215:
 1479              	.L124:
 534:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 1480              		.loc 1 534 0
 1481 0046 2769     		ldr	r7, [r4, #16]
 1482 0048 3346     		mov	r3, r6
 1483 004a 1822     		movs	r2, #24
 1484 004c 1721     		movs	r1, #23
 1485 004e 2046     		mov	r0, r4
 1486 0050 B847     		blx	r7
 1487              	.LVL216:
 535:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 1488              		.loc 1 535 0
 1489 0052 183D     		subs	r5, r5, #24
 1490              	.LVL217:
 1491 0054 EDB2     		uxtb	r5, r5
 1492              	.LVL218:
 536:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 1493              		.loc 1 536 0
 1494 0056 1836     		adds	r6, r6, #24
 1495              	.LVL219:
 537:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 1496              		.loc 1 537 0
 1497 0058 2046     		mov	r0, r4
 1498 005a FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1499              	.LVL220:
 538:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_SendByte(u8x8, 0x08);	/* data write for LD7032 */
 1500              		.loc 1 538 0
 1501 005e 2046     		mov	r0, r4
 1502 0060 FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1503              	.LVL221:
 539:u8g2/csrc/u8x8_cad.c ****       }
 1504              		.loc 1 539 0
 1505 0064 0821     		movs	r1, #8
 1506 0066 2046     		mov	r0, r4
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 40


 1507 0068 FFF7FEFF 		bl	u8x8_byte_SendByte
 1508              	.LVL222:
 1509              	.L120:
 532:u8g2/csrc/u8x8_cad.c ****       {
 1510              		.loc 1 532 0
 1511 006c 182D     		cmp	r5, #24
 1512 006e EAD8     		bhi	.L124
 541:u8g2/csrc/u8x8_cad.c ****       break;
 1513              		.loc 1 541 0
 1514 0070 2769     		ldr	r7, [r4, #16]
 1515 0072 3346     		mov	r3, r6
 1516 0074 2A46     		mov	r2, r5
 1517 0076 1721     		movs	r1, #23
 1518 0078 2046     		mov	r0, r4
 1519 007a B847     		blx	r7
 1520              	.LVL223:
 558:u8g2/csrc/u8x8_cad.c **** }
 1521              		.loc 1 558 0
 1522 007c 0120     		movs	r0, #1
 542:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 1523              		.loc 1 542 0
 1524 007e D9E7     		b	.L115
 1525              	.LVL224:
 1526              	.L116:
 545:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x060;
 1527              		.loc 1 545 0
 1528 0080 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1529 0084 FF2B     		cmp	r3, #255
 1530 0086 05D0     		beq	.L130
 1531              	.L125:
 547:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 1532              		.loc 1 547 0
 1533 0088 2769     		ldr	r7, [r4, #16]
 1534 008a 3346     		mov	r3, r6
 1535 008c 2A46     		mov	r2, r5
 1536 008e 2046     		mov	r0, r4
 1537              	.LVL225:
 1538 0090 B847     		blx	r7
 1539              	.LVL226:
 1540 0092 CFE7     		b	.L115
 1541              	.LVL227:
 1542              	.L130:
 546:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 1543              		.loc 1 546 0
 1544 0094 6023     		movs	r3, #96
 1545 0096 80F82030 		strb	r3, [r0, #32]
 1546 009a F5E7     		b	.L125
 1547              	.L121:
 549:u8g2/csrc/u8x8_cad.c ****       break;
 1548              		.loc 1 549 0
 1549 009c 074B     		ldr	r3, .L132
 1550 009e 0022     		movs	r2, #0
 1551 00a0 1A70     		strb	r2, [r3]
 558:u8g2/csrc/u8x8_cad.c **** }
 1552              		.loc 1 558 0
 1553 00a2 0120     		movs	r0, #1
 1554              	.LVL228:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 41


 550:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 1555              		.loc 1 550 0
 1556 00a4 C6E7     		b	.L115
 1557              	.LVL229:
 1558              	.L122:
 552:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 1559              		.loc 1 552 0
 1560 00a6 054B     		ldr	r3, .L132
 1561 00a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1562 00aa 0BB9     		cbnz	r3, .L131
 558:u8g2/csrc/u8x8_cad.c **** }
 1563              		.loc 1 558 0
 1564 00ac 0120     		movs	r0, #1
 1565              	.LVL230:
 1566 00ae C1E7     		b	.L115
 1567              	.LVL231:
 1568              	.L131:
 553:u8g2/csrc/u8x8_cad.c ****       break;
 1569              		.loc 1 553 0
 1570 00b0 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1571              	.LVL232:
 558:u8g2/csrc/u8x8_cad.c **** }
 1572              		.loc 1 558 0
 1573 00b4 0120     		movs	r0, #1
 1574 00b6 BDE7     		b	.L115
 1575              	.LVL233:
 1576              	.L126:
 556:u8g2/csrc/u8x8_cad.c ****   }
 1577              		.loc 1 556 0
 1578 00b8 0020     		movs	r0, #0
 1579              	.LVL234:
 1580 00ba BBE7     		b	.L115
 1581              	.L133:
 1582              		.align	2
 1583              	.L132:
 1584 00bc 00000000 		.word	.LANCHOR1
 1585              		.cfi_endproc
 1586              	.LFE16:
 1588              		.section	.text.u8x8_cad_uc16xx_i2c,"ax",%progbits
 1589              		.align	1
 1590              		.global	u8x8_cad_uc16xx_i2c
 1591              		.syntax unified
 1592              		.thumb
 1593              		.thumb_func
 1594              		.fpu softvfp
 1596              	u8x8_cad_uc16xx_i2c:
 1597              	.LFB17:
 560:u8g2/csrc/u8x8_cad.c **** 
 561:u8g2/csrc/u8x8_cad.c **** /* cad procedure for the UC16xx family in I2C mode */
 562:u8g2/csrc/u8x8_cad.c **** /* u8x8_byte_SetDC is not used */
 563:u8g2/csrc/u8x8_cad.c **** /* DC bit is encoded into the adr byte */
 564:u8g2/csrc/u8x8_cad.c **** uint8_t u8x8_cad_uc16xx_i2c(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 565:u8g2/csrc/u8x8_cad.c **** {
 1598              		.loc 1 565 0
 1599              		.cfi_startproc
 1600              		@ args = 0, pretend = 0, frame = 0
 1601              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 42


 1602              	.LVL235:
 1603 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1604              	.LCFI19:
 1605              		.cfi_def_cfa_offset 24
 1606              		.cfi_offset 3, -24
 1607              		.cfi_offset 4, -20
 1608              		.cfi_offset 5, -16
 1609              		.cfi_offset 6, -12
 1610              		.cfi_offset 7, -8
 1611              		.cfi_offset 14, -4
 1612 0002 0546     		mov	r5, r0
 1613 0004 1446     		mov	r4, r2
 1614 0006 1E46     		mov	r6, r3
 566:u8g2/csrc/u8x8_cad.c ****   static uint8_t in_transfer = 0;	
 567:u8g2/csrc/u8x8_cad.c ****   static uint8_t is_data = 0;
 568:u8g2/csrc/u8x8_cad.c ****   uint8_t *p;
 569:u8g2/csrc/u8x8_cad.c ****   switch(msg)
 1615              		.loc 1 569 0
 1616 0008 A1F11403 		sub	r3, r1, #20
 1617              	.LVL236:
 1618 000c 052B     		cmp	r3, #5
 1619 000e 6ED8     		bhi	.L149
 1620 0010 DFE803F0 		tbb	[pc, r3]
 1621              	.LVL237:
 1622              	.L137:
 1623 0014 4F       		.byte	(.L136-.L137)/2
 1624 0015 03       		.byte	(.L138-.L137)/2
 1625 0016 03       		.byte	(.L138-.L137)/2
 1626 0017 17       		.byte	(.L139-.L137)/2
 1627 0018 5D       		.byte	(.L140-.L137)/2
 1628 0019 62       		.byte	(.L141-.L137)/2
 1629              		.p2align 1
 1630              	.L138:
 570:u8g2/csrc/u8x8_cad.c ****   {
 571:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_CMD:
 572:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_ARG:
 573:u8g2/csrc/u8x8_cad.c ****       if ( in_transfer != 0 )
 1631              		.loc 1 573 0
 1632 001a 364B     		ldr	r3, .L154
 1633 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1634 001e 3BB1     		cbz	r3, .L151
 1635              	.LVL238:
 1636              	.L142:
 574:u8g2/csrc/u8x8_cad.c ****       {
 575:u8g2/csrc/u8x8_cad.c **** 	if ( is_data != 0 )
 576:u8g2/csrc/u8x8_cad.c **** 	{
 577:u8g2/csrc/u8x8_cad.c **** 	  /* transfer mode is active, but data transfer */
 578:u8g2/csrc/u8x8_cad.c **** 	  u8x8_byte_EndTransfer(u8x8); 
 579:u8g2/csrc/u8x8_cad.c **** 	  /* clear the lowest two bits of the adr */
 580:u8g2/csrc/u8x8_cad.c **** 	  u8x8_SetI2CAddress( u8x8, u8x8_GetI2CAddress(u8x8)&0x0fc );
 581:u8g2/csrc/u8x8_cad.c **** 	  u8x8_byte_StartTransfer(u8x8); 
 582:u8g2/csrc/u8x8_cad.c **** 	}
 583:u8g2/csrc/u8x8_cad.c ****       }
 584:u8g2/csrc/u8x8_cad.c ****       else
 585:u8g2/csrc/u8x8_cad.c ****       {
 586:u8g2/csrc/u8x8_cad.c **** 	/* clear the lowest two bits of the adr */
 587:u8g2/csrc/u8x8_cad.c **** 	u8x8_SetI2CAddress( u8x8, u8x8_GetI2CAddress(u8x8)&0x0fc );
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 43


 588:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 589:u8g2/csrc/u8x8_cad.c ****       }
 590:u8g2/csrc/u8x8_cad.c ****       u8x8_byte_SendByte(u8x8, arg_int);
 1637              		.loc 1 590 0
 1638 0020 2146     		mov	r1, r4
 1639 0022 2846     		mov	r0, r5
 1640 0024 FFF7FEFF 		bl	u8x8_byte_SendByte
 1641              	.LVL239:
 591:u8g2/csrc/u8x8_cad.c ****       in_transfer = 1;
 1642              		.loc 1 591 0
 1643 0028 0120     		movs	r0, #1
 1644 002a 324B     		ldr	r3, .L154
 1645 002c 1870     		strb	r0, [r3]
 1646              	.LVL240:
 1647              	.L135:
 592:u8g2/csrc/u8x8_cad.c ****       break;
 593:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_SEND_DATA:
 594:u8g2/csrc/u8x8_cad.c ****       if ( in_transfer != 0 )
 595:u8g2/csrc/u8x8_cad.c ****       {
 596:u8g2/csrc/u8x8_cad.c **** 	if ( is_data == 0 )
 597:u8g2/csrc/u8x8_cad.c **** 	{
 598:u8g2/csrc/u8x8_cad.c **** 	  /* transfer mode is active, but data transfer */
 599:u8g2/csrc/u8x8_cad.c **** 	  u8x8_byte_EndTransfer(u8x8); 
 600:u8g2/csrc/u8x8_cad.c **** 	  /* clear the lowest two bits of the adr */
 601:u8g2/csrc/u8x8_cad.c **** 	  u8x8_SetI2CAddress( u8x8, (u8x8_GetI2CAddress(u8x8)&0x0fc)|2 );
 602:u8g2/csrc/u8x8_cad.c **** 	  u8x8_byte_StartTransfer(u8x8); 
 603:u8g2/csrc/u8x8_cad.c **** 	}
 604:u8g2/csrc/u8x8_cad.c ****       }
 605:u8g2/csrc/u8x8_cad.c ****       else
 606:u8g2/csrc/u8x8_cad.c ****       {
 607:u8g2/csrc/u8x8_cad.c **** 	/* clear the lowest two bits of the adr */
 608:u8g2/csrc/u8x8_cad.c **** 	u8x8_SetI2CAddress( u8x8, (u8x8_GetI2CAddress(u8x8)&0x0fc)|2 );
 609:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 610:u8g2/csrc/u8x8_cad.c ****       }
 611:u8g2/csrc/u8x8_cad.c ****       in_transfer = 1;
 612:u8g2/csrc/u8x8_cad.c ****       
 613:u8g2/csrc/u8x8_cad.c ****       p = arg_ptr;
 614:u8g2/csrc/u8x8_cad.c ****       while( arg_int > 24 )
 615:u8g2/csrc/u8x8_cad.c ****       {
 616:u8g2/csrc/u8x8_cad.c **** 	u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, 24, p);
 617:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 618:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 619:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 620:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 621:u8g2/csrc/u8x8_cad.c ****       }
 622:u8g2/csrc/u8x8_cad.c ****       u8x8->byte_cb(u8x8, U8X8_MSG_CAD_SEND_DATA, arg_int, p);
 623:u8g2/csrc/u8x8_cad.c ****       
 624:u8g2/csrc/u8x8_cad.c ****       break;
 625:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 626:u8g2/csrc/u8x8_cad.c ****       /* apply default i2c adr if required so that the start transfer msg can use this */
 627:u8g2/csrc/u8x8_cad.c ****       if ( u8x8->i2c_address == 255 )
 628:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x070;
 629:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 630:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 631:u8g2/csrc/u8x8_cad.c ****       in_transfer = 0;    
 632:u8g2/csrc/u8x8_cad.c ****       /* actual start is delayed, because we do not whether this is data or cmd transfer */
 633:u8g2/csrc/u8x8_cad.c ****       break;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 44


 634:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 635:u8g2/csrc/u8x8_cad.c ****       if ( in_transfer != 0 )
 636:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8);
 637:u8g2/csrc/u8x8_cad.c ****       in_transfer = 0;
 638:u8g2/csrc/u8x8_cad.c ****       break;
 639:u8g2/csrc/u8x8_cad.c ****     default:
 640:u8g2/csrc/u8x8_cad.c ****       return 0;
 641:u8g2/csrc/u8x8_cad.c ****   }
 642:u8g2/csrc/u8x8_cad.c ****   return 1;
 643:u8g2/csrc/u8x8_cad.c **** }
 1648              		.loc 1 643 0
 1649 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1650              	.LVL241:
 1651              	.L151:
 587:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 1652              		.loc 1 587 0
 1653 0030 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1654 0034 03F0FC03 		and	r3, r3, #252
 1655 0038 80F82030 		strb	r3, [r0, #32]
 588:u8g2/csrc/u8x8_cad.c ****       }
 1656              		.loc 1 588 0
 1657 003c FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1658              	.LVL242:
 1659 0040 EEE7     		b	.L142
 1660              	.LVL243:
 1661              	.L139:
 594:u8g2/csrc/u8x8_cad.c ****       {
 1662              		.loc 1 594 0
 1663 0042 2C4B     		ldr	r3, .L154
 1664 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1665 0046 6BB1     		cbz	r3, .L143
 599:u8g2/csrc/u8x8_cad.c **** 	  /* clear the lowest two bits of the adr */
 1666              		.loc 1 599 0
 1667 0048 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1668              	.LVL244:
 601:u8g2/csrc/u8x8_cad.c **** 	  u8x8_byte_StartTransfer(u8x8); 
 1669              		.loc 1 601 0
 1670 004c 95F92030 		ldrsb	r3, [r5, #32]
 1671 0050 23F00303 		bic	r3, r3, #3
 1672 0054 43F00203 		orr	r3, r3, #2
 1673 0058 85F82030 		strb	r3, [r5, #32]
 602:u8g2/csrc/u8x8_cad.c **** 	}
 1674              		.loc 1 602 0
 1675 005c 2846     		mov	r0, r5
 1676 005e FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1677              	.LVL245:
 1678 0062 09E0     		b	.L144
 1679              	.LVL246:
 1680              	.L143:
 608:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 1681              		.loc 1 608 0
 1682 0064 90F92030 		ldrsb	r3, [r0, #32]
 1683 0068 23F00303 		bic	r3, r3, #3
 1684 006c 43F00203 		orr	r3, r3, #2
 1685 0070 80F82030 		strb	r3, [r0, #32]
 609:u8g2/csrc/u8x8_cad.c ****       }
 1686              		.loc 1 609 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 45


 1687 0074 FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1688              	.LVL247:
 1689              	.L144:
 611:u8g2/csrc/u8x8_cad.c ****       
 1690              		.loc 1 611 0
 1691 0078 1E4B     		ldr	r3, .L154
 1692 007a 0122     		movs	r2, #1
 1693 007c 1A70     		strb	r2, [r3]
 1694              	.LVL248:
 614:u8g2/csrc/u8x8_cad.c ****       {
 1695              		.loc 1 614 0
 1696 007e 0EE0     		b	.L145
 1697              	.LVL249:
 1698              	.L146:
 616:u8g2/csrc/u8x8_cad.c **** 	arg_int-=24;
 1699              		.loc 1 616 0
 1700 0080 2F69     		ldr	r7, [r5, #16]
 1701 0082 3346     		mov	r3, r6
 1702 0084 1822     		movs	r2, #24
 1703 0086 1721     		movs	r1, #23
 1704 0088 2846     		mov	r0, r5
 1705 008a B847     		blx	r7
 1706              	.LVL250:
 617:u8g2/csrc/u8x8_cad.c **** 	p+=24;
 1707              		.loc 1 617 0
 1708 008c 183C     		subs	r4, r4, #24
 1709              	.LVL251:
 1710 008e E4B2     		uxtb	r4, r4
 1711              	.LVL252:
 618:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8); 
 1712              		.loc 1 618 0
 1713 0090 1836     		adds	r6, r6, #24
 1714              	.LVL253:
 619:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_StartTransfer(u8x8);
 1715              		.loc 1 619 0
 1716 0092 2846     		mov	r0, r5
 1717 0094 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1718              	.LVL254:
 620:u8g2/csrc/u8x8_cad.c ****       }
 1719              		.loc 1 620 0
 1720 0098 2846     		mov	r0, r5
 1721 009a FFF7FEFF 		bl	u8x8_byte_StartTransfer
 1722              	.LVL255:
 1723              	.L145:
 614:u8g2/csrc/u8x8_cad.c ****       {
 1724              		.loc 1 614 0
 1725 009e 182C     		cmp	r4, #24
 1726 00a0 EED8     		bhi	.L146
 622:u8g2/csrc/u8x8_cad.c ****       
 1727              		.loc 1 622 0
 1728 00a2 2F69     		ldr	r7, [r5, #16]
 1729 00a4 3346     		mov	r3, r6
 1730 00a6 2246     		mov	r2, r4
 1731 00a8 1721     		movs	r1, #23
 1732 00aa 2846     		mov	r0, r5
 1733 00ac B847     		blx	r7
 1734              	.LVL256:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 46


 642:u8g2/csrc/u8x8_cad.c **** }
 1735              		.loc 1 642 0
 1736 00ae 0120     		movs	r0, #1
 624:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_INIT:
 1737              		.loc 1 624 0
 1738 00b0 BDE7     		b	.L135
 1739              	.LVL257:
 1740              	.L136:
 627:u8g2/csrc/u8x8_cad.c **** 	u8x8->i2c_address = 0x070;
 1741              		.loc 1 627 0
 1742 00b2 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1743 00b6 FF2B     		cmp	r3, #255
 1744 00b8 05D0     		beq	.L152
 1745              	.L147:
 629:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_START_TRANSFER:
 1746              		.loc 1 629 0
 1747 00ba 2F69     		ldr	r7, [r5, #16]
 1748 00bc 3346     		mov	r3, r6
 1749 00be 2246     		mov	r2, r4
 1750 00c0 2846     		mov	r0, r5
 1751              	.LVL258:
 1752 00c2 B847     		blx	r7
 1753              	.LVL259:
 1754 00c4 B3E7     		b	.L135
 1755              	.LVL260:
 1756              	.L152:
 628:u8g2/csrc/u8x8_cad.c ****       return u8x8->byte_cb(u8x8, msg, arg_int, arg_ptr);
 1757              		.loc 1 628 0
 1758 00c6 7023     		movs	r3, #112
 1759 00c8 80F82030 		strb	r3, [r0, #32]
 1760 00cc F5E7     		b	.L147
 1761              	.L140:
 631:u8g2/csrc/u8x8_cad.c ****       /* actual start is delayed, because we do not whether this is data or cmd transfer */
 1762              		.loc 1 631 0
 1763 00ce 094B     		ldr	r3, .L154
 1764 00d0 0022     		movs	r2, #0
 1765 00d2 1A70     		strb	r2, [r3]
 642:u8g2/csrc/u8x8_cad.c **** }
 1766              		.loc 1 642 0
 1767 00d4 0120     		movs	r0, #1
 1768              	.LVL261:
 633:u8g2/csrc/u8x8_cad.c ****     case U8X8_MSG_CAD_END_TRANSFER:
 1769              		.loc 1 633 0
 1770 00d6 AAE7     		b	.L135
 1771              	.LVL262:
 1772              	.L141:
 635:u8g2/csrc/u8x8_cad.c **** 	u8x8_byte_EndTransfer(u8x8);
 1773              		.loc 1 635 0
 1774 00d8 064B     		ldr	r3, .L154
 1775 00da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1776 00dc 23B9     		cbnz	r3, .L153
 1777              	.LVL263:
 1778              	.L148:
 637:u8g2/csrc/u8x8_cad.c ****       break;
 1779              		.loc 1 637 0
 1780 00de 054B     		ldr	r3, .L154
 1781 00e0 0022     		movs	r2, #0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 47


 1782 00e2 1A70     		strb	r2, [r3]
 642:u8g2/csrc/u8x8_cad.c **** }
 1783              		.loc 1 642 0
 1784 00e4 0120     		movs	r0, #1
 638:u8g2/csrc/u8x8_cad.c ****     default:
 1785              		.loc 1 638 0
 1786 00e6 A2E7     		b	.L135
 1787              	.LVL264:
 1788              	.L153:
 636:u8g2/csrc/u8x8_cad.c ****       in_transfer = 0;
 1789              		.loc 1 636 0
 1790 00e8 FFF7FEFF 		bl	u8x8_byte_EndTransfer
 1791              	.LVL265:
 1792 00ec F7E7     		b	.L148
 1793              	.LVL266:
 1794              	.L149:
 640:u8g2/csrc/u8x8_cad.c ****   }
 1795              		.loc 1 640 0
 1796 00ee 0020     		movs	r0, #0
 1797              	.LVL267:
 1798 00f0 9DE7     		b	.L135
 1799              	.L155:
 1800 00f2 00BF     		.align	2
 1801              	.L154:
 1802 00f4 00000000 		.word	.LANCHOR2
 1803              		.cfi_endproc
 1804              	.LFE17:
 1806              		.section	.bss.buf.5099,"aw",%nobits
 1807              		.align	2
 1808              		.set	.LANCHOR0,. + 0
 1811              	buf.5099:
 1812 0000 00000000 		.space	16
 1812      00000000 
 1812      00000000 
 1812      00000000 
 1813              		.section	.bss.in_transfer.5168,"aw",%nobits
 1814              		.set	.LANCHOR1,. + 0
 1817              	in_transfer.5168:
 1818 0000 00       		.space	1
 1819              		.section	.bss.in_transfer.5187,"aw",%nobits
 1820              		.set	.LANCHOR2,. + 0
 1823              	in_transfer.5187:
 1824 0000 00       		.space	1
 1825              		.text
 1826              	.Letext0:
 1827              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 1828              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 1829              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 u8x8_cad.c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:16     .text.u8x8_i2c_data_transfer:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:22     .text.u8x8_i2c_data_transfer:0000000000000000 u8x8_i2c_data_transfer
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:68     .text.u8x8_cad_SendCmd:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:75     .text.u8x8_cad_SendCmd:0000000000000000 u8x8_cad_SendCmd
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:101    .text.u8x8_cad_SendArg:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:108    .text.u8x8_cad_SendArg:0000000000000000 u8x8_cad_SendArg
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:134    .text.u8x8_cad_SendMultipleArg:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:141    .text.u8x8_cad_SendMultipleArg:0000000000000000 u8x8_cad_SendMultipleArg
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:188    .text.u8x8_cad_SendData:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:195    .text.u8x8_cad_SendData:0000000000000000 u8x8_cad_SendData
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:222    .text.u8x8_cad_StartTransfer:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:229    .text.u8x8_cad_StartTransfer:0000000000000000 u8x8_cad_StartTransfer
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:254    .text.u8x8_cad_EndTransfer:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:261    .text.u8x8_cad_EndTransfer:0000000000000000 u8x8_cad_EndTransfer
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:286    .text.u8x8_cad_SendSequence:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:293    .text.u8x8_cad_SendSequence:0000000000000000 u8x8_cad_SendSequence
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:402    .text.u8x8_cad_empty:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:409    .text.u8x8_cad_empty:0000000000000000 u8x8_cad_empty
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:427    .text.u8x8_cad_empty:000000000000000e $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:433    .text.u8x8_cad_empty:0000000000000014 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:473    .text.u8x8_cad_110:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:480    .text.u8x8_cad_110:0000000000000000 u8x8_cad_110
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:508    .text.u8x8_cad_110:0000000000000018 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:514    .text.u8x8_cad_110:000000000000001e $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:575    .text.u8x8_cad_100:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:582    .text.u8x8_cad_100:0000000000000000 u8x8_cad_100
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:610    .text.u8x8_cad_100:0000000000000018 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:616    .text.u8x8_cad_100:000000000000001e $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:677    .text.u8x8_cad_001:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:684    .text.u8x8_cad_001:0000000000000000 u8x8_cad_001
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:712    .text.u8x8_cad_001:0000000000000018 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:718    .text.u8x8_cad_001:000000000000001e $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:779    .text.u8x8_cad_011:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:786    .text.u8x8_cad_011:0000000000000000 u8x8_cad_011
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:814    .text.u8x8_cad_011:0000000000000018 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:820    .text.u8x8_cad_011:000000000000001e $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:881    .text.u8x8_cad_st7920_spi:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:888    .text.u8x8_cad_st7920_spi:0000000000000000 u8x8_cad_st7920_spi
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:915    .text.u8x8_cad_st7920_spi:0000000000000014 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:921    .text.u8x8_cad_st7920_spi:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1104   .text.u8x8_cad_st7920_spi:0000000000000100 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1109   .text.u8x8_cad_ssd13xx_i2c:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1116   .text.u8x8_cad_ssd13xx_i2c:0000000000000000 u8x8_cad_ssd13xx_i2c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1143   .text.u8x8_cad_ssd13xx_i2c:0000000000000014 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1149   .text.u8x8_cad_ssd13xx_i2c:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1241   .text.u8x8_cad_st75256_i2c:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1248   .text.u8x8_cad_st75256_i2c:0000000000000000 u8x8_cad_st75256_i2c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1275   .text.u8x8_cad_st75256_i2c:0000000000000014 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1281   .text.u8x8_cad_st75256_i2c:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1396   .text.u8x8_cad_ld7032_i2c:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1403   .text.u8x8_cad_ld7032_i2c:0000000000000000 u8x8_cad_ld7032_i2c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1430   .text.u8x8_cad_ld7032_i2c:0000000000000014 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1436   .text.u8x8_cad_ld7032_i2c:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1584   .text.u8x8_cad_ld7032_i2c:00000000000000bc $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1589   .text.u8x8_cad_uc16xx_i2c:0000000000000000 $t
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s 			page 49


/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1596   .text.u8x8_cad_uc16xx_i2c:0000000000000000 u8x8_cad_uc16xx_i2c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1623   .text.u8x8_cad_uc16xx_i2c:0000000000000014 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1629   .text.u8x8_cad_uc16xx_i2c:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1802   .text.u8x8_cad_uc16xx_i2c:00000000000000f4 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1807   .bss.buf.5099:0000000000000000 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1811   .bss.buf.5099:0000000000000000 buf.5099
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1817   .bss.in_transfer.5168:0000000000000000 in_transfer.5168
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1818   .bss.in_transfer.5168:0000000000000000 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1823   .bss.in_transfer.5187:0000000000000000 in_transfer.5187
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//cc984wj3.s:1824   .bss.in_transfer.5187:0000000000000000 $d

UNDEFINED SYMBOLS
u8x8_byte_StartTransfer
u8x8_byte_SendByte
u8x8_byte_EndTransfer
u8x8_gpio_call
u8x8_byte_SetDC
u8x8_byte_SendBytes
