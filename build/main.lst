ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_gpio_and_delay_stm32,"ax",%progbits
  16              		.align	1
  17              		.global	u8g2_gpio_and_delay_stm32
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8g2_gpio_and_delay_stm32:
  24              	.LFB68:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   2:Src/main.c    **** #include "main.h"
   3:Src/main.c    **** #include "i2c.h"
   4:Src/main.c    **** #include "iwdg.h"
   5:Src/main.c    **** #include "usart.h"
   6:Src/main.c    **** #include "usb_device.h"
   7:Src/main.c    **** #include "gpio.h"
   8:Src/main.c    **** #include <stdlib.h>
   9:Src/main.c    **** #include <string.h>
  10:Src/main.c    **** #include <errno.h>
  11:Src/main.c    **** #include <stdio.h>
  12:Src/main.c    **** #include <unistd.h>
  13:Src/main.c    **** #include "u8g2.h"
  14:Src/main.c    **** #include "key.h"
  15:Src/main.c    **** #include "logo.h"
  16:Src/main.c    **** #include "main_screen.h"
  17:Src/main.c    **** #include "info_screen.h"
  18:Src/main.c    **** #include "output.h"
  19:Src/main.c    **** #include "input.h"
  20:Src/main.c    **** #include "clock_rtc.h"
  21:Src/main.c    **** #include "buzzer.h"
  22:Src/main.c    **** #include "spi.h"
  23:Src/main.c    **** #include "ir_decode.h"
  24:Src/main.c    **** #include "menu.h"
  25:Src/main.c    **** #include "system.h"
  26:Src/main.c    **** #include "sm5852.h"
  27:Src/main.c    **** 
  28:Src/main.c    **** int _write(int file, char *data, int len);
  29:Src/main.c    **** 
  30:Src/main.c    **** #define LCD_RST_1 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_SET)
  31:Src/main.c    **** #define LCD_RST_0 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_6, GPIO_PIN_RESET)
  32:Src/main.c    **** #define LCD_RS_1 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_SET)
  33:Src/main.c    **** #define LCD_RS_0 HAL_GPIO_WritePin(GPIOA, GPIO_PIN_4, GPIO_PIN_RESET)
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 2


  34:Src/main.c    **** #define USB_EN() HAL_GPIO_WritePin(GPIOA, GPIO_PIN_15, GPIO_PIN_SET)
  35:Src/main.c    **** 
  36:Src/main.c    **** void SystemClock_Config(void);
  37:Src/main.c    **** uint8_t u8g2_gpio_and_delay_stm32(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED ui
  38:Src/main.c    **** uint8_t u8x8_byte_4wire_hw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr);
  39:Src/main.c    **** 
  40:Src/main.c    **** u8g2_t u8g2;
  41:Src/main.c    **** SM5852_T sm5852_1;
  42:Src/main.c    **** SM5852_T sm5852_2;
  43:Src/main.c    **** 
  44:Src/main.c    **** int main(void)
  45:Src/main.c    **** {
  46:Src/main.c    ****   HAL_Init();
  47:Src/main.c    ****   SystemClock_Config();
  48:Src/main.c    ****   MX_GPIO_Init();
  49:Src/main.c    ****   MX_SPI1_Init();
  50:Src/main.c    ****   MX_IWDG_Init();
  51:Src/main.c    ****   MX_USART1_UART_Init();
  52:Src/main.c    ****   MX_USART2_UART_Init();
  53:Src/main.c    ****   sm5852_1.i2cHandle.Instance = I2C1;
  54:Src/main.c    ****   sm5852_2.i2cHandle.Instance = I2C2;
  55:Src/main.c    ****   SM5852_Init(&sm5852_1);
  56:Src/main.c    ****   SM5852_Init(&sm5852_2);
  57:Src/main.c    ****   NEC_Receiver_Init();
  58:Src/main.c    ****   MX_USB_DEVICE_Init();
  59:Src/main.c    ****   KeyInit();
  60:Src/main.c    ****   u8g2_Setup_st7920_s_128x64_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8g2_gpio_and_delay_stm32); 
  61:Src/main.c    ****   u8g2_InitDisplay(&u8g2);
  62:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
  63:Src/main.c    **** 
  64:Src/main.c    ****   LCD_RST_0;
  65:Src/main.c    ****   HAL_Delay(10);
  66:Src/main.c    ****   LCD_RST_1;
  67:Src/main.c    **** 
  68:Src/main.c    ****   Logo();
  69:Src/main.c    ****   HAL_Delay(500);
  70:Src/main.c    ****   BUTTON_Init();
  71:Src/main.c    ****   MX_TIM1_Init();
  72:Src/main.c    ****   Output_Init();
  73:Src/main.c    ****   Input_Init();
  74:Src/main.c    ****   buzzer_init();
  75:Src/main.c    ****   RTC_Init();
  76:Src/main.c    ****   System_Init();
  77:Src/main.c    ****   uint32_t timeRefesh = HAL_GetTick();
  78:Src/main.c    ****   uint32_t tick = HAL_GetTick();
  79:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
  80:Src/main.c    ****   while (1)
  81:Src/main.c    ****   {
  82:Src/main.c    ****     /* Debug measure pressure */
  83:Src/main.c    ****     // if(HAL_GetTick() - tick > 1000)
  84:Src/main.c    ****     // {
  85:Src/main.c    ****     //   printf("Pressure1: %.2f\n", sm5852_1.pressure);
  86:Src/main.c    ****     //   printf("Temp1: %.2f\n", sm5852_1.temp);
  87:Src/main.c    ****     //   printf("Pressure2: %.2f\n", sm5852_2.pressure);
  88:Src/main.c    ****     //   printf("Temp2: %.2f\n", sm5852_2.temp);
  89:Src/main.c    ****     //   tick = HAL_GetTick();
  90:Src/main.c    ****     // }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 3


  91:Src/main.c    ****     /* Init meansure Time exec program */
  92:Src/main.c    ****     uint32_t time = HAL_GetTick();
  93:Src/main.c    ****     System_Manager();
  94:Src/main.c    ****     SM5852_Manager(&sm5852_1);
  95:Src/main.c    ****     SM5852_Manager(&sm5852_2);
  96:Src/main.c    ****     NEC_Manager();
  97:Src/main.c    ****     BUTTON_Manage();
  98:Src/main.c    ****     KeyManage();
  99:Src/main.c    ****     Output_Manage();
 100:Src/main.c    ****     Input_Manage();
 101:Src/main.c    ****     handle_buzzer();
 102:Src/main.c    ****     /* print meansure Time exec program */
 103:Src/main.c    ****     //printf("Time ex: %d\n", HAL_GetTick() - time);
 104:Src/main.c    ****     HAL_IWDG_Refresh(&hiwdg);
 105:Src/main.c    ****     if (HAL_GetTick() - timeRefesh > 100)
 106:Src/main.c    ****     {
 107:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 108:Src/main.c    ****       timeRefesh = HAL_GetTick();
 109:Src/main.c    ****     }
 110:Src/main.c    ****   }
 111:Src/main.c    **** }
 112:Src/main.c    **** 
 113:Src/main.c    **** /**
 114:Src/main.c    ****   * @brief System Clock Configuration
 115:Src/main.c    ****   * @retval None
 116:Src/main.c    ****   */
 117:Src/main.c    **** void SystemClock_Config(void)
 118:Src/main.c    **** {
 119:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 122:Src/main.c    **** 
 123:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 124:Src/main.c    ****   */
 125:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI | RCC_OSCILLATORTYPE_HSE | RCC_OSCILLAT
 126:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 127:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 128:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 129:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 130:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 133:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 134:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 135:Src/main.c    ****   {
 136:Src/main.c    ****     Error_Handler();
 137:Src/main.c    ****   }
 138:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 139:Src/main.c    ****   */
 140:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 141:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 142:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 143:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 144:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 145:Src/main.c    **** 
 146:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 147:Src/main.c    ****   {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 4


 148:Src/main.c    ****     Error_Handler();
 149:Src/main.c    ****   }
 150:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USB | RCC_PERIPHCLK_RTC;
 151:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 152:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 153:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 154:Src/main.c    ****   {
 155:Src/main.c    ****     Error_Handler();
 156:Src/main.c    ****   }
 157:Src/main.c    **** 
 158:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 159:Src/main.c    **** 
 160:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 161:Src/main.c    **** 
 162:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 163:Src/main.c    **** }
 164:Src/main.c    **** 
 165:Src/main.c    **** /* USER CODE BEGIN 4 */
 166:Src/main.c    **** 
 167:Src/main.c    **** /* USER CODE END 4 */
 168:Src/main.c    **** uint8_t u8g2_gpio_and_delay_stm32(U8X8_UNUSED u8x8_t *u8x8, U8X8_UNUSED uint8_t msg, U8X8_UNUSED ui
 169:Src/main.c    **** {
  26              		.loc 1 169 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
 170:Src/main.c    ****   switch(msg)
  31              		.loc 1 170 0
  32 0000 4B29     		cmp	r1, #75
  33 0002 0FD1     		bne	.L6
 169:Src/main.c    ****   switch(msg)
  34              		.loc 1 169 0
  35 0004 08B5     		push	{r3, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 171:Src/main.c    ****   {
 172:Src/main.c    ****     //Function to define the logic level of the RESET line
 173:Src/main.c    ****     case U8X8_MSG_GPIO_RESET:
 174:Src/main.c    ****       if (arg_int) LCD_RST_1;
  40              		.loc 1 174 0
  41 0006 32B9     		cbnz	r2, .L11
 175:Src/main.c    ****       else LCD_RST_0;
  42              		.loc 1 175 0
  43 0008 0022     		movs	r2, #0
  44              	.LVL1:
  45 000a 4021     		movs	r1, #64
  46              	.LVL2:
  47 000c 0648     		ldr	r0, .L12
  48              	.LVL3:
  49 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
  50              	.LVL4:
 176:Src/main.c    ****       break;
 177:Src/main.c    ****     default:
 178:Src/main.c    ****       return 0; //A message was received which is not implemented, return 0 to indicate an error
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 5


 179:Src/main.c    ****   }
 180:Src/main.c    **** 
 181:Src/main.c    ****   return 1; // command processed successfully.
  51              		.loc 1 181 0
  52 0012 0120     		movs	r0, #1
  53              	.L2:
 182:Src/main.c    **** }
  54              		.loc 1 182 0
  55 0014 08BD     		pop	{r3, pc}
  56              	.LVL5:
  57              	.L11:
 174:Src/main.c    ****       else LCD_RST_0;
  58              		.loc 1 174 0 discriminator 1
  59 0016 0122     		movs	r2, #1
  60              	.LVL6:
  61 0018 4021     		movs	r1, #64
  62              	.LVL7:
  63 001a 0348     		ldr	r0, .L12
  64              	.LVL8:
  65 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
  66              	.LVL9:
 181:Src/main.c    **** }
  67              		.loc 1 181 0 discriminator 1
  68 0020 0120     		movs	r0, #1
  69 0022 F7E7     		b	.L2
  70              	.LVL10:
  71              	.L6:
  72              	.LCFI1:
  73              		.cfi_def_cfa_offset 0
  74              		.cfi_restore 3
  75              		.cfi_restore 14
 178:Src/main.c    ****   }
  76              		.loc 1 178 0
  77 0024 0020     		movs	r0, #0
  78              	.LVL11:
  79              		.loc 1 182 0
  80 0026 7047     		bx	lr
  81              	.L13:
  82              		.align	2
  83              	.L12:
  84 0028 00080140 		.word	1073809408
  85              		.cfi_endproc
  86              	.LFE68:
  88              		.section	.text.u8x8_byte_4wire_hw_spi,"ax",%progbits
  89              		.align	1
  90              		.global	u8x8_byte_4wire_hw_spi
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu softvfp
  96              	u8x8_byte_4wire_hw_spi:
  97              	.LFB69:
 183:Src/main.c    **** 
 184:Src/main.c    **** uint8_t u8x8_byte_4wire_hw_spi(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 185:Src/main.c    **** {
  98              		.loc 1 185 0
  99              		.cfi_startproc
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 6


 100              		@ args = 0, pretend = 0, frame = 8
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL12:
 103 0000 30B5     		push	{r4, r5, lr}
 104              	.LCFI2:
 105              		.cfi_def_cfa_offset 12
 106              		.cfi_offset 4, -12
 107              		.cfi_offset 5, -8
 108              		.cfi_offset 14, -4
 109 0002 83B0     		sub	sp, sp, #12
 110              	.LCFI3:
 111              		.cfi_def_cfa_offset 24
 186:Src/main.c    ****   uint8_t byte;
 187:Src/main.c    ****   uint8_t *data;
 188:Src/main.c    **** 
 189:Src/main.c    ****   switch (msg)
 112              		.loc 1 189 0
 113 0004 1829     		cmp	r1, #24
 114 0006 18D0     		beq	.L16
 115 0008 1446     		mov	r4, r2
 116 000a 1D46     		mov	r5, r3
 117 000c 1929     		cmp	r1, #25
 118 000e 1CD0     		beq	.L17
 119 0010 1729     		cmp	r1, #23
 120 0012 0DD0     		beq	.L18
 190:Src/main.c    ****   {
 191:Src/main.c    ****   case U8X8_MSG_BYTE_SEND:
 192:Src/main.c    ****     data = (uint8_t *)arg_ptr;
 193:Src/main.c    ****     while (arg_int > 0)
 194:Src/main.c    ****     {
 195:Src/main.c    ****       byte = *data;
 196:Src/main.c    ****       data++;
 197:Src/main.c    ****       arg_int--;
 198:Src/main.c    ****       HAL_SPI_Transmit(&hspi1, &byte, 1, 100);
 199:Src/main.c    ****     }
 200:Src/main.c    ****     break;
 201:Src/main.c    ****   case U8X8_MSG_BYTE_START_TRANSFER:
 202:Src/main.c    ****     //HAL_GPIO_WritePin(SPI1_CS_GPIO_Port, SPI1_CS_Pin, GPIO_PIN_SET);
 203:Src/main.c    ****     LCD_RS_1;
 204:Src/main.c    ****     __NOP(); // 21 ns
 205:Src/main.c    ****     break;
 206:Src/main.c    ****   case U8X8_MSG_BYTE_END_TRANSFER:
 207:Src/main.c    ****     __NOP(); // 21 ns
 208:Src/main.c    ****     //HAL_GPIO_WritePin(SPI1_CS_GPIO_Port, SPI1_CS_Pin, GPIO_PIN_RESET);
 209:Src/main.c    ****     LCD_RS_0;
 210:Src/main.c    ****     break;
 211:Src/main.c    ****   default:
 212:Src/main.c    ****     return 0;
 121              		.loc 1 212 0
 122 0014 0020     		movs	r0, #0
 123              	.LVL13:
 124 0016 0EE0     		b	.L15
 125              	.LVL14:
 126              	.L19:
 195:Src/main.c    ****       data++;
 127              		.loc 1 195 0
 128 0018 15F8013B 		ldrb	r3, [r5], #1	@ zero_extendqisi2
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 7


 129              	.LVL15:
 130 001c 02A9     		add	r1, sp, #8
 131 001e 01F8013D 		strb	r3, [r1, #-1]!
 132              	.LVL16:
 197:Src/main.c    ****       HAL_SPI_Transmit(&hspi1, &byte, 1, 100);
 133              		.loc 1 197 0
 134 0022 013C     		subs	r4, r4, #1
 135              	.LVL17:
 136 0024 E4B2     		uxtb	r4, r4
 137              	.LVL18:
 198:Src/main.c    ****     }
 138              		.loc 1 198 0
 139 0026 6423     		movs	r3, #100
 140 0028 0122     		movs	r2, #1
 141 002a 0C48     		ldr	r0, .L23
 142 002c FFF7FEFF 		bl	HAL_SPI_Transmit
 143              	.LVL19:
 144              	.L18:
 193:Src/main.c    ****     {
 145              		.loc 1 193 0
 146 0030 002C     		cmp	r4, #0
 147 0032 F1D1     		bne	.L19
 213:Src/main.c    ****   }
 214:Src/main.c    ****   return 1;
 148              		.loc 1 214 0
 149 0034 0120     		movs	r0, #1
 150              	.LVL20:
 151              	.L15:
 215:Src/main.c    **** }
 152              		.loc 1 215 0
 153 0036 03B0     		add	sp, sp, #12
 154              	.LCFI4:
 155              		.cfi_remember_state
 156              		.cfi_def_cfa_offset 12
 157              		@ sp needed
 158 0038 30BD     		pop	{r4, r5, pc}
 159              	.LVL21:
 160              	.L16:
 161              	.LCFI5:
 162              		.cfi_restore_state
 203:Src/main.c    ****     __NOP(); // 21 ns
 163              		.loc 1 203 0
 164 003a 0122     		movs	r2, #1
 165              	.LVL22:
 166 003c 1021     		movs	r1, #16
 167              	.LVL23:
 168 003e 0848     		ldr	r0, .L23+4
 169              	.LVL24:
 170 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 171              	.LVL25:
 172              	.LBB6:
 173              	.LBB7:
 174              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 8


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 9


  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 10


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 11


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 12


 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 13


 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 14


 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 175              		.loc 2 375 0
 176              		.syntax unified
 177              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 178 0044 00BF     		nop
 179              	@ 0 "" 2
 180              		.thumb
 181              		.syntax unified
 182              	.LBE7:
 183              	.LBE6:
 214:Src/main.c    **** }
 184              		.loc 1 214 0
 185 0046 0120     		movs	r0, #1
 186 0048 F5E7     		b	.L15
 187              	.LVL26:
 188              	.L17:
 189              	.LBB8:
 190              	.LBB9:
 191              		.loc 2 375 0
 192              		.syntax unified
 193              	@ 375 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 194 004a 00BF     		nop
 195              	@ 0 "" 2
 196              		.thumb
 197              		.syntax unified
 198              	.LBE9:
 199              	.LBE8:
 209:Src/main.c    ****     break;
 200              		.loc 1 209 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 15


 201 004c 0022     		movs	r2, #0
 202              	.LVL27:
 203 004e 1021     		movs	r1, #16
 204              	.LVL28:
 205 0050 0348     		ldr	r0, .L23+4
 206              	.LVL29:
 207 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 208              	.LVL30:
 214:Src/main.c    **** }
 209              		.loc 1 214 0
 210 0056 0120     		movs	r0, #1
 210:Src/main.c    ****   default:
 211              		.loc 1 210 0
 212 0058 EDE7     		b	.L15
 213              	.L24:
 214 005a 00BF     		.align	2
 215              	.L23:
 216 005c 00000000 		.word	hspi1
 217 0060 00080140 		.word	1073809408
 218              		.cfi_endproc
 219              	.LFE69:
 221              		.section	.text.Error_Handler,"ax",%progbits
 222              		.align	1
 223              		.global	Error_Handler
 224              		.syntax unified
 225              		.thumb
 226              		.thumb_func
 227              		.fpu softvfp
 229              	Error_Handler:
 230              	.LFB70:
 216:Src/main.c    **** 
 217:Src/main.c    **** void Error_Handler(void)
 218:Src/main.c    **** {
 231              		.loc 1 218 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI6:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 219:Src/main.c    ****   printf("Error!");
 240              		.loc 1 219 0
 241 0002 0248     		ldr	r0, .L27
 242 0004 FFF7FEFF 		bl	printf
 243              	.LVL31:
 220:Src/main.c    **** }
 244              		.loc 1 220 0
 245 0008 08BD     		pop	{r3, pc}
 246              	.L28:
 247 000a 00BF     		.align	2
 248              	.L27:
 249 000c 00000000 		.word	.LC0
 250              		.cfi_endproc
 251              	.LFE70:
 253              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 16


 254              		.align	1
 255              		.global	SystemClock_Config
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu softvfp
 261              	SystemClock_Config:
 262              	.LFB67:
 118:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 263              		.loc 1 118 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 88
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267 0000 00B5     		push	{lr}
 268              	.LCFI7:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 14, -4
 271 0002 97B0     		sub	sp, sp, #92
 272              	.LCFI8:
 273              		.cfi_def_cfa_offset 96
 119:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 274              		.loc 1 119 0
 275 0004 0023     		movs	r3, #0
 276 0006 0E93     		str	r3, [sp, #56]
 277 0008 1193     		str	r3, [sp, #68]
 120:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 278              		.loc 1 120 0
 279 000a 0793     		str	r3, [sp, #28]
 280 000c 0893     		str	r3, [sp, #32]
 281 000e 0993     		str	r3, [sp, #36]
 282 0010 0A93     		str	r3, [sp, #40]
 283 0012 0B93     		str	r3, [sp, #44]
 121:Src/main.c    **** 
 284              		.loc 1 121 0
 285 0014 0193     		str	r3, [sp, #4]
 286 0016 0293     		str	r3, [sp, #8]
 287 0018 0393     		str	r3, [sp, #12]
 288 001a 0493     		str	r3, [sp, #16]
 289 001c 0593     		str	r3, [sp, #20]
 290 001e 0693     		str	r3, [sp, #24]
 125:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 291              		.loc 1 125 0
 292 0020 0D23     		movs	r3, #13
 293 0022 0C93     		str	r3, [sp, #48]
 126:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 294              		.loc 1 126 0
 295 0024 4FF48032 		mov	r2, #65536
 296 0028 0D92     		str	r2, [sp, #52]
 128:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 297              		.loc 1 128 0
 298 002a 0123     		movs	r3, #1
 299 002c 1093     		str	r3, [sp, #64]
 129:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 300              		.loc 1 129 0
 301 002e 1293     		str	r3, [sp, #72]
 130:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 302              		.loc 1 130 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 17


 303 0030 0F93     		str	r3, [sp, #60]
 131:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 304              		.loc 1 131 0
 305 0032 0223     		movs	r3, #2
 306 0034 1393     		str	r3, [sp, #76]
 132:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 307              		.loc 1 132 0
 308 0036 1492     		str	r2, [sp, #80]
 133:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 309              		.loc 1 133 0
 310 0038 4FF4E013 		mov	r3, #1835008
 311 003c 1593     		str	r3, [sp, #84]
 134:Src/main.c    ****   {
 312              		.loc 1 134 0
 313 003e 0CA8     		add	r0, sp, #48
 314 0040 FFF7FEFF 		bl	HAL_RCC_OscConfig
 315              	.LVL32:
 316 0044 60BB     		cbnz	r0, .L34
 317              	.L30:
 140:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 318              		.loc 1 140 0
 319 0046 0F23     		movs	r3, #15
 320 0048 0793     		str	r3, [sp, #28]
 141:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 321              		.loc 1 141 0
 322 004a 0221     		movs	r1, #2
 323 004c 0891     		str	r1, [sp, #32]
 142:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 324              		.loc 1 142 0
 325 004e 0023     		movs	r3, #0
 326 0050 0993     		str	r3, [sp, #36]
 143:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 327              		.loc 1 143 0
 328 0052 4FF48062 		mov	r2, #1024
 329 0056 0A92     		str	r2, [sp, #40]
 144:Src/main.c    **** 
 330              		.loc 1 144 0
 331 0058 0B93     		str	r3, [sp, #44]
 146:Src/main.c    ****   {
 332              		.loc 1 146 0
 333 005a 07A8     		add	r0, sp, #28
 334 005c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 335              	.LVL33:
 336 0060 08BB     		cbnz	r0, .L35
 337              	.L31:
 150:Src/main.c    ****   PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLL_DIV1_5;
 338              		.loc 1 150 0
 339 0062 1123     		movs	r3, #17
 340 0064 0193     		str	r3, [sp, #4]
 151:Src/main.c    ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 341              		.loc 1 151 0
 342 0066 0023     		movs	r3, #0
 343 0068 0693     		str	r3, [sp, #24]
 152:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 344              		.loc 1 152 0
 345 006a 4FF48073 		mov	r3, #256
 346 006e 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 18


 153:Src/main.c    ****   {
 347              		.loc 1 153 0
 348 0070 01A8     		add	r0, sp, #4
 349 0072 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 350              	.LVL34:
 351 0076 C8B9     		cbnz	r0, .L36
 352              	.L32:
 158:Src/main.c    **** 
 353              		.loc 1 158 0
 354 0078 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 355              	.LVL35:
 356 007c 0D4B     		ldr	r3, .L37
 357 007e A3FB0030 		umull	r3, r0, r3, r0
 358 0082 8009     		lsrs	r0, r0, #6
 359 0084 FFF7FEFF 		bl	HAL_SYSTICK_Config
 360              	.LVL36:
 160:Src/main.c    **** 
 361              		.loc 1 160 0
 362 0088 0420     		movs	r0, #4
 363 008a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 364              	.LVL37:
 162:Src/main.c    **** }
 365              		.loc 1 162 0
 366 008e 0022     		movs	r2, #0
 367 0090 1146     		mov	r1, r2
 368 0092 4FF0FF30 		mov	r0, #-1
 369 0096 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 370              	.LVL38:
 163:Src/main.c    **** 
 371              		.loc 1 163 0
 372 009a 17B0     		add	sp, sp, #92
 373              	.LCFI9:
 374              		.cfi_remember_state
 375              		.cfi_def_cfa_offset 4
 376              		@ sp needed
 377 009c 5DF804FB 		ldr	pc, [sp], #4
 378              	.L34:
 379              	.LCFI10:
 380              		.cfi_restore_state
 136:Src/main.c    ****   }
 381              		.loc 1 136 0
 382 00a0 FFF7FEFF 		bl	Error_Handler
 383              	.LVL39:
 384 00a4 CFE7     		b	.L30
 385              	.L35:
 148:Src/main.c    ****   }
 386              		.loc 1 148 0
 387 00a6 FFF7FEFF 		bl	Error_Handler
 388              	.LVL40:
 389 00aa DAE7     		b	.L31
 390              	.L36:
 155:Src/main.c    ****   }
 391              		.loc 1 155 0
 392 00ac FFF7FEFF 		bl	Error_Handler
 393              	.LVL41:
 394 00b0 E2E7     		b	.L32
 395              	.L38:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 19


 396 00b2 00BF     		.align	2
 397              	.L37:
 398 00b4 D34D6210 		.word	274877907
 399              		.cfi_endproc
 400              	.LFE67:
 402              		.section	.text.main,"ax",%progbits
 403              		.align	1
 404              		.global	main
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu softvfp
 410              	main:
 411              	.LFB66:
  45:Src/main.c    ****   HAL_Init();
 412              		.loc 1 45 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 38B5     		push	{r3, r4, r5, lr}
 417              	.LCFI11:
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 3, -16
 420              		.cfi_offset 4, -12
 421              		.cfi_offset 5, -8
 422              		.cfi_offset 14, -4
  46:Src/main.c    ****   SystemClock_Config();
 423              		.loc 1 46 0
 424 0002 FFF7FEFF 		bl	HAL_Init
 425              	.LVL42:
  47:Src/main.c    ****   MX_GPIO_Init();
 426              		.loc 1 47 0
 427 0006 FFF7FEFF 		bl	SystemClock_Config
 428              	.LVL43:
  48:Src/main.c    ****   MX_SPI1_Init();
 429              		.loc 1 48 0
 430 000a FFF7FEFF 		bl	MX_GPIO_Init
 431              	.LVL44:
  49:Src/main.c    ****   MX_IWDG_Init();
 432              		.loc 1 49 0
 433 000e FFF7FEFF 		bl	MX_SPI1_Init
 434              	.LVL45:
  50:Src/main.c    ****   MX_USART1_UART_Init();
 435              		.loc 1 50 0
 436 0012 FFF7FEFF 		bl	MX_IWDG_Init
 437              	.LVL46:
  51:Src/main.c    ****   MX_USART2_UART_Init();
 438              		.loc 1 51 0
 439 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 440              	.LVL47:
  52:Src/main.c    ****   sm5852_1.i2cHandle.Instance = I2C1;
 441              		.loc 1 52 0
 442 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 443              	.LVL48:
  53:Src/main.c    ****   sm5852_2.i2cHandle.Instance = I2C2;
 444              		.loc 1 53 0
 445 001e 3748     		ldr	r0, .L43
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 20


 446 0020 374B     		ldr	r3, .L43+4
 447 0022 0361     		str	r3, [r0, #16]
  54:Src/main.c    ****   SM5852_Init(&sm5852_1);
 448              		.loc 1 54 0
 449 0024 374C     		ldr	r4, .L43+8
 450 0026 03F58063 		add	r3, r3, #1024
 451 002a 2361     		str	r3, [r4, #16]
  55:Src/main.c    ****   SM5852_Init(&sm5852_2);
 452              		.loc 1 55 0
 453 002c FFF7FEFF 		bl	SM5852_Init
 454              	.LVL49:
  56:Src/main.c    ****   NEC_Receiver_Init();
 455              		.loc 1 56 0
 456 0030 2046     		mov	r0, r4
 457 0032 FFF7FEFF 		bl	SM5852_Init
 458              	.LVL50:
  57:Src/main.c    ****   MX_USB_DEVICE_Init();
 459              		.loc 1 57 0
 460 0036 FFF7FEFF 		bl	NEC_Receiver_Init
 461              	.LVL51:
  58:Src/main.c    ****   KeyInit();
 462              		.loc 1 58 0
 463 003a FFF7FEFF 		bl	MX_USB_DEVICE_Init
 464              	.LVL52:
  59:Src/main.c    ****   u8g2_Setup_st7920_s_128x64_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8g2_gpio_and_delay_stm32); 
 465              		.loc 1 59 0
 466 003e FFF7FEFF 		bl	KeyInit
 467              	.LVL53:
  60:Src/main.c    ****   u8g2_InitDisplay(&u8g2);
 468              		.loc 1 60 0
 469 0042 314D     		ldr	r5, .L43+12
 470 0044 314B     		ldr	r3, .L43+16
 471 0046 324A     		ldr	r2, .L43+20
 472 0048 3249     		ldr	r1, .L43+24
 473 004a 2846     		mov	r0, r5
 474 004c FFF7FEFF 		bl	u8g2_Setup_st7920_s_128x64_f
 475              	.LVL54:
  61:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 476              		.loc 1 61 0
 477 0050 2846     		mov	r0, r5
 478 0052 FFF7FEFF 		bl	u8x8_InitDisplay
 479              	.LVL55:
  62:Src/main.c    **** 
 480              		.loc 1 62 0
 481 0056 0021     		movs	r1, #0
 482 0058 2846     		mov	r0, r5
 483 005a FFF7FEFF 		bl	u8x8_SetPowerSave
 484              	.LVL56:
  64:Src/main.c    ****   HAL_Delay(10);
 485              		.loc 1 64 0
 486 005e 2E4C     		ldr	r4, .L43+28
 487 0060 0022     		movs	r2, #0
 488 0062 4021     		movs	r1, #64
 489 0064 2046     		mov	r0, r4
 490 0066 FFF7FEFF 		bl	HAL_GPIO_WritePin
 491              	.LVL57:
  65:Src/main.c    ****   LCD_RST_1;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 21


 492              		.loc 1 65 0
 493 006a 0A20     		movs	r0, #10
 494 006c FFF7FEFF 		bl	HAL_Delay
 495              	.LVL58:
  66:Src/main.c    **** 
 496              		.loc 1 66 0
 497 0070 0122     		movs	r2, #1
 498 0072 4021     		movs	r1, #64
 499 0074 2046     		mov	r0, r4
 500 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 501              	.LVL59:
  68:Src/main.c    ****   HAL_Delay(500);
 502              		.loc 1 68 0
 503 007a FFF7FEFF 		bl	Logo
 504              	.LVL60:
  69:Src/main.c    ****   BUTTON_Init();
 505              		.loc 1 69 0
 506 007e 4FF4FA70 		mov	r0, #500
 507 0082 FFF7FEFF 		bl	HAL_Delay
 508              	.LVL61:
  70:Src/main.c    ****   MX_TIM1_Init();
 509              		.loc 1 70 0
 510 0086 FFF7FEFF 		bl	BUTTON_Init
 511              	.LVL62:
  71:Src/main.c    ****   Output_Init();
 512              		.loc 1 71 0
 513 008a FFF7FEFF 		bl	MX_TIM1_Init
 514              	.LVL63:
  72:Src/main.c    ****   Input_Init();
 515              		.loc 1 72 0
 516 008e FFF7FEFF 		bl	Output_Init
 517              	.LVL64:
  73:Src/main.c    ****   buzzer_init();
 518              		.loc 1 73 0
 519 0092 FFF7FEFF 		bl	Input_Init
 520              	.LVL65:
  74:Src/main.c    ****   RTC_Init();
 521              		.loc 1 74 0
 522 0096 FFF7FEFF 		bl	buzzer_init
 523              	.LVL66:
  75:Src/main.c    ****   System_Init();
 524              		.loc 1 75 0
 525 009a FFF7FEFF 		bl	RTC_Init
 526              	.LVL67:
  76:Src/main.c    ****   uint32_t timeRefesh = HAL_GetTick();
 527              		.loc 1 76 0
 528 009e FFF7FEFF 		bl	System_Init
 529              	.LVL68:
  77:Src/main.c    ****   uint32_t tick = HAL_GetTick();
 530              		.loc 1 77 0
 531 00a2 FFF7FEFF 		bl	HAL_GetTick
 532              	.LVL69:
 533 00a6 0446     		mov	r4, r0
 534              	.LVL70:
  78:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 535              		.loc 1 78 0
 536 00a8 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 22


 537              	.LVL71:
  79:Src/main.c    ****   while (1)
 538              		.loc 1 79 0
 539 00ac 2846     		mov	r0, r5
 540 00ae FFF7FEFF 		bl	u8g2_ClearBuffer
 541              	.LVL72:
 542              	.L40:
 543              	.LBB10:
  92:Src/main.c    ****     System_Manager();
 544              		.loc 1 92 0
 545 00b2 FFF7FEFF 		bl	HAL_GetTick
 546              	.LVL73:
  93:Src/main.c    ****     SM5852_Manager(&sm5852_1);
 547              		.loc 1 93 0
 548 00b6 FFF7FEFF 		bl	System_Manager
 549              	.LVL74:
  94:Src/main.c    ****     SM5852_Manager(&sm5852_2);
 550              		.loc 1 94 0
 551 00ba 1048     		ldr	r0, .L43
 552 00bc FFF7FEFF 		bl	SM5852_Manager
 553              	.LVL75:
  95:Src/main.c    ****     NEC_Manager();
 554              		.loc 1 95 0
 555 00c0 1048     		ldr	r0, .L43+8
 556 00c2 FFF7FEFF 		bl	SM5852_Manager
 557              	.LVL76:
  96:Src/main.c    ****     BUTTON_Manage();
 558              		.loc 1 96 0
 559 00c6 FFF7FEFF 		bl	NEC_Manager
 560              	.LVL77:
  97:Src/main.c    ****     KeyManage();
 561              		.loc 1 97 0
 562 00ca FFF7FEFF 		bl	BUTTON_Manage
 563              	.LVL78:
  98:Src/main.c    ****     Output_Manage();
 564              		.loc 1 98 0
 565 00ce FFF7FEFF 		bl	KeyManage
 566              	.LVL79:
  99:Src/main.c    ****     Input_Manage();
 567              		.loc 1 99 0
 568 00d2 FFF7FEFF 		bl	Output_Manage
 569              	.LVL80:
 100:Src/main.c    ****     handle_buzzer();
 570              		.loc 1 100 0
 571 00d6 FFF7FEFF 		bl	Input_Manage
 572              	.LVL81:
 101:Src/main.c    ****     /* print meansure Time exec program */
 573              		.loc 1 101 0
 574 00da FFF7FEFF 		bl	handle_buzzer
 575              	.LVL82:
 104:Src/main.c    ****     if (HAL_GetTick() - timeRefesh > 100)
 576              		.loc 1 104 0
 577 00de 0F48     		ldr	r0, .L43+32
 578 00e0 FFF7FEFF 		bl	HAL_IWDG_Refresh
 579              	.LVL83:
 105:Src/main.c    ****     {
 580              		.loc 1 105 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 23


 581 00e4 FFF7FEFF 		bl	HAL_GetTick
 582              	.LVL84:
 583 00e8 001B     		subs	r0, r0, r4
 584 00ea 6428     		cmp	r0, #100
 585 00ec E1D9     		bls	.L40
 107:Src/main.c    ****       timeRefesh = HAL_GetTick();
 586              		.loc 1 107 0
 587 00ee 0648     		ldr	r0, .L43+12
 588 00f0 FFF7FEFF 		bl	u8g2_SendBuffer
 589              	.LVL85:
 108:Src/main.c    ****     }
 590              		.loc 1 108 0
 591 00f4 FFF7FEFF 		bl	HAL_GetTick
 592              	.LVL86:
 593 00f8 0446     		mov	r4, r0
 594              	.LVL87:
 595 00fa DAE7     		b	.L40
 596              	.L44:
 597              		.align	2
 598              	.L43:
 599 00fc 00000000 		.word	sm5852_1
 600 0100 00540040 		.word	1073763328
 601 0104 00000000 		.word	sm5852_2
 602 0108 00000000 		.word	u8g2
 603 010c 00000000 		.word	u8g2_gpio_and_delay_stm32
 604 0110 00000000 		.word	u8x8_byte_4wire_hw_spi
 605 0114 00000000 		.word	u8g2_cb_r0
 606 0118 00080140 		.word	1073809408
 607 011c 00000000 		.word	hiwdg
 608              	.LBE10:
 609              		.cfi_endproc
 610              	.LFE66:
 612              		.section	.text._write,"ax",%progbits
 613              		.align	1
 614              		.global	_write
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu softvfp
 620              	_write:
 621              	.LFB71:
 221:Src/main.c    **** 
 222:Src/main.c    **** #ifdef USE_FULL_ASSERT
 223:Src/main.c    **** 
 224:Src/main.c    **** void assert_failed(uint8_t *file, uint32_t line)
 225:Src/main.c    **** {
 226:Src/main.c    **** 
 227:Src/main.c    **** }
 228:Src/main.c    **** #endif /* USE_FULL_ASSERT */
 229:Src/main.c    **** 
 230:Src/main.c    **** int _write(int file, char *data, int len)
 231:Src/main.c    **** {
 622              		.loc 1 231 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL88:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 24


 627 0000 08B5     		push	{r3, lr}
 628              	.LCFI12:
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 3, -8
 631              		.cfi_offset 14, -4
 232:Src/main.c    ****   if ((file != STDOUT_FILENO) && (file != STDERR_FILENO))
 632              		.loc 1 232 0
 633 0002 0138     		subs	r0, r0, #1
 634              	.LVL89:
 635 0004 0128     		cmp	r0, #1
 636 0006 06D8     		bhi	.L49
 637 0008 0B46     		mov	r3, r1
 233:Src/main.c    ****   {
 234:Src/main.c    ****     errno = EBADF;
 235:Src/main.c    ****     return -1;
 236:Src/main.c    ****   }
 237:Src/main.c    ****   uint8_t status = CDC_Transmit_FS((uint8_t *)data, len);
 638              		.loc 1 237 0
 639 000a 1146     		mov	r1, r2
 640              	.LVL90:
 641 000c 1846     		mov	r0, r3
 642              	.LVL91:
 643 000e FFF7FEFF 		bl	CDC_Transmit_FS
 644              	.LVL92:
 645 0012 C0B2     		uxtb	r0, r0
 646              	.LVL93:
 647              	.L45:
 238:Src/main.c    ****   return status;
 239:Src/main.c    **** }...
 648              		.loc 1 239 0
 649 0014 08BD     		pop	{r3, pc}
 650              	.LVL94:
 651              	.L49:
 234:Src/main.c    ****     errno = EBADF;
 652              		.loc 1 234 0
 653 0016 FFF7FEFF 		bl	__errno
 654              	.LVL95:
 655 001a 0923     		movs	r3, #9
 656 001c 0360     		str	r3, [r0]
 235:Src/main.c    ****     return -1;
 657              		.loc 1 235 0
 658 001e 4FF0FF30 		mov	r0, #-1
 659 0022 F7E7     		b	.L45
 660              		.cfi_endproc
 661              	.LFE71:
 663              		.comm	sm5852_2,100,4
 664              		.comm	sm5852_1,100,4
 665              		.comm	u8g2,128,4
 666              		.comm	bmp_temp,8,4
 667              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 668              		.align	2
 669              	.LC0:
 670 0000 4572726F 		.ascii	"Error!\000"
 670      722100
 671              		.text
 672              	.Letext0:
 673              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 25


 674              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 675              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 676              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 677              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 678              		.file 8 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 679              		.file 9 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 680              		.file 10 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include
 681              		.file 11 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 682              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 683              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 684              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 685              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 686              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 687              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 688              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_iwdg.h"
 689              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 690              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 691              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 692              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 693              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 694              		.file 24 "u8g2/csrc/u8x8.h"
 695              		.file 25 "u8g2/csrc/u8g2.h"
 696              		.file 26 "Inc/main.h"
 697              		.file 27 "Inc/i2c.h"
 698              		.file 28 "Inc/iwdg.h"
 699              		.file 29 "Inc/usart.h"
 700              		.file 30 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 701              		.file 31 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/errno.h"
 702              		.file 32 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/unistd.h"
 703              		.file 33 "Inc/user_bitmap.h"
 704              		.file 34 "Inc/main_screen.h"
 705              		.file 35 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/time.h"
 706              		.file 36 "Inc/clock_rtc.h"
 707              		.file 37 "Inc/info_screen.h"
 708              		.file 38 "Inc/buzzer.h"
 709              		.file 39 "Inc/spi.h"
 710              		.file 40 "Inc/ir_decode.h"
 711              		.file 41 "Inc/menu.h"
 712              		.file 42 "Inc/system.h"
 713              		.file 43 "Inc/sm5852.h"
 714              		.file 44 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdio.h"
 715              		.file 45 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 716              		.file 46 "Inc/key.h"
 717              		.file 47 "Inc/output.h"
 718              		.file 48 "Inc/input.h"
 719              		.file 49 "Inc/gpio.h"
 720              		.file 50 "Inc/usb_device.h"
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:16     .text.u8g2_gpio_and_delay_stm32:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:23     .text.u8g2_gpio_and_delay_stm32:0000000000000000 u8g2_gpio_and_delay_stm32
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:84     .text.u8g2_gpio_and_delay_stm32:0000000000000028 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:89     .text.u8x8_byte_4wire_hw_spi:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:96     .text.u8x8_byte_4wire_hw_spi:0000000000000000 u8x8_byte_4wire_hw_spi
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:216    .text.u8x8_byte_4wire_hw_spi:000000000000005c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:222    .text.Error_Handler:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:229    .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:249    .text.Error_Handler:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:254    .text.SystemClock_Config:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:261    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:398    .text.SystemClock_Config:00000000000000b4 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:403    .text.main:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:410    .text.main:0000000000000000 main
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:599    .text.main:00000000000000fc $d
                            *COM*:0000000000000064 sm5852_1
                            *COM*:0000000000000064 sm5852_2
                            *COM*:0000000000000080 u8g2
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:613    .text._write:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:620    .text._write:0000000000000000 _write
                            *COM*:0000000000000008 bmp_temp
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s:668    .rodata.Error_Handler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_SPI_Transmit
hspi1
printf
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_SPI1_Init
MX_IWDG_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
SM5852_Init
NEC_Receiver_Init
MX_USB_DEVICE_Init
KeyInit
u8g2_Setup_st7920_s_128x64_f
u8x8_InitDisplay
u8x8_SetPowerSave
HAL_Delay
Logo
BUTTON_Init
MX_TIM1_Init
Output_Init
Input_Init
buzzer_init
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccd0RYik.s 			page 27


RTC_Init
System_Init
HAL_GetTick
u8g2_ClearBuffer
System_Manager
SM5852_Manager
NEC_Manager
BUTTON_Manage
KeyManage
Output_Manage
Input_Manage
handle_buzzer
HAL_IWDG_Refresh
u8g2_SendBuffer
u8g2_cb_r0
hiwdg
CDC_Transmit_FS
__errno
