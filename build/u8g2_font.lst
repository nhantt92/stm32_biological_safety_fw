ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_font.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_font_get_byte,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	u8g2_font_get_byte:
  23              	.LFB0:
  24              		.file 1 "u8g2/csrc/u8g2_font.c"
   1:u8g2/csrc/u8g2_font.c **** /*
   2:u8g2/csrc/u8g2_font.c **** 
   3:u8g2/csrc/u8g2_font.c ****   u8g2_font.c
   4:u8g2/csrc/u8g2_font.c **** 
   5:u8g2/csrc/u8g2_font.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8g2_font.c **** 
   7:u8g2/csrc/u8g2_font.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8g2_font.c ****   All rights reserved.
   9:u8g2/csrc/u8g2_font.c **** 
  10:u8g2/csrc/u8g2_font.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8g2_font.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8g2_font.c **** 
  13:u8g2/csrc/u8g2_font.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8g2_font.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8g2_font.c ****     
  16:u8g2/csrc/u8g2_font.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8g2_font.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8g2_font.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8g2_font.c **** 
  20:u8g2/csrc/u8g2_font.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8g2_font.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8g2_font.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8g2_font.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8g2_font.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8g2_font.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8g2_font.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8g2_font.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8g2_font.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8g2_font.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8g2_font.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8g2_font.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8g2/csrc/u8g2_font.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8g2_font.c **** 
  34:u8g2/csrc/u8g2_font.c **** */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 2


  35:u8g2/csrc/u8g2_font.c **** 
  36:u8g2/csrc/u8g2_font.c **** #include "u8g2.h"
  37:u8g2/csrc/u8g2_font.c **** 
  38:u8g2/csrc/u8g2_font.c **** /* size of the font data structure, there is no struct or class... */
  39:u8g2/csrc/u8g2_font.c **** /* this is the size for the new font format */
  40:u8g2/csrc/u8g2_font.c **** #define U8G2_FONT_DATA_STRUCT_SIZE 23
  41:u8g2/csrc/u8g2_font.c **** 
  42:u8g2/csrc/u8g2_font.c **** /*
  43:u8g2/csrc/u8g2_font.c ****   font data:
  44:u8g2/csrc/u8g2_font.c **** 
  45:u8g2/csrc/u8g2_font.c ****   offset	bytes	description
  46:u8g2/csrc/u8g2_font.c ****   0		1		glyph_cnt		number of glyphs
  47:u8g2/csrc/u8g2_font.c ****   1		1		bbx_mode	0: proportional, 1: common height, 2: monospace, 3: multiple of 8
  48:u8g2/csrc/u8g2_font.c ****   2		1		bits_per_0	glyph rle parameter
  49:u8g2/csrc/u8g2_font.c ****   3		1		bits_per_1	glyph rle parameter
  50:u8g2/csrc/u8g2_font.c **** 
  51:u8g2/csrc/u8g2_font.c ****   4		1		bits_per_char_width		glyph rle parameter
  52:u8g2/csrc/u8g2_font.c ****   5		1		bits_per_char_height	glyph rle parameter
  53:u8g2/csrc/u8g2_font.c ****   6		1		bits_per_char_x		glyph rle parameter
  54:u8g2/csrc/u8g2_font.c ****   7		1		bits_per_char_y		glyph rle parameter
  55:u8g2/csrc/u8g2_font.c ****   8		1		bits_per_delta_x		glyph rle parameter
  56:u8g2/csrc/u8g2_font.c **** 
  57:u8g2/csrc/u8g2_font.c ****   9		1		max_char_width
  58:u8g2/csrc/u8g2_font.c ****   10		1		max_char_height
  59:u8g2/csrc/u8g2_font.c ****   11		1		x offset
  60:u8g2/csrc/u8g2_font.c ****   12		1		y offset (descent)
  61:u8g2/csrc/u8g2_font.c ****   
  62:u8g2/csrc/u8g2_font.c ****   13		1		ascent (capital A)
  63:u8g2/csrc/u8g2_font.c ****   14		1		descent (lower g)
  64:u8g2/csrc/u8g2_font.c ****   15		1		ascent '('
  65:u8g2/csrc/u8g2_font.c ****   16		1		descent ')'
  66:u8g2/csrc/u8g2_font.c ****   
  67:u8g2/csrc/u8g2_font.c ****   17		1		start pos 'A' high byte
  68:u8g2/csrc/u8g2_font.c ****   18		1		start pos 'A' low byte
  69:u8g2/csrc/u8g2_font.c **** 
  70:u8g2/csrc/u8g2_font.c ****   19		1		start pos 'a' high byte
  71:u8g2/csrc/u8g2_font.c ****   20		1		start pos 'a' low byte
  72:u8g2/csrc/u8g2_font.c **** 
  73:u8g2/csrc/u8g2_font.c ****   21		1		start pos unicode high byte
  74:u8g2/csrc/u8g2_font.c ****   22		1		start pos unicode low byte
  75:u8g2/csrc/u8g2_font.c **** 
  76:u8g2/csrc/u8g2_font.c ****   Font build mode, 0: proportional, 1: common height, 2: monospace, 3: multiple of 8
  77:u8g2/csrc/u8g2_font.c **** 
  78:u8g2/csrc/u8g2_font.c ****   Font build mode 0:		
  79:u8g2/csrc/u8g2_font.c ****     - "t"
  80:u8g2/csrc/u8g2_font.c ****     - Ref height mode: U8G2_FONT_HEIGHT_MODE_TEXT, U8G2_FONT_HEIGHT_MODE_XTEXT or U8G2_FONT_HEIGHT_
  81:u8g2/csrc/u8g2_font.c ****     - use in transparent mode only (does not look good in solid mode)
  82:u8g2/csrc/u8g2_font.c ****     - most compact format
  83:u8g2/csrc/u8g2_font.c ****     - different font heights possible
  84:u8g2/csrc/u8g2_font.c ****     
  85:u8g2/csrc/u8g2_font.c ****   Font build mode 1:		
  86:u8g2/csrc/u8g2_font.c ****     - "h"
  87:u8g2/csrc/u8g2_font.c ****     - Ref height mode: U8G2_FONT_HEIGHT_MODE_ALL
  88:u8g2/csrc/u8g2_font.c ****     - transparent or solid mode
  89:u8g2/csrc/u8g2_font.c ****     - The height of the glyphs depend on the largest glyph in the font. This means font height depe
  90:u8g2/csrc/u8g2_font.c **** 
  91:u8g2/csrc/u8g2_font.c **** */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 3


  92:u8g2/csrc/u8g2_font.c **** 
  93:u8g2/csrc/u8g2_font.c **** /* use case: What is the width and the height of the minimal box into which string s fints? */
  94:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrSize(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height)
  95:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrSizeP(const void *font, const char *s, u8g2_uint_t *width, u8g2_uint_t *height
  96:u8g2/csrc/u8g2_font.c **** 
  97:u8g2/csrc/u8g2_font.c **** /* use case: lower left edge of a minimal box is known, what is the correct x, y position for the s
  98:u8g2/csrc/u8g2_font.c **** void u8g2_font_AdjustXYToDraw(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y);
  99:u8g2/csrc/u8g2_font.c **** void u8g2_font_AdjustXYToDrawP(const void *font, const char *s, u8g2_uint_t *x, u8g2_uint_t *y);
 100:u8g2/csrc/u8g2_font.c **** 
 101:u8g2/csrc/u8g2_font.c **** /* use case: Baseline origin known, return minimal box */
 102:u8g2/csrc/u8g2_font.c **** void u8g2_font_GetStrMinBox(u8g2_t *u8g2, const void *font, const char *s, u8g2_uint_t *x, u8g2_uin
 103:u8g2/csrc/u8g2_font.c **** 
 104:u8g2/csrc/u8g2_font.c **** /* procedures */
 105:u8g2/csrc/u8g2_font.c **** 
 106:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 107:u8g2/csrc/u8g2_font.c **** /* low level byte and word access */
 108:u8g2/csrc/u8g2_font.c **** 
 109:u8g2/csrc/u8g2_font.c **** /* removed NOINLINE, because it leads to smaller code, might also be faster */
 110:u8g2/csrc/u8g2_font.c **** //static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset) U8G2_NOINLINE;
 111:u8g2/csrc/u8g2_font.c **** static uint8_t u8g2_font_get_byte(const uint8_t *font, uint8_t offset)
 112:u8g2/csrc/u8g2_font.c **** {
  25              		.loc 1 112 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              		@ link register save eliminated.
  30              	.LVL0:
 113:u8g2/csrc/u8g2_font.c ****   font += offset;
 114:u8g2/csrc/u8g2_font.c ****   return u8x8_pgm_read( font );  
 115:u8g2/csrc/u8g2_font.c **** }
  31              		.loc 1 115 0
  32 0000 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
  33              	.LVL1:
  34 0002 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE0:
  38              		.section	.text.u8g2_font_get_word,"ax",%progbits
  39              		.align	1
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	u8g2_font_get_word:
  46              	.LFB1:
 116:u8g2/csrc/u8g2_font.c **** 
 117:u8g2/csrc/u8g2_font.c **** static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset) U8G2_NOINLINE; 
 118:u8g2/csrc/u8g2_font.c **** static uint16_t u8g2_font_get_word(const uint8_t *font, uint8_t offset)
 119:u8g2/csrc/u8g2_font.c **** {
  47              		.loc 1 119 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL2:
 120:u8g2/csrc/u8g2_font.c ****     uint16_t pos;
 121:u8g2/csrc/u8g2_font.c ****     font += offset;
  53              		.loc 1 121 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 4


  54 0000 4218     		adds	r2, r0, r1
  55              	.LVL3:
 122:u8g2/csrc/u8g2_font.c ****     pos = u8x8_pgm_read( font );
  56              		.loc 1 122 0
  57 0002 435C     		ldrb	r3, [r0, r1]	@ zero_extendqisi2
  58              	.LVL4:
 123:u8g2/csrc/u8g2_font.c ****     font++;
 124:u8g2/csrc/u8g2_font.c ****     pos <<= 8;
 125:u8g2/csrc/u8g2_font.c ****     pos += u8x8_pgm_read( font);
  59              		.loc 1 125 0
  60 0004 5078     		ldrb	r0, [r2, #1]	@ zero_extendqisi2
  61 0006 00EB0320 		add	r0, r0, r3, lsl #8
  62              	.LVL5:
 126:u8g2/csrc/u8g2_font.c ****     return pos;
 127:u8g2/csrc/u8g2_font.c **** }
  63              		.loc 1 127 0
  64 000a 80B2     		uxth	r0, r0
  65 000c 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.section	.text.u8g2_add_vector_y,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu softvfp
  76              	u8g2_add_vector_y:
  77              	.LFB11:
 128:u8g2/csrc/u8g2_font.c **** 
 129:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 130:u8g2/csrc/u8g2_font.c **** /* new font format */
 131:u8g2/csrc/u8g2_font.c **** void u8g2_read_font_info(u8g2_font_info_t *font_info, const uint8_t *font)
 132:u8g2/csrc/u8g2_font.c **** {
 133:u8g2/csrc/u8g2_font.c ****   /* offset 0 */
 134:u8g2/csrc/u8g2_font.c ****   font_info->glyph_cnt = u8g2_font_get_byte(font, 0);
 135:u8g2/csrc/u8g2_font.c ****   font_info->bbx_mode = u8g2_font_get_byte(font, 1);
 136:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
 137:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
 138:u8g2/csrc/u8g2_font.c ****   
 139:u8g2/csrc/u8g2_font.c ****   /* offset 4 */
 140:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_width = u8g2_font_get_byte(font, 4);
 141:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
 142:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
 143:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
 144:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
 145:u8g2/csrc/u8g2_font.c ****   
 146:u8g2/csrc/u8g2_font.c ****   /* offset 9 */
 147:u8g2/csrc/u8g2_font.c ****   font_info->max_char_width = u8g2_font_get_byte(font, 9);
 148:u8g2/csrc/u8g2_font.c ****   font_info->max_char_height = u8g2_font_get_byte(font, 10);
 149:u8g2/csrc/u8g2_font.c ****   font_info->x_offset = u8g2_font_get_byte(font, 11);
 150:u8g2/csrc/u8g2_font.c ****   font_info->y_offset = u8g2_font_get_byte(font, 12);
 151:u8g2/csrc/u8g2_font.c ****   
 152:u8g2/csrc/u8g2_font.c ****   /* offset 13 */
 153:u8g2/csrc/u8g2_font.c ****   font_info->ascent_A = u8g2_font_get_byte(font, 13);
 154:u8g2/csrc/u8g2_font.c ****   font_info->descent_g = u8g2_font_get_byte(font, 14);
 155:u8g2/csrc/u8g2_font.c ****   font_info->ascent_para = u8g2_font_get_byte(font, 15);
 156:u8g2/csrc/u8g2_font.c ****   font_info->descent_para = u8g2_font_get_byte(font, 16);
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 5


 157:u8g2/csrc/u8g2_font.c ****   
 158:u8g2/csrc/u8g2_font.c ****   /* offset 17 */
 159:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_upper_A = u8g2_font_get_word(font, 17);
 160:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 161:u8g2/csrc/u8g2_font.c ****   
 162:u8g2/csrc/u8g2_font.c ****   /* offset 21 */
 163:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_UNICODE
 164:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_unicode = u8g2_font_get_word(font, 21); 
 165:u8g2/csrc/u8g2_font.c **** #endif
 166:u8g2/csrc/u8g2_font.c **** }
 167:u8g2/csrc/u8g2_font.c **** 
 168:u8g2/csrc/u8g2_font.c **** 
 169:u8g2/csrc/u8g2_font.c **** /* calculate the overall length of the font, only used to create the picture for the google wiki */
 170:u8g2/csrc/u8g2_font.c **** size_t u8g2_GetFontSize(const uint8_t *font_arg)
 171:u8g2/csrc/u8g2_font.c **** {
 172:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 173:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = font_arg;
 174:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 175:u8g2/csrc/u8g2_font.c ****   
 176:u8g2/csrc/u8g2_font.c ****   for(;;)
 177:u8g2/csrc/u8g2_font.c ****   {
 178:u8g2/csrc/u8g2_font.c ****     if ( u8x8_pgm_read( font + 1 ) == 0 )
 179:u8g2/csrc/u8g2_font.c ****       break;
 180:u8g2/csrc/u8g2_font.c ****     font += u8x8_pgm_read( font + 1 );
 181:u8g2/csrc/u8g2_font.c ****   }
 182:u8g2/csrc/u8g2_font.c ****   
 183:u8g2/csrc/u8g2_font.c ****   /* continue with unicode section */
 184:u8g2/csrc/u8g2_font.c ****   font += 2;
 185:u8g2/csrc/u8g2_font.c ****   
 186:u8g2/csrc/u8g2_font.c ****   for(;;)
 187:u8g2/csrc/u8g2_font.c ****   {
 188:u8g2/csrc/u8g2_font.c ****     e = u8x8_pgm_read( font );
 189:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 190:u8g2/csrc/u8g2_font.c ****     e |= u8x8_pgm_read( font + 1 );
 191:u8g2/csrc/u8g2_font.c ****     if ( e == 0 )
 192:u8g2/csrc/u8g2_font.c ****       break;
 193:u8g2/csrc/u8g2_font.c ****     font += u8x8_pgm_read( font + 2 );    
 194:u8g2/csrc/u8g2_font.c ****   }
 195:u8g2/csrc/u8g2_font.c ****   
 196:u8g2/csrc/u8g2_font.c ****   return (font - font_arg) + 2;
 197:u8g2/csrc/u8g2_font.c **** }
 198:u8g2/csrc/u8g2_font.c **** 
 199:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 200:u8g2/csrc/u8g2_font.c **** /* u8g2 interface, font access */
 201:u8g2/csrc/u8g2_font.c **** 
 202:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontBBXWidth(u8g2_t *u8g2)
 203:u8g2/csrc/u8g2_font.c **** {
 204:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_width;		/* new font info structure */
 205:u8g2/csrc/u8g2_font.c **** }
 206:u8g2/csrc/u8g2_font.c **** 
 207:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontBBXHeight(u8g2_t *u8g2)
 208:u8g2/csrc/u8g2_font.c **** {
 209:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_height;		/* new font info structure */
 210:u8g2/csrc/u8g2_font.c **** }
 211:u8g2/csrc/u8g2_font.c **** 
 212:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffX(u8g2_t *u8g2) U8G2_NOINLINE;
 213:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffX(u8g2_t *u8g2)
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 6


 214:u8g2/csrc/u8g2_font.c **** {
 215:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.x_offset;		/* new font info structure */
 216:u8g2/csrc/u8g2_font.c **** }
 217:u8g2/csrc/u8g2_font.c **** 
 218:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffY(u8g2_t *u8g2) U8G2_NOINLINE;
 219:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetFontBBXOffY(u8g2_t *u8g2)
 220:u8g2/csrc/u8g2_font.c **** {
 221:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.y_offset;		/* new font info structure */
 222:u8g2/csrc/u8g2_font.c **** }
 223:u8g2/csrc/u8g2_font.c **** 
 224:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontCapitalAHeight(u8g2_t *u8g2) U8G2_NOINLINE; 
 225:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_GetFontCapitalAHeight(u8g2_t *u8g2)
 226:u8g2/csrc/u8g2_font.c **** {
 227:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.ascent_A;		/* new font info structure */
 228:u8g2/csrc/u8g2_font.c **** }
 229:u8g2/csrc/u8g2_font.c **** 
 230:u8g2/csrc/u8g2_font.c **** /*========================================================================*/
 231:u8g2/csrc/u8g2_font.c **** /* glyph handling */
 232:u8g2/csrc/u8g2_font.c **** 
 233:u8g2/csrc/u8g2_font.c **** /* optimized */
 234:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_font_decode_get_unsigned_bits(u8g2_font_decode_t *f, uint8_t cnt) 
 235:u8g2/csrc/u8g2_font.c **** {
 236:u8g2/csrc/u8g2_font.c ****   uint8_t val;
 237:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos = f->decode_bit_pos;
 238:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos_plus_cnt;
 239:u8g2/csrc/u8g2_font.c ****   
 240:u8g2/csrc/u8g2_font.c ****   //val = *(f->decode_ptr);
 241:u8g2/csrc/u8g2_font.c ****   val = u8x8_pgm_read( f->decode_ptr );  
 242:u8g2/csrc/u8g2_font.c ****   
 243:u8g2/csrc/u8g2_font.c ****   val >>= bit_pos;
 244:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt = bit_pos;
 245:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt += cnt;
 246:u8g2/csrc/u8g2_font.c ****   if ( bit_pos_plus_cnt >= 8 )
 247:u8g2/csrc/u8g2_font.c ****   {
 248:u8g2/csrc/u8g2_font.c ****     uint8_t s = 8;
 249:u8g2/csrc/u8g2_font.c ****     s -= bit_pos;
 250:u8g2/csrc/u8g2_font.c ****     f->decode_ptr++;
 251:u8g2/csrc/u8g2_font.c ****     //val |= *(f->decode_ptr) << (8-bit_pos);
 252:u8g2/csrc/u8g2_font.c ****     val |= u8x8_pgm_read( f->decode_ptr ) << (s);
 253:u8g2/csrc/u8g2_font.c ****     //bit_pos -= 8;
 254:u8g2/csrc/u8g2_font.c ****     bit_pos_plus_cnt -= 8;
 255:u8g2/csrc/u8g2_font.c ****   }
 256:u8g2/csrc/u8g2_font.c ****   val &= (1U<<cnt)-1;
 257:u8g2/csrc/u8g2_font.c ****   //bit_pos += cnt;
 258:u8g2/csrc/u8g2_font.c ****   
 259:u8g2/csrc/u8g2_font.c ****   f->decode_bit_pos = bit_pos_plus_cnt;
 260:u8g2/csrc/u8g2_font.c ****   return val;
 261:u8g2/csrc/u8g2_font.c **** }
 262:u8g2/csrc/u8g2_font.c **** 
 263:u8g2/csrc/u8g2_font.c **** 
 264:u8g2/csrc/u8g2_font.c **** /*
 265:u8g2/csrc/u8g2_font.c ****     2 bit --> cnt = 2
 266:u8g2/csrc/u8g2_font.c ****       -2,-1,0. 1
 267:u8g2/csrc/u8g2_font.c **** 
 268:u8g2/csrc/u8g2_font.c ****     3 bit --> cnt = 3
 269:u8g2/csrc/u8g2_font.c ****       -2,-1,0. 1
 270:u8g2/csrc/u8g2_font.c ****       -4,-3,-2,-1,0,1,2,3
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 7


 271:u8g2/csrc/u8g2_font.c **** 
 272:u8g2/csrc/u8g2_font.c ****       if ( x < 0 )
 273:u8g2/csrc/u8g2_font.c **** 	r = bits(x-1)+1;
 274:u8g2/csrc/u8g2_font.c ****     else
 275:u8g2/csrc/u8g2_font.c **** 	r = bits(x)+1;
 276:u8g2/csrc/u8g2_font.c **** 
 277:u8g2/csrc/u8g2_font.c **** */
 278:u8g2/csrc/u8g2_font.c **** /* optimized */
 279:u8g2/csrc/u8g2_font.c **** int8_t u8g2_font_decode_get_signed_bits(u8g2_font_decode_t *f, uint8_t cnt)
 280:u8g2/csrc/u8g2_font.c **** {
 281:u8g2/csrc/u8g2_font.c ****   int8_t v, d;
 282:u8g2/csrc/u8g2_font.c ****   v = (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt);
 283:u8g2/csrc/u8g2_font.c ****   d = 1;
 284:u8g2/csrc/u8g2_font.c ****   cnt--;
 285:u8g2/csrc/u8g2_font.c ****   d <<= cnt;
 286:u8g2/csrc/u8g2_font.c ****   v -= d;
 287:u8g2/csrc/u8g2_font.c ****   return v;
 288:u8g2/csrc/u8g2_font.c ****   //return (int8_t)u8g2_font_decode_get_unsigned_bits(f, cnt) - ((1<<cnt)>>1);
 289:u8g2/csrc/u8g2_font.c **** }
 290:u8g2/csrc/u8g2_font.c **** 
 291:u8g2/csrc/u8g2_font.c **** 
 292:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 293:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE
 294:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_y(u8g2_uint_t dy, int8_t x, int8_t y, uint8_t dir)
 295:u8g2/csrc/u8g2_font.c **** {
  78              		.loc 1 295 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL6:
 296:u8g2/csrc/u8g2_font.c ****   switch(dir)
  84              		.loc 1 296 0
  85 0000 012B     		cmp	r3, #1
  86 0002 08D0     		beq	.L5
  87 0004 23B1     		cbz	r3, .L6
  88 0006 022B     		cmp	r3, #2
  89 0008 08D0     		beq	.L7
 297:u8g2/csrc/u8g2_font.c ****   {
 298:u8g2/csrc/u8g2_font.c ****     case 0:
 299:u8g2/csrc/u8g2_font.c ****       dy += y;
 300:u8g2/csrc/u8g2_font.c ****       break;
 301:u8g2/csrc/u8g2_font.c ****     case 1:
 302:u8g2/csrc/u8g2_font.c ****       dy += x;
 303:u8g2/csrc/u8g2_font.c ****       break;
 304:u8g2/csrc/u8g2_font.c ****     case 2:
 305:u8g2/csrc/u8g2_font.c ****       dy -= y;
 306:u8g2/csrc/u8g2_font.c ****       break;
 307:u8g2/csrc/u8g2_font.c ****     default:
 308:u8g2/csrc/u8g2_font.c ****       dy -= x;
  90              		.loc 1 308 0
  91 000a 401A     		subs	r0, r0, r1
  92              	.LVL7:
  93 000c C0B2     		uxtb	r0, r0
  94              	.LVL8:
 309:u8g2/csrc/u8g2_font.c ****       break;      
 310:u8g2/csrc/u8g2_font.c ****   }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 8


 311:u8g2/csrc/u8g2_font.c ****   return dy;
 312:u8g2/csrc/u8g2_font.c **** }
  95              		.loc 1 312 0
  96 000e 7047     		bx	lr
  97              	.L6:
 299:u8g2/csrc/u8g2_font.c ****       break;
  98              		.loc 1 299 0
  99 0010 1044     		add	r0, r0, r2
 100              	.LVL9:
 101 0012 C0B2     		uxtb	r0, r0
 102              	.LVL10:
 300:u8g2/csrc/u8g2_font.c ****     case 1:
 103              		.loc 1 300 0
 104 0014 7047     		bx	lr
 105              	.L5:
 302:u8g2/csrc/u8g2_font.c ****       break;
 106              		.loc 1 302 0
 107 0016 0844     		add	r0, r0, r1
 108              	.LVL11:
 109 0018 C0B2     		uxtb	r0, r0
 110              	.LVL12:
 303:u8g2/csrc/u8g2_font.c ****     case 2:
 111              		.loc 1 303 0
 112 001a 7047     		bx	lr
 113              	.L7:
 305:u8g2/csrc/u8g2_font.c ****       break;
 114              		.loc 1 305 0
 115 001c 801A     		subs	r0, r0, r2
 116              	.LVL13:
 117 001e C0B2     		uxtb	r0, r0
 118              	.LVL14:
 306:u8g2/csrc/u8g2_font.c ****     default:
 119              		.loc 1 306 0
 120 0020 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE11:
 124              		.section	.text.u8g2_add_vector_x,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 129              		.fpu softvfp
 131              	u8g2_add_vector_x:
 132              	.LFB12:
 313:u8g2/csrc/u8g2_font.c **** 
 314:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir) U8G2_NOINLINE
 315:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_add_vector_x(u8g2_uint_t dx, int8_t x, int8_t y, uint8_t dir)
 316:u8g2/csrc/u8g2_font.c **** {
 133              		.loc 1 316 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL15:
 317:u8g2/csrc/u8g2_font.c ****   switch(dir)
 139              		.loc 1 317 0
 140 0000 012B     		cmp	r3, #1
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 9


 141 0002 08D0     		beq	.L12
 142 0004 23B1     		cbz	r3, .L13
 143 0006 022B     		cmp	r3, #2
 144 0008 08D0     		beq	.L14
 318:u8g2/csrc/u8g2_font.c ****   {
 319:u8g2/csrc/u8g2_font.c ****     case 0:
 320:u8g2/csrc/u8g2_font.c ****       dx += x;
 321:u8g2/csrc/u8g2_font.c ****       break;
 322:u8g2/csrc/u8g2_font.c ****     case 1:
 323:u8g2/csrc/u8g2_font.c ****       dx -= y;
 324:u8g2/csrc/u8g2_font.c ****       break;
 325:u8g2/csrc/u8g2_font.c ****     case 2:
 326:u8g2/csrc/u8g2_font.c ****       dx -= x;
 327:u8g2/csrc/u8g2_font.c ****       break;
 328:u8g2/csrc/u8g2_font.c ****     default:
 329:u8g2/csrc/u8g2_font.c ****       dx += y;
 145              		.loc 1 329 0
 146 000a 1044     		add	r0, r0, r2
 147              	.LVL16:
 148 000c C0B2     		uxtb	r0, r0
 149              	.LVL17:
 330:u8g2/csrc/u8g2_font.c ****       break;      
 331:u8g2/csrc/u8g2_font.c ****   }
 332:u8g2/csrc/u8g2_font.c ****   return dx;
 333:u8g2/csrc/u8g2_font.c **** }
 150              		.loc 1 333 0
 151 000e 7047     		bx	lr
 152              	.L13:
 320:u8g2/csrc/u8g2_font.c ****       break;
 153              		.loc 1 320 0
 154 0010 0844     		add	r0, r0, r1
 155              	.LVL18:
 156 0012 C0B2     		uxtb	r0, r0
 157              	.LVL19:
 321:u8g2/csrc/u8g2_font.c ****     case 1:
 158              		.loc 1 321 0
 159 0014 7047     		bx	lr
 160              	.L12:
 323:u8g2/csrc/u8g2_font.c ****       break;
 161              		.loc 1 323 0
 162 0016 801A     		subs	r0, r0, r2
 163              	.LVL20:
 164 0018 C0B2     		uxtb	r0, r0
 165              	.LVL21:
 324:u8g2/csrc/u8g2_font.c ****     case 2:
 166              		.loc 1 324 0
 167 001a 7047     		bx	lr
 168              	.L14:
 326:u8g2/csrc/u8g2_font.c ****       break;
 169              		.loc 1 326 0
 170 001c 401A     		subs	r0, r0, r1
 171              	.LVL22:
 172 001e C0B2     		uxtb	r0, r0
 173              	.LVL23:
 327:u8g2/csrc/u8g2_font.c ****     default:
 174              		.loc 1 327 0
 175 0020 7047     		bx	lr
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 10


 176              		.cfi_endproc
 177              	.LFE12:
 179              		.section	.text.u8g2_font_calc_vref_font,"ax",%progbits
 180              		.align	1
 181              		.global	u8g2_font_calc_vref_font
 182              		.syntax unified
 183              		.thumb
 184              		.thumb_func
 185              		.fpu softvfp
 187              	u8g2_font_calc_vref_font:
 188              	.LFB31:
 334:u8g2/csrc/u8g2_font.c **** #endif
 335:u8g2/csrc/u8g2_font.c **** 
 336:u8g2/csrc/u8g2_font.c **** 
 337:u8g2/csrc/u8g2_font.c **** 
 338:u8g2/csrc/u8g2_font.c **** /*
 339:u8g2/csrc/u8g2_font.c ****   Description:
 340:u8g2/csrc/u8g2_font.c ****     Draw a run-length area of the glyph. "len" can have any size and the line
 341:u8g2/csrc/u8g2_font.c ****     length has to be wrapped at the glyph border.
 342:u8g2/csrc/u8g2_font.c ****   Args:
 343:u8g2/csrc/u8g2_font.c ****     len: 					Length of the line
 344:u8g2/csrc/u8g2_font.c ****     is_foreground			foreground/background?
 345:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_x		X position
 346:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_y		Y position
 347:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.is_transparent	Transparent mode
 348:u8g2/csrc/u8g2_font.c ****   Return:
 349:u8g2/csrc/u8g2_font.c ****     -
 350:u8g2/csrc/u8g2_font.c ****   Calls:
 351:u8g2/csrc/u8g2_font.c ****     u8g2_Draw90Line()
 352:u8g2/csrc/u8g2_font.c ****   Called by:
 353:u8g2/csrc/u8g2_font.c ****     u8g2_font_decode_glyph()
 354:u8g2/csrc/u8g2_font.c **** */
 355:u8g2/csrc/u8g2_font.c **** /* optimized */
 356:u8g2/csrc/u8g2_font.c **** void u8g2_font_decode_len(u8g2_t *u8g2, uint8_t len, uint8_t is_foreground)
 357:u8g2/csrc/u8g2_font.c **** {
 358:u8g2/csrc/u8g2_font.c ****   uint8_t cnt;	/* total number of remaining pixels, which have to be drawn */
 359:u8g2/csrc/u8g2_font.c ****   uint8_t rem; 	/* remaining pixel to the right edge of the glyph */
 360:u8g2/csrc/u8g2_font.c ****   uint8_t current;	/* number of pixels, which need to be drawn for the draw procedure */
 361:u8g2/csrc/u8g2_font.c ****     /* current is either equal to cnt or equal to rem */
 362:u8g2/csrc/u8g2_font.c ****   
 363:u8g2/csrc/u8g2_font.c ****   /* local coordinates of the glyph */
 364:u8g2/csrc/u8g2_font.c ****   uint8_t lx,ly;
 365:u8g2/csrc/u8g2_font.c ****   
 366:u8g2/csrc/u8g2_font.c ****   /* target position on the screen */
 367:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t x, y;
 368:u8g2/csrc/u8g2_font.c ****   
 369:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 370:u8g2/csrc/u8g2_font.c ****   
 371:u8g2/csrc/u8g2_font.c ****   cnt = len;
 372:u8g2/csrc/u8g2_font.c ****   
 373:u8g2/csrc/u8g2_font.c ****   /* get the local position */
 374:u8g2/csrc/u8g2_font.c ****   lx = decode->x;
 375:u8g2/csrc/u8g2_font.c ****   ly = decode->y;
 376:u8g2/csrc/u8g2_font.c ****   
 377:u8g2/csrc/u8g2_font.c ****   for(;;)
 378:u8g2/csrc/u8g2_font.c ****   {
 379:u8g2/csrc/u8g2_font.c ****     /* calculate the number of pixel to the right edge of the glyph */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 11


 380:u8g2/csrc/u8g2_font.c ****     rem = decode->glyph_width;
 381:u8g2/csrc/u8g2_font.c ****     rem -= lx;
 382:u8g2/csrc/u8g2_font.c ****     
 383:u8g2/csrc/u8g2_font.c ****     /* calculate how many pixel to draw. This is either to the right edge */
 384:u8g2/csrc/u8g2_font.c ****     /* or lesser, if not enough pixel are left */
 385:u8g2/csrc/u8g2_font.c ****     current = rem;
 386:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 387:u8g2/csrc/u8g2_font.c ****       current = cnt;
 388:u8g2/csrc/u8g2_font.c ****     
 389:u8g2/csrc/u8g2_font.c ****     
 390:u8g2/csrc/u8g2_font.c ****     /* now draw the line, but apply the rotation around the glyph target position */
 391:u8g2/csrc/u8g2_font.c ****     //u8g2_font_decode_draw_pixel(u8g2, lx,ly,current, is_foreground);
 392:u8g2/csrc/u8g2_font.c **** 
 393:u8g2/csrc/u8g2_font.c ****     /* get target position */
 394:u8g2/csrc/u8g2_font.c ****     x = decode->target_x;
 395:u8g2/csrc/u8g2_font.c ****     y = decode->target_y;
 396:u8g2/csrc/u8g2_font.c **** 
 397:u8g2/csrc/u8g2_font.c ****     /* apply rotation */
 398:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 399:u8g2/csrc/u8g2_font.c ****     x = u8g2_add_vector_x(x, lx, ly, decode->dir);
 400:u8g2/csrc/u8g2_font.c ****     y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 401:u8g2/csrc/u8g2_font.c **** #else
 402:u8g2/csrc/u8g2_font.c ****     x += lx;
 403:u8g2/csrc/u8g2_font.c ****     y += ly;
 404:u8g2/csrc/u8g2_font.c **** #endif
 405:u8g2/csrc/u8g2_font.c ****     
 406:u8g2/csrc/u8g2_font.c ****     /* draw foreground and background (if required) */
 407:u8g2/csrc/u8g2_font.c ****     if ( is_foreground )
 408:u8g2/csrc/u8g2_font.c ****     {
 409:u8g2/csrc/u8g2_font.c ****       u8g2->draw_color = decode->fg_color;			/* draw_color will be restored later */
 410:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 411:u8g2/csrc/u8g2_font.c **** 	x, 
 412:u8g2/csrc/u8g2_font.c **** 	y, 
 413:u8g2/csrc/u8g2_font.c **** 	current, 
 414:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 415:u8g2/csrc/u8g2_font.c **** 	/* dir */ decode->dir
 416:u8g2/csrc/u8g2_font.c **** #else
 417:u8g2/csrc/u8g2_font.c **** 	0
 418:u8g2/csrc/u8g2_font.c **** #endif
 419:u8g2/csrc/u8g2_font.c ****       );
 420:u8g2/csrc/u8g2_font.c ****     }
 421:u8g2/csrc/u8g2_font.c ****     else if ( decode->is_transparent == 0 )    
 422:u8g2/csrc/u8g2_font.c ****     {
 423:u8g2/csrc/u8g2_font.c ****       u8g2->draw_color = decode->bg_color;			/* draw_color will be restored later */
 424:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 425:u8g2/csrc/u8g2_font.c **** 	x, 
 426:u8g2/csrc/u8g2_font.c **** 	y, 
 427:u8g2/csrc/u8g2_font.c **** 	current, 
 428:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 429:u8g2/csrc/u8g2_font.c **** 	/* dir */ decode->dir
 430:u8g2/csrc/u8g2_font.c **** #else
 431:u8g2/csrc/u8g2_font.c **** 	0
 432:u8g2/csrc/u8g2_font.c **** #endif
 433:u8g2/csrc/u8g2_font.c ****       );   
 434:u8g2/csrc/u8g2_font.c ****     }
 435:u8g2/csrc/u8g2_font.c ****     
 436:u8g2/csrc/u8g2_font.c ****     /* check, whether the end of the run length code has been reached */
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 12


 437:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 438:u8g2/csrc/u8g2_font.c ****       break;
 439:u8g2/csrc/u8g2_font.c ****     cnt -= rem;
 440:u8g2/csrc/u8g2_font.c ****     lx = 0;
 441:u8g2/csrc/u8g2_font.c ****     ly++;
 442:u8g2/csrc/u8g2_font.c ****   }
 443:u8g2/csrc/u8g2_font.c ****   lx += cnt;
 444:u8g2/csrc/u8g2_font.c ****   
 445:u8g2/csrc/u8g2_font.c ****   decode->x = lx;
 446:u8g2/csrc/u8g2_font.c ****   decode->y = ly;
 447:u8g2/csrc/u8g2_font.c ****   
 448:u8g2/csrc/u8g2_font.c **** }
 449:u8g2/csrc/u8g2_font.c **** 
 450:u8g2/csrc/u8g2_font.c **** static void u8g2_font_setup_decode(u8g2_t *u8g2, const uint8_t *glyph_data)
 451:u8g2/csrc/u8g2_font.c **** {
 452:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 453:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr = glyph_data;
 454:u8g2/csrc/u8g2_font.c ****   decode->decode_bit_pos = 0;
 455:u8g2/csrc/u8g2_font.c ****   
 456:u8g2/csrc/u8g2_font.c ****   /* 8 Nov 2015, this is already done in the glyph data search procedure */
 457:u8g2/csrc/u8g2_font.c ****   /*
 458:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr += 1;
 459:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr += 1;
 460:u8g2/csrc/u8g2_font.c ****   */
 461:u8g2/csrc/u8g2_font.c ****   
 462:u8g2/csrc/u8g2_font.c ****   decode->glyph_width = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_char_wi
 463:u8g2/csrc/u8g2_font.c ****   decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_he
 464:u8g2/csrc/u8g2_font.c ****   
 465:u8g2/csrc/u8g2_font.c ****   decode->fg_color = u8g2->draw_color;
 466:u8g2/csrc/u8g2_font.c ****   decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
 467:u8g2/csrc/u8g2_font.c **** }
 468:u8g2/csrc/u8g2_font.c **** 
 469:u8g2/csrc/u8g2_font.c **** 
 470:u8g2/csrc/u8g2_font.c **** /*
 471:u8g2/csrc/u8g2_font.c ****   Description:
 472:u8g2/csrc/u8g2_font.c ****     Decode and draw a glyph.
 473:u8g2/csrc/u8g2_font.c ****   Args:
 474:u8g2/csrc/u8g2_font.c ****     glyph_data: 					Pointer to the compressed glyph data of the font
 475:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_x		X position
 476:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.target_y		Y position
 477:u8g2/csrc/u8g2_font.c ****     u8g2->font_decode.is_transparent	Transparent mode
 478:u8g2/csrc/u8g2_font.c ****   Return:
 479:u8g2/csrc/u8g2_font.c ****     Width (delta x advance) of the glyph.
 480:u8g2/csrc/u8g2_font.c ****   Calls:
 481:u8g2/csrc/u8g2_font.c ****     u8g2_font_decode_len()
 482:u8g2/csrc/u8g2_font.c **** */
 483:u8g2/csrc/u8g2_font.c **** /* optimized */
 484:u8g2/csrc/u8g2_font.c **** int8_t u8g2_font_decode_glyph(u8g2_t *u8g2, const uint8_t *glyph_data)
 485:u8g2/csrc/u8g2_font.c **** {
 486:u8g2/csrc/u8g2_font.c ****   uint8_t a, b;
 487:u8g2/csrc/u8g2_font.c ****   int8_t x, y;
 488:u8g2/csrc/u8g2_font.c ****   int8_t d;
 489:u8g2/csrc/u8g2_font.c ****   int8_t h;
 490:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 491:u8g2/csrc/u8g2_font.c ****     
 492:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 493:u8g2/csrc/u8g2_font.c ****   h = u8g2->font_decode.glyph_height;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 13


 494:u8g2/csrc/u8g2_font.c ****   
 495:u8g2/csrc/u8g2_font.c ****   x = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_x);
 496:u8g2/csrc/u8g2_font.c ****   y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 497:u8g2/csrc/u8g2_font.c ****   d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 498:u8g2/csrc/u8g2_font.c ****   
 499:u8g2/csrc/u8g2_font.c ****   if ( decode->glyph_width > 0 )
 500:u8g2/csrc/u8g2_font.c ****   {
 501:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 502:u8g2/csrc/u8g2_font.c ****     decode->target_x = u8g2_add_vector_x(decode->target_x, x, -(h+y), decode->dir);
 503:u8g2/csrc/u8g2_font.c ****     decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 504:u8g2/csrc/u8g2_font.c **** #else
 505:u8g2/csrc/u8g2_font.c ****     decode->target_x += x;
 506:u8g2/csrc/u8g2_font.c ****     decode->target_y -= h+y;
 507:u8g2/csrc/u8g2_font.c **** #endif
 508:u8g2/csrc/u8g2_font.c ****     //u8g2_add_vector(&(decode->target_x), &(decode->target_y), x, -(h+y), decode->dir);
 509:u8g2/csrc/u8g2_font.c **** 
 510:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_INTERSECTION
 511:u8g2/csrc/u8g2_font.c ****     {
 512:u8g2/csrc/u8g2_font.c ****       u8g2_uint_t x0, x1, y0, y1;
 513:u8g2/csrc/u8g2_font.c ****       x0 = decode->target_x;
 514:u8g2/csrc/u8g2_font.c ****       y0 = decode->target_y;
 515:u8g2/csrc/u8g2_font.c ****       x1 = x0;
 516:u8g2/csrc/u8g2_font.c ****       y1 = y0;
 517:u8g2/csrc/u8g2_font.c ****       
 518:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 519:u8g2/csrc/u8g2_font.c ****       switch(decode->dir)
 520:u8g2/csrc/u8g2_font.c ****       {
 521:u8g2/csrc/u8g2_font.c **** 	case 0:
 522:u8g2/csrc/u8g2_font.c **** 	    x1 += decode->glyph_width;
 523:u8g2/csrc/u8g2_font.c **** 	    y1 += h;
 524:u8g2/csrc/u8g2_font.c **** 	    break;
 525:u8g2/csrc/u8g2_font.c **** 	case 1:
 526:u8g2/csrc/u8g2_font.c **** 	    x0 -= h;
 527:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 528:u8g2/csrc/u8g2_font.c **** 	    x1++;
 529:u8g2/csrc/u8g2_font.c **** 	    y1 += decode->glyph_width;
 530:u8g2/csrc/u8g2_font.c **** 	    break;
 531:u8g2/csrc/u8g2_font.c **** 	case 2:
 532:u8g2/csrc/u8g2_font.c **** 	    x0 -= decode->glyph_width;
 533:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 534:u8g2/csrc/u8g2_font.c **** 	    x1++;
 535:u8g2/csrc/u8g2_font.c **** 	    y0 -= h;
 536:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 537:u8g2/csrc/u8g2_font.c **** 	    y1++;
 538:u8g2/csrc/u8g2_font.c **** 	    break;	  
 539:u8g2/csrc/u8g2_font.c **** 	case 3:
 540:u8g2/csrc/u8g2_font.c **** 	    x1 += h;
 541:u8g2/csrc/u8g2_font.c **** 	    y0 -= decode->glyph_width;
 542:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 543:u8g2/csrc/u8g2_font.c **** 	    y1++;
 544:u8g2/csrc/u8g2_font.c **** 	    break;	  
 545:u8g2/csrc/u8g2_font.c ****       }
 546:u8g2/csrc/u8g2_font.c **** #else /* U8G2_WITH_FONT_ROTATION */
 547:u8g2/csrc/u8g2_font.c ****       x1 += decode->glyph_width;
 548:u8g2/csrc/u8g2_font.c ****       y1 += h;      
 549:u8g2/csrc/u8g2_font.c **** #endif
 550:u8g2/csrc/u8g2_font.c ****       
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 14


 551:u8g2/csrc/u8g2_font.c ****       if ( u8g2_IsIntersection(u8g2, x0, y0, x1, y1) == 0 ) 
 552:u8g2/csrc/u8g2_font.c **** 	return d;
 553:u8g2/csrc/u8g2_font.c ****     }
 554:u8g2/csrc/u8g2_font.c **** #endif /* U8G2_WITH_INTERSECTION */
 555:u8g2/csrc/u8g2_font.c ****    
 556:u8g2/csrc/u8g2_font.c ****     /* reset local x/y position */
 557:u8g2/csrc/u8g2_font.c ****     decode->x = 0;
 558:u8g2/csrc/u8g2_font.c ****     decode->y = 0;
 559:u8g2/csrc/u8g2_font.c ****     
 560:u8g2/csrc/u8g2_font.c ****     /* decode glyph */
 561:u8g2/csrc/u8g2_font.c ****     for(;;)
 562:u8g2/csrc/u8g2_font.c ****     {
 563:u8g2/csrc/u8g2_font.c ****       a = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_0);
 564:u8g2/csrc/u8g2_font.c ****       b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 565:u8g2/csrc/u8g2_font.c ****       do
 566:u8g2/csrc/u8g2_font.c ****       {
 567:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, a, 0);
 568:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, b, 1);
 569:u8g2/csrc/u8g2_font.c ****       } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
 570:u8g2/csrc/u8g2_font.c **** 
 571:u8g2/csrc/u8g2_font.c ****       if ( decode->y >= h )
 572:u8g2/csrc/u8g2_font.c **** 	break;
 573:u8g2/csrc/u8g2_font.c ****     }
 574:u8g2/csrc/u8g2_font.c ****     
 575:u8g2/csrc/u8g2_font.c ****     /* restore the u8g2 draw color, because this is modified by the decode algo */
 576:u8g2/csrc/u8g2_font.c ****     u8g2->draw_color = decode->fg_color;
 577:u8g2/csrc/u8g2_font.c ****   }
 578:u8g2/csrc/u8g2_font.c ****   return d;
 579:u8g2/csrc/u8g2_font.c **** }
 580:u8g2/csrc/u8g2_font.c **** 
 581:u8g2/csrc/u8g2_font.c **** /*
 582:u8g2/csrc/u8g2_font.c ****   Description:
 583:u8g2/csrc/u8g2_font.c ****     Find the starting point of the glyph data.
 584:u8g2/csrc/u8g2_font.c ****   Args:
 585:u8g2/csrc/u8g2_font.c ****     encoding: Encoding (ASCII or Unicode) of the glyph
 586:u8g2/csrc/u8g2_font.c ****   Return:
 587:u8g2/csrc/u8g2_font.c ****     Address of the glyph data or NULL, if the encoding is not avialable in the font.
 588:u8g2/csrc/u8g2_font.c **** */
 589:u8g2/csrc/u8g2_font.c **** const uint8_t *u8g2_font_get_glyph_data(u8g2_t *u8g2, uint16_t encoding)
 590:u8g2/csrc/u8g2_font.c **** {
 591:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = u8g2->font;
 592:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 593:u8g2/csrc/u8g2_font.c **** 
 594:u8g2/csrc/u8g2_font.c ****   
 595:u8g2/csrc/u8g2_font.c ****   if ( encoding <= 255 )
 596:u8g2/csrc/u8g2_font.c ****   {
 597:u8g2/csrc/u8g2_font.c ****     if ( encoding >= 'a' )
 598:u8g2/csrc/u8g2_font.c ****     {
 599:u8g2/csrc/u8g2_font.c ****       font += u8g2->font_info.start_pos_lower_a;
 600:u8g2/csrc/u8g2_font.c ****     }
 601:u8g2/csrc/u8g2_font.c ****     else if ( encoding >= 'A' )
 602:u8g2/csrc/u8g2_font.c ****     {
 603:u8g2/csrc/u8g2_font.c ****       font += u8g2->font_info.start_pos_upper_A;
 604:u8g2/csrc/u8g2_font.c ****     }
 605:u8g2/csrc/u8g2_font.c ****     
 606:u8g2/csrc/u8g2_font.c ****     for(;;)
 607:u8g2/csrc/u8g2_font.c ****     {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 15


 608:u8g2/csrc/u8g2_font.c ****       if ( u8x8_pgm_read( font + 1 ) == 0 )
 609:u8g2/csrc/u8g2_font.c **** 	break;
 610:u8g2/csrc/u8g2_font.c ****       if ( u8x8_pgm_read( font ) == encoding )
 611:u8g2/csrc/u8g2_font.c ****       {
 612:u8g2/csrc/u8g2_font.c **** 	return font+2;	/* skip encoding and glyph size */
 613:u8g2/csrc/u8g2_font.c ****       }
 614:u8g2/csrc/u8g2_font.c ****       font += u8x8_pgm_read( font + 1 );
 615:u8g2/csrc/u8g2_font.c ****     }
 616:u8g2/csrc/u8g2_font.c ****   }
 617:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_UNICODE
 618:u8g2/csrc/u8g2_font.c ****   else
 619:u8g2/csrc/u8g2_font.c ****   {
 620:u8g2/csrc/u8g2_font.c ****     uint16_t e;
 621:u8g2/csrc/u8g2_font.c ****     
 622:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 623:u8g2/csrc/u8g2_font.c ****     if ( u8g2->last_font_data != NULL && encoding >= u8g2->last_unicode )
 624:u8g2/csrc/u8g2_font.c ****     {
 625:u8g2/csrc/u8g2_font.c **** 	font = u8g2->last_font_data;
 626:u8g2/csrc/u8g2_font.c ****     }
 627:u8g2/csrc/u8g2_font.c ****     else
 628:u8g2/csrc/u8g2_font.c **** #endif 
 629:u8g2/csrc/u8g2_font.c **** 
 630:u8g2/csrc/u8g2_font.c ****     font += u8g2->font_info.start_pos_unicode;
 631:u8g2/csrc/u8g2_font.c ****     
 632:u8g2/csrc/u8g2_font.c ****     
 633:u8g2/csrc/u8g2_font.c ****     for(;;)
 634:u8g2/csrc/u8g2_font.c ****     {
 635:u8g2/csrc/u8g2_font.c ****       e = u8x8_pgm_read( font );
 636:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 637:u8g2/csrc/u8g2_font.c ****       e |= u8x8_pgm_read( font + 1 );
 638:u8g2/csrc/u8g2_font.c ****   
 639:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 640:u8g2/csrc/u8g2_font.c ****       if ( encoding < e )
 641:u8g2/csrc/u8g2_font.c ****         break;
 642:u8g2/csrc/u8g2_font.c **** #endif 
 643:u8g2/csrc/u8g2_font.c **** 
 644:u8g2/csrc/u8g2_font.c ****       if ( e == 0 )
 645:u8g2/csrc/u8g2_font.c **** 	break;
 646:u8g2/csrc/u8g2_font.c ****   
 647:u8g2/csrc/u8g2_font.c ****       if ( e == encoding )
 648:u8g2/csrc/u8g2_font.c ****       {
 649:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
 650:u8g2/csrc/u8g2_font.c **** 	u8g2->last_font_data = font;
 651:u8g2/csrc/u8g2_font.c **** 	u8g2->last_unicode = encoding;
 652:u8g2/csrc/u8g2_font.c **** #endif 
 653:u8g2/csrc/u8g2_font.c **** 	return font+3;	/* skip encoding and glyph size */
 654:u8g2/csrc/u8g2_font.c ****       }
 655:u8g2/csrc/u8g2_font.c ****       font += u8x8_pgm_read( font + 2 );
 656:u8g2/csrc/u8g2_font.c ****     }  
 657:u8g2/csrc/u8g2_font.c ****   }
 658:u8g2/csrc/u8g2_font.c **** #endif
 659:u8g2/csrc/u8g2_font.c ****   
 660:u8g2/csrc/u8g2_font.c ****   return NULL;
 661:u8g2/csrc/u8g2_font.c **** }
 662:u8g2/csrc/u8g2_font.c **** 
 663:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_font_draw_glyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encodi
 664:u8g2/csrc/u8g2_font.c **** {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 16


 665:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t dx = 0;
 666:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_x = x;
 667:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_y = y;
 668:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.is_transparent = is_transparent; this is already set
 669:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.dir = dir;
 670:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, encoding);
 671:u8g2/csrc/u8g2_font.c ****   if ( glyph_data != NULL )
 672:u8g2/csrc/u8g2_font.c ****   {
 673:u8g2/csrc/u8g2_font.c ****     dx = u8g2_font_decode_glyph(u8g2, glyph_data);
 674:u8g2/csrc/u8g2_font.c ****   }
 675:u8g2/csrc/u8g2_font.c ****   return dx;
 676:u8g2/csrc/u8g2_font.c **** }
 677:u8g2/csrc/u8g2_font.c **** 
 678:u8g2/csrc/u8g2_font.c **** 
 679:u8g2/csrc/u8g2_font.c **** 
 680:u8g2/csrc/u8g2_font.c **** uint8_t u8g2_IsGlyph(u8g2_t *u8g2, uint16_t requested_encoding)
 681:u8g2/csrc/u8g2_font.c **** {
 682:u8g2/csrc/u8g2_font.c ****   /* updated to new code */
 683:u8g2/csrc/u8g2_font.c ****   if ( u8g2_font_get_glyph_data(u8g2, requested_encoding) != NULL )
 684:u8g2/csrc/u8g2_font.c ****     return 1;
 685:u8g2/csrc/u8g2_font.c ****   return 0;
 686:u8g2/csrc/u8g2_font.c **** }
 687:u8g2/csrc/u8g2_font.c **** 
 688:u8g2/csrc/u8g2_font.c **** /* side effect: updates u8g2->font_decode and u8g2->glyph_x_offset */
 689:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetGlyphWidth(u8g2_t *u8g2, uint16_t requested_encoding)
 690:u8g2/csrc/u8g2_font.c **** {
 691:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 692:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 693:u8g2/csrc/u8g2_font.c ****     return 0; 
 694:u8g2/csrc/u8g2_font.c ****   
 695:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 696:u8g2/csrc/u8g2_font.c ****   u8g2->glyph_x_offset = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bit
 697:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 698:u8g2/csrc/u8g2_font.c ****   
 699:u8g2/csrc/u8g2_font.c ****   /* glyph width is here: u8g2->font_decode.glyph_width */
 700:u8g2/csrc/u8g2_font.c **** 
 701:u8g2/csrc/u8g2_font.c ****   return u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
 702:u8g2/csrc/u8g2_font.c **** }
 703:u8g2/csrc/u8g2_font.c **** 
 704:u8g2/csrc/u8g2_font.c **** 
 705:u8g2/csrc/u8g2_font.c **** /*
 706:u8g2/csrc/u8g2_font.c ****   set one of:
 707:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_TRANSPARENT
 708:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_SOLID
 709:u8g2/csrc/u8g2_font.c ****     U8G2_FONT_MODE_NONE
 710:u8g2/csrc/u8g2_font.c ****   This has been changed for the new font procedures  
 711:u8g2/csrc/u8g2_font.c **** */
 712:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontMode(u8g2_t *u8g2, uint8_t is_transparent)
 713:u8g2/csrc/u8g2_font.c **** {
 714:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
 715:u8g2/csrc/u8g2_font.c **** }
 716:u8g2/csrc/u8g2_font.c **** 
 717:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawGlyph(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint16_t encoding)
 718:u8g2/csrc/u8g2_font.c **** {
 719:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 720:u8g2/csrc/u8g2_font.c ****   switch(u8g2->font_decode.dir)
 721:u8g2/csrc/u8g2_font.c ****   {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 17


 722:u8g2/csrc/u8g2_font.c ****     case 0:
 723:u8g2/csrc/u8g2_font.c ****       y += u8g2->font_calc_vref(u8g2);
 724:u8g2/csrc/u8g2_font.c ****       break;
 725:u8g2/csrc/u8g2_font.c ****     case 1:
 726:u8g2/csrc/u8g2_font.c ****       x -= u8g2->font_calc_vref(u8g2);
 727:u8g2/csrc/u8g2_font.c ****       break;
 728:u8g2/csrc/u8g2_font.c ****     case 2:
 729:u8g2/csrc/u8g2_font.c ****       y -= u8g2->font_calc_vref(u8g2);
 730:u8g2/csrc/u8g2_font.c ****       break;
 731:u8g2/csrc/u8g2_font.c ****     case 3:
 732:u8g2/csrc/u8g2_font.c ****       x += u8g2->font_calc_vref(u8g2);
 733:u8g2/csrc/u8g2_font.c ****       break;
 734:u8g2/csrc/u8g2_font.c ****   }
 735:u8g2/csrc/u8g2_font.c **** #else
 736:u8g2/csrc/u8g2_font.c ****   y += u8g2->font_calc_vref(u8g2);
 737:u8g2/csrc/u8g2_font.c **** #endif
 738:u8g2/csrc/u8g2_font.c ****   return u8g2_font_draw_glyph(u8g2, x, y, encoding);
 739:u8g2/csrc/u8g2_font.c **** }
 740:u8g2/csrc/u8g2_font.c **** 
 741:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str) U8
 742:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_draw_string(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 743:u8g2/csrc/u8g2_font.c **** {
 744:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 745:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum;
 746:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 747:u8g2/csrc/u8g2_font.c ****   sum = 0;
 748:u8g2/csrc/u8g2_font.c ****   for(;;)
 749:u8g2/csrc/u8g2_font.c ****   {
 750:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 751:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 752:u8g2/csrc/u8g2_font.c ****       break;
 753:u8g2/csrc/u8g2_font.c ****     str++;
 754:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 755:u8g2/csrc/u8g2_font.c ****     {
 756:u8g2/csrc/u8g2_font.c ****       delta = u8g2_DrawGlyph(u8g2, x, y, e);
 757:u8g2/csrc/u8g2_font.c ****     
 758:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 759:u8g2/csrc/u8g2_font.c ****       switch(u8g2->font_decode.dir)
 760:u8g2/csrc/u8g2_font.c ****       {
 761:u8g2/csrc/u8g2_font.c **** 	case 0:
 762:u8g2/csrc/u8g2_font.c **** 	  x += delta;
 763:u8g2/csrc/u8g2_font.c **** 	  break;
 764:u8g2/csrc/u8g2_font.c **** 	case 1:
 765:u8g2/csrc/u8g2_font.c **** 	  y += delta;
 766:u8g2/csrc/u8g2_font.c **** 	  break;
 767:u8g2/csrc/u8g2_font.c **** 	case 2:
 768:u8g2/csrc/u8g2_font.c **** 	  x -= delta;
 769:u8g2/csrc/u8g2_font.c **** 	  break;
 770:u8g2/csrc/u8g2_font.c **** 	case 3:
 771:u8g2/csrc/u8g2_font.c **** 	  y -= delta;
 772:u8g2/csrc/u8g2_font.c **** 	  break;
 773:u8g2/csrc/u8g2_font.c ****       }
 774:u8g2/csrc/u8g2_font.c **** #else
 775:u8g2/csrc/u8g2_font.c ****       x += delta;
 776:u8g2/csrc/u8g2_font.c **** #endif
 777:u8g2/csrc/u8g2_font.c **** 
 778:u8g2/csrc/u8g2_font.c ****       sum += delta;    
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 18


 779:u8g2/csrc/u8g2_font.c ****     }
 780:u8g2/csrc/u8g2_font.c ****   }
 781:u8g2/csrc/u8g2_font.c ****   return sum;
 782:u8g2/csrc/u8g2_font.c **** }
 783:u8g2/csrc/u8g2_font.c **** 
 784:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawStr(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 785:u8g2/csrc/u8g2_font.c **** {
 786:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 787:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 788:u8g2/csrc/u8g2_font.c **** }
 789:u8g2/csrc/u8g2_font.c **** 
 790:u8g2/csrc/u8g2_font.c **** /*
 791:u8g2/csrc/u8g2_font.c **** source: https://en.wikipedia.org/wiki/UTF-8
 792:u8g2/csrc/u8g2_font.c **** Bits	from 		to			bytes	Byte 1 		Byte 2 		Byte 3 		Byte 4 		Byte 5 		Byte 6
 793:u8g2/csrc/u8g2_font.c ****   7 	U+0000 		U+007F 		1 		0xxxxxxx
 794:u8g2/csrc/u8g2_font.c **** 11 	U+0080 		U+07FF 		2 		110xxxxx 	10xxxxxx
 795:u8g2/csrc/u8g2_font.c **** 16 	U+0800 		U+FFFF 		3 		1110xxxx 	10xxxxxx 	10xxxxxx
 796:u8g2/csrc/u8g2_font.c **** 21 	U+10000 	U+1FFFFF 	4 		11110xxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
 797:u8g2/csrc/u8g2_font.c **** 26 	U+200000 	U+3FFFFFF 	5 		111110xx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
 798:u8g2/csrc/u8g2_font.c **** 31 	U+4000000 	U+7FFFFFFF 	6 		1111110x 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx  
 799:u8g2/csrc/u8g2_font.c **** */
 800:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, const char *str)
 801:u8g2/csrc/u8g2_font.c **** {
 802:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 803:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 804:u8g2/csrc/u8g2_font.c **** }
 805:u8g2/csrc/u8g2_font.c **** 
 806:u8g2/csrc/u8g2_font.c **** 
 807:u8g2/csrc/u8g2_font.c **** 
 808:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawExtendedUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, u8g2
 809:u8g2/csrc/u8g2_font.c **** {
 810:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 811:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 812:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 813:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum, k;
 814:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 815:u8g2/csrc/u8g2_font.c ****   sum = 0;
 816:u8g2/csrc/u8g2_font.c ****   for(;;)
 817:u8g2/csrc/u8g2_font.c ****   {
 818:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 819:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 820:u8g2/csrc/u8g2_font.c ****       break;
 821:u8g2/csrc/u8g2_font.c ****     str++;
 822:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 823:u8g2/csrc/u8g2_font.c ****     {
 824:u8g2/csrc/u8g2_font.c ****       delta = u8g2_GetGlyphWidth(u8g2, e);
 825:u8g2/csrc/u8g2_font.c **** 	    
 826:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 827:u8g2/csrc/u8g2_font.c ****       {
 828:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerning(u8g2, kerning, e, e_prev);
 829:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 830:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 831:u8g2/csrc/u8g2_font.c ****       }
 832:u8g2/csrc/u8g2_font.c ****       else
 833:u8g2/csrc/u8g2_font.c ****       {
 834:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerning(u8g2, kerning, e_prev, e);
 835:u8g2/csrc/u8g2_font.c **** 	delta -= k;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 19


 836:u8g2/csrc/u8g2_font.c ****       }
 837:u8g2/csrc/u8g2_font.c ****       e_prev = e;
 838:u8g2/csrc/u8g2_font.c **** 
 839:u8g2/csrc/u8g2_font.c ****       u8g2_DrawGlyph(u8g2, x, y, e);
 840:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 841:u8g2/csrc/u8g2_font.c ****       {
 842:u8g2/csrc/u8g2_font.c ****       }
 843:u8g2/csrc/u8g2_font.c ****       else
 844:u8g2/csrc/u8g2_font.c ****       {
 845:u8g2/csrc/u8g2_font.c **** 	x += delta;
 846:u8g2/csrc/u8g2_font.c **** 	x -= k;
 847:u8g2/csrc/u8g2_font.c ****       }
 848:u8g2/csrc/u8g2_font.c ****       
 849:u8g2/csrc/u8g2_font.c ****       sum += delta;    
 850:u8g2/csrc/u8g2_font.c ****     }
 851:u8g2/csrc/u8g2_font.c ****   }
 852:u8g2/csrc/u8g2_font.c ****   return sum;
 853:u8g2/csrc/u8g2_font.c **** }
 854:u8g2/csrc/u8g2_font.c **** 
 855:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_DrawExtUTF8(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, uint8_t to_left, const uin
 856:u8g2/csrc/u8g2_font.c **** {
 857:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 858:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 859:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 860:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t delta, sum, k;
 861:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 862:u8g2/csrc/u8g2_font.c ****   sum = 0;
 863:u8g2/csrc/u8g2_font.c ****   for(;;)
 864:u8g2/csrc/u8g2_font.c ****   {
 865:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 866:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 867:u8g2/csrc/u8g2_font.c ****       break;
 868:u8g2/csrc/u8g2_font.c ****     str++;
 869:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 870:u8g2/csrc/u8g2_font.c ****     {
 871:u8g2/csrc/u8g2_font.c ****       delta = u8g2_GetGlyphWidth(u8g2, e);
 872:u8g2/csrc/u8g2_font.c **** 	    
 873:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 874:u8g2/csrc/u8g2_font.c ****       {
 875:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerningByTable(u8g2, kerning_table, e, e_prev);
 876:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 877:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 878:u8g2/csrc/u8g2_font.c ****       }
 879:u8g2/csrc/u8g2_font.c ****       else
 880:u8g2/csrc/u8g2_font.c ****       {
 881:u8g2/csrc/u8g2_font.c ****         k = u8g2_GetKerningByTable(u8g2, kerning_table, e_prev, e);
 882:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 883:u8g2/csrc/u8g2_font.c ****       }
 884:u8g2/csrc/u8g2_font.c ****       e_prev = e;
 885:u8g2/csrc/u8g2_font.c **** 
 886:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 887:u8g2/csrc/u8g2_font.c ****       {
 888:u8g2/csrc/u8g2_font.c ****       }
 889:u8g2/csrc/u8g2_font.c ****       else
 890:u8g2/csrc/u8g2_font.c ****       {
 891:u8g2/csrc/u8g2_font.c **** 	x += delta;
 892:u8g2/csrc/u8g2_font.c ****       }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 20


 893:u8g2/csrc/u8g2_font.c ****       u8g2_DrawGlyph(u8g2, x, y, e);
 894:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 895:u8g2/csrc/u8g2_font.c ****       {
 896:u8g2/csrc/u8g2_font.c ****       }
 897:u8g2/csrc/u8g2_font.c ****       else
 898:u8g2/csrc/u8g2_font.c ****       {
 899:u8g2/csrc/u8g2_font.c **** 	//x += delta;
 900:u8g2/csrc/u8g2_font.c **** 	//x -= k;
 901:u8g2/csrc/u8g2_font.c ****       }
 902:u8g2/csrc/u8g2_font.c ****       
 903:u8g2/csrc/u8g2_font.c ****       sum += delta;    
 904:u8g2/csrc/u8g2_font.c ****     }
 905:u8g2/csrc/u8g2_font.c ****   }
 906:u8g2/csrc/u8g2_font.c ****   return sum;
 907:u8g2/csrc/u8g2_font.c **** }
 908:u8g2/csrc/u8g2_font.c **** 
 909:u8g2/csrc/u8g2_font.c **** 
 910:u8g2/csrc/u8g2_font.c **** 
 911:u8g2/csrc/u8g2_font.c **** /*===============================================*/
 912:u8g2/csrc/u8g2_font.c **** 
 913:u8g2/csrc/u8g2_font.c **** /* set ascent/descent for reference point calculation */
 914:u8g2/csrc/u8g2_font.c **** 
 915:u8g2/csrc/u8g2_font.c **** void u8g2_UpdateRefHeight(u8g2_t *u8g2)
 916:u8g2/csrc/u8g2_font.c **** {
 917:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 918:u8g2/csrc/u8g2_font.c ****     return;
 919:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_ascent = u8g2->font_info.ascent_A;
 920:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_descent = u8g2->font_info.descent_g;
 921:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 922:u8g2/csrc/u8g2_font.c ****   {
 923:u8g2/csrc/u8g2_font.c ****   }
 924:u8g2/csrc/u8g2_font.c ****   else if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_XTEXT )
 925:u8g2/csrc/u8g2_font.c ****   {
 926:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_ascent < u8g2->font_info.ascent_para )
 927:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
 928:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
 929:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.descent_para;
 930:u8g2/csrc/u8g2_font.c ****   }
 931:u8g2/csrc/u8g2_font.c ****   else
 932:u8g2/csrc/u8g2_font.c ****   {
 933:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_ascent < u8g2->font_info.max_char_height+u8g2->font_info.y_offset )
 934:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
 935:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
 936:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.y_offset;
 937:u8g2/csrc/u8g2_font.c ****   }  
 938:u8g2/csrc/u8g2_font.c **** }
 939:u8g2/csrc/u8g2_font.c **** 
 940:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightText(u8g2_t *u8g2)
 941:u8g2/csrc/u8g2_font.c **** {
 942:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_TEXT;
 943:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 944:u8g2/csrc/u8g2_font.c **** }
 945:u8g2/csrc/u8g2_font.c **** 
 946:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightExtendedText(u8g2_t *u8g2)
 947:u8g2/csrc/u8g2_font.c **** {
 948:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
 949:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 21


 950:u8g2/csrc/u8g2_font.c **** }
 951:u8g2/csrc/u8g2_font.c **** 
 952:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontRefHeightAll(u8g2_t *u8g2)
 953:u8g2/csrc/u8g2_font.c **** {
 954:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_ALL;
 955:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 956:u8g2/csrc/u8g2_font.c **** }
 957:u8g2/csrc/u8g2_font.c **** 
 958:u8g2/csrc/u8g2_font.c **** /*===============================================*/
 959:u8g2/csrc/u8g2_font.c **** /* callback procedures to correct the y position */
 960:u8g2/csrc/u8g2_font.c **** 
 961:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_font(U8X8_UNUSED u8g2_t *u8g2)
 962:u8g2/csrc/u8g2_font.c **** {
 189              		.loc 1 962 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              		@ link register save eliminated.
 194              	.LVL24:
 963:u8g2/csrc/u8g2_font.c ****   return 0;
 964:u8g2/csrc/u8g2_font.c **** }
 195              		.loc 1 964 0
 196 0000 0020     		movs	r0, #0
 197              	.LVL25:
 198 0002 7047     		bx	lr
 199              		.cfi_endproc
 200              	.LFE31:
 202              		.section	.text.u8g2_font_calc_vref_bottom,"ax",%progbits
 203              		.align	1
 204              		.global	u8g2_font_calc_vref_bottom
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	u8g2_font_calc_vref_bottom:
 211              	.LFB33:
 965:u8g2/csrc/u8g2_font.c **** 
 966:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosBaseline(u8g2_t *u8g2)
 967:u8g2/csrc/u8g2_font.c **** {
 968:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_font;
 969:u8g2/csrc/u8g2_font.c **** }
 970:u8g2/csrc/u8g2_font.c **** 
 971:u8g2/csrc/u8g2_font.c **** 
 972:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_bottom(u8g2_t *u8g2)
 973:u8g2/csrc/u8g2_font.c **** {
 212              		.loc 1 973 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              		@ link register save eliminated.
 217              	.LVL26:
 974:u8g2/csrc/u8g2_font.c ****   return (u8g2_uint_t)(u8g2->font_ref_descent);
 218              		.loc 1 974 0
 219 0000 90F97A00 		ldrsb	r0, [r0, #122]
 220              	.LVL27:
 975:u8g2/csrc/u8g2_font.c **** }
 221              		.loc 1 975 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 22


 222 0004 C0B2     		uxtb	r0, r0
 223 0006 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE33:
 227              		.section	.text.u8g2_font_calc_vref_top,"ax",%progbits
 228              		.align	1
 229              		.global	u8g2_font_calc_vref_top
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	u8g2_font_calc_vref_top:
 236              	.LFB35:
 976:u8g2/csrc/u8g2_font.c **** 
 977:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosBottom(u8g2_t *u8g2)
 978:u8g2/csrc/u8g2_font.c **** {
 979:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_bottom;
 980:u8g2/csrc/u8g2_font.c **** }
 981:u8g2/csrc/u8g2_font.c **** 
 982:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_top(u8g2_t *u8g2)
 983:u8g2/csrc/u8g2_font.c **** {
 237              		.loc 1 983 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL28:
 984:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t tmp;
 985:u8g2/csrc/u8g2_font.c ****   /* reference pos is one pixel above the upper edge of the reference glyph */
 986:u8g2/csrc/u8g2_font.c ****   tmp = (u8g2_uint_t)(u8g2->font_ref_ascent);
 243              		.loc 1 986 0
 244 0000 90F97900 		ldrsb	r0, [r0, #121]
 245              	.LVL29:
 246 0004 C0B2     		uxtb	r0, r0
 247              	.LVL30:
 987:u8g2/csrc/u8g2_font.c ****   tmp++;
 248              		.loc 1 987 0
 249 0006 0130     		adds	r0, r0, #1
 250              	.LVL31:
 988:u8g2/csrc/u8g2_font.c ****   return tmp;
 989:u8g2/csrc/u8g2_font.c **** }
 251              		.loc 1 989 0
 252 0008 C0B2     		uxtb	r0, r0
 253 000a 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE35:
 257              		.section	.text.u8g2_font_calc_vref_center,"ax",%progbits
 258              		.align	1
 259              		.global	u8g2_font_calc_vref_center
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	u8g2_font_calc_vref_center:
 266              	.LFB37:
 990:u8g2/csrc/u8g2_font.c **** 
 991:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosTop(u8g2_t *u8g2)
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 23


 992:u8g2/csrc/u8g2_font.c **** {
 993:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_top;
 994:u8g2/csrc/u8g2_font.c **** }
 995:u8g2/csrc/u8g2_font.c **** 
 996:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_font_calc_vref_center(u8g2_t *u8g2)
 997:u8g2/csrc/u8g2_font.c **** {
 267              		.loc 1 997 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL32:
 998:u8g2/csrc/u8g2_font.c ****   int8_t tmp;
 999:u8g2/csrc/u8g2_font.c ****   tmp = u8g2->font_ref_ascent;
 273              		.loc 1 999 0
 274 0000 90F97930 		ldrsb	r3, [r0, #121]
 275              	.LVL33:
1000:u8g2/csrc/u8g2_font.c ****   tmp -= u8g2->font_ref_descent;
 276              		.loc 1 1000 0
 277 0004 90F87A20 		ldrb	r2, [r0, #122]	@ zero_extendqisi2
 278 0008 981A     		subs	r0, r3, r2
 279              	.LVL34:
 280 000a 40B2     		sxtb	r0, r0
 281              	.LVL35:
1001:u8g2/csrc/u8g2_font.c ****   tmp /= 2;
 282              		.loc 1 1001 0
 283 000c 00EBD070 		add	r0, r0, r0, lsr #31
 284              	.LVL36:
1002:u8g2/csrc/u8g2_font.c ****   tmp += u8g2->font_ref_descent;  
 285              		.loc 1 1002 0
 286 0010 02EB6000 		add	r0, r2, r0, asr #1
 287              	.LVL37:
1003:u8g2/csrc/u8g2_font.c ****   return tmp;
1004:u8g2/csrc/u8g2_font.c **** }
 288              		.loc 1 1004 0
 289 0014 C0B2     		uxtb	r0, r0
 290 0016 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE37:
 294              		.section	.text.u8g2_read_font_info,"ax",%progbits
 295              		.align	1
 296              		.global	u8g2_read_font_info
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu softvfp
 302              	u8g2_read_font_info:
 303              	.LFB2:
 132:u8g2/csrc/u8g2_font.c ****   /* offset 0 */
 304              		.loc 1 132 0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308              	.LVL38:
 309 0000 38B5     		push	{r3, r4, r5, lr}
 310              	.LCFI0:
 311              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 24


 312              		.cfi_offset 3, -16
 313              		.cfi_offset 4, -12
 314              		.cfi_offset 5, -8
 315              		.cfi_offset 14, -4
 316 0002 0446     		mov	r4, r0
 317 0004 0D46     		mov	r5, r1
 134:u8g2/csrc/u8g2_font.c ****   font_info->bbx_mode = u8g2_font_get_byte(font, 1);
 318              		.loc 1 134 0
 319 0006 0021     		movs	r1, #0
 320              	.LVL39:
 321 0008 2846     		mov	r0, r5
 322              	.LVL40:
 323 000a FFF7FEFF 		bl	u8g2_font_get_byte
 324              	.LVL41:
 325 000e 2070     		strb	r0, [r4]
 135:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_0 = u8g2_font_get_byte(font, 2);
 326              		.loc 1 135 0
 327 0010 0121     		movs	r1, #1
 328 0012 2846     		mov	r0, r5
 329 0014 FFF7FEFF 		bl	u8g2_font_get_byte
 330              	.LVL42:
 331 0018 6070     		strb	r0, [r4, #1]
 136:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_1 = u8g2_font_get_byte(font, 3);
 332              		.loc 1 136 0
 333 001a 0221     		movs	r1, #2
 334 001c 2846     		mov	r0, r5
 335 001e FFF7FEFF 		bl	u8g2_font_get_byte
 336              	.LVL43:
 337 0022 A070     		strb	r0, [r4, #2]
 137:u8g2/csrc/u8g2_font.c ****   
 338              		.loc 1 137 0
 339 0024 0321     		movs	r1, #3
 340 0026 2846     		mov	r0, r5
 341 0028 FFF7FEFF 		bl	u8g2_font_get_byte
 342              	.LVL44:
 343 002c E070     		strb	r0, [r4, #3]
 140:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_height = u8g2_font_get_byte(font, 5);
 344              		.loc 1 140 0
 345 002e 0421     		movs	r1, #4
 346 0030 2846     		mov	r0, r5
 347 0032 FFF7FEFF 		bl	u8g2_font_get_byte
 348              	.LVL45:
 349 0036 2071     		strb	r0, [r4, #4]
 141:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_x = u8g2_font_get_byte(font, 6);
 350              		.loc 1 141 0
 351 0038 0521     		movs	r1, #5
 352 003a 2846     		mov	r0, r5
 353 003c FFF7FEFF 		bl	u8g2_font_get_byte
 354              	.LVL46:
 355 0040 6071     		strb	r0, [r4, #5]
 142:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_char_y = u8g2_font_get_byte(font, 7);
 356              		.loc 1 142 0
 357 0042 0621     		movs	r1, #6
 358 0044 2846     		mov	r0, r5
 359 0046 FFF7FEFF 		bl	u8g2_font_get_byte
 360              	.LVL47:
 361 004a A071     		strb	r0, [r4, #6]
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 25


 143:u8g2/csrc/u8g2_font.c ****   font_info->bits_per_delta_x = u8g2_font_get_byte(font, 8);
 362              		.loc 1 143 0
 363 004c 0721     		movs	r1, #7
 364 004e 2846     		mov	r0, r5
 365 0050 FFF7FEFF 		bl	u8g2_font_get_byte
 366              	.LVL48:
 367 0054 E071     		strb	r0, [r4, #7]
 144:u8g2/csrc/u8g2_font.c ****   
 368              		.loc 1 144 0
 369 0056 0821     		movs	r1, #8
 370 0058 2846     		mov	r0, r5
 371 005a FFF7FEFF 		bl	u8g2_font_get_byte
 372              	.LVL49:
 373 005e 2072     		strb	r0, [r4, #8]
 147:u8g2/csrc/u8g2_font.c ****   font_info->max_char_height = u8g2_font_get_byte(font, 10);
 374              		.loc 1 147 0
 375 0060 0921     		movs	r1, #9
 376 0062 2846     		mov	r0, r5
 377 0064 FFF7FEFF 		bl	u8g2_font_get_byte
 378              	.LVL50:
 379 0068 6072     		strb	r0, [r4, #9]
 148:u8g2/csrc/u8g2_font.c ****   font_info->x_offset = u8g2_font_get_byte(font, 11);
 380              		.loc 1 148 0
 381 006a 0A21     		movs	r1, #10
 382 006c 2846     		mov	r0, r5
 383 006e FFF7FEFF 		bl	u8g2_font_get_byte
 384              	.LVL51:
 385 0072 A072     		strb	r0, [r4, #10]
 149:u8g2/csrc/u8g2_font.c ****   font_info->y_offset = u8g2_font_get_byte(font, 12);
 386              		.loc 1 149 0
 387 0074 0B21     		movs	r1, #11
 388 0076 2846     		mov	r0, r5
 389 0078 FFF7FEFF 		bl	u8g2_font_get_byte
 390              	.LVL52:
 391 007c E072     		strb	r0, [r4, #11]
 150:u8g2/csrc/u8g2_font.c ****   
 392              		.loc 1 150 0
 393 007e 0C21     		movs	r1, #12
 394 0080 2846     		mov	r0, r5
 395 0082 FFF7FEFF 		bl	u8g2_font_get_byte
 396              	.LVL53:
 397 0086 2073     		strb	r0, [r4, #12]
 153:u8g2/csrc/u8g2_font.c ****   font_info->descent_g = u8g2_font_get_byte(font, 14);
 398              		.loc 1 153 0
 399 0088 0D21     		movs	r1, #13
 400 008a 2846     		mov	r0, r5
 401 008c FFF7FEFF 		bl	u8g2_font_get_byte
 402              	.LVL54:
 403 0090 6073     		strb	r0, [r4, #13]
 154:u8g2/csrc/u8g2_font.c ****   font_info->ascent_para = u8g2_font_get_byte(font, 15);
 404              		.loc 1 154 0
 405 0092 0E21     		movs	r1, #14
 406 0094 2846     		mov	r0, r5
 407 0096 FFF7FEFF 		bl	u8g2_font_get_byte
 408              	.LVL55:
 409 009a A073     		strb	r0, [r4, #14]
 155:u8g2/csrc/u8g2_font.c ****   font_info->descent_para = u8g2_font_get_byte(font, 16);
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 26


 410              		.loc 1 155 0
 411 009c 0F21     		movs	r1, #15
 412 009e 2846     		mov	r0, r5
 413 00a0 FFF7FEFF 		bl	u8g2_font_get_byte
 414              	.LVL56:
 415 00a4 E073     		strb	r0, [r4, #15]
 156:u8g2/csrc/u8g2_font.c ****   
 416              		.loc 1 156 0
 417 00a6 1021     		movs	r1, #16
 418 00a8 2846     		mov	r0, r5
 419 00aa FFF7FEFF 		bl	u8g2_font_get_byte
 420              	.LVL57:
 421 00ae 2074     		strb	r0, [r4, #16]
 159:u8g2/csrc/u8g2_font.c ****   font_info->start_pos_lower_a = u8g2_font_get_word(font, 19); 
 422              		.loc 1 159 0
 423 00b0 1121     		movs	r1, #17
 424 00b2 2846     		mov	r0, r5
 425 00b4 FFF7FEFF 		bl	u8g2_font_get_word
 426              	.LVL58:
 427 00b8 6082     		strh	r0, [r4, #18]	@ movhi
 160:u8g2/csrc/u8g2_font.c ****   
 428              		.loc 1 160 0
 429 00ba 1321     		movs	r1, #19
 430 00bc 2846     		mov	r0, r5
 431 00be FFF7FEFF 		bl	u8g2_font_get_word
 432              	.LVL59:
 433 00c2 A082     		strh	r0, [r4, #20]	@ movhi
 164:u8g2/csrc/u8g2_font.c **** #endif
 434              		.loc 1 164 0
 435 00c4 1521     		movs	r1, #21
 436 00c6 2846     		mov	r0, r5
 437 00c8 FFF7FEFF 		bl	u8g2_font_get_word
 438              	.LVL60:
 439 00cc E082     		strh	r0, [r4, #22]	@ movhi
 166:u8g2/csrc/u8g2_font.c **** 
 440              		.loc 1 166 0
 441 00ce 38BD     		pop	{r3, r4, r5, pc}
 442              		.cfi_endproc
 443              	.LFE2:
 445              		.section	.text.u8g2_GetFontSize,"ax",%progbits
 446              		.align	1
 447              		.global	u8g2_GetFontSize
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	u8g2_GetFontSize:
 454              	.LFB3:
 171:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 455              		.loc 1 171 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 0
 458              		@ frame_needed = 0, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460              	.LVL61:
 174:u8g2/csrc/u8g2_font.c ****   
 461              		.loc 1 174 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 27


 462 0000 00F11703 		add	r3, r0, #23
 463              	.LVL62:
 464              	.L25:
 178:u8g2/csrc/u8g2_font.c ****       break;
 465              		.loc 1 178 0
 466 0004 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 467 0006 0AB1     		cbz	r2, .L24
 180:u8g2/csrc/u8g2_font.c ****   }
 468              		.loc 1 180 0
 469 0008 1344     		add	r3, r3, r2
 470              	.LVL63:
 178:u8g2/csrc/u8g2_font.c ****       break;
 471              		.loc 1 178 0
 472 000a FBE7     		b	.L25
 473              	.L24:
 184:u8g2/csrc/u8g2_font.c ****   
 474              		.loc 1 184 0
 475 000c 0233     		adds	r3, r3, #2
 476              	.LVL64:
 477              	.L27:
 188:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 478              		.loc 1 188 0
 479 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 480              	.LVL65:
 190:u8g2/csrc/u8g2_font.c ****     if ( e == 0 )
 481              		.loc 1 190 0
 482 0010 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 483              	.LVL66:
 191:u8g2/csrc/u8g2_font.c ****       break;
 484              		.loc 1 191 0
 485 0012 52EA0122 		orrs	r2, r2, r1, lsl #8
 486              	.LVL67:
 487 0016 02D0     		beq	.L26
 193:u8g2/csrc/u8g2_font.c ****   }
 488              		.loc 1 193 0
 489 0018 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 490 001a 1344     		add	r3, r3, r2
 491              	.LVL68:
 188:u8g2/csrc/u8g2_font.c ****     e <<= 8;
 492              		.loc 1 188 0
 493 001c F7E7     		b	.L27
 494              	.LVL69:
 495              	.L26:
 196:u8g2/csrc/u8g2_font.c **** }
 496              		.loc 1 196 0
 497 001e 181A     		subs	r0, r3, r0
 498              	.LVL70:
 197:u8g2/csrc/u8g2_font.c **** 
 499              		.loc 1 197 0
 500 0020 0230     		adds	r0, r0, #2
 501 0022 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE3:
 505              		.section	.text.u8g2_GetFontBBXWidth,"ax",%progbits
 506              		.align	1
 507              		.global	u8g2_GetFontBBXWidth
 508              		.syntax unified
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 28


 509              		.thumb
 510              		.thumb_func
 511              		.fpu softvfp
 513              	u8g2_GetFontBBXWidth:
 514              	.LFB4:
 203:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_width;		/* new font info structure */
 515              		.loc 1 203 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 0
 518              		@ frame_needed = 0, uses_anonymous_args = 0
 519              		@ link register save eliminated.
 520              	.LVL71:
 205:u8g2/csrc/u8g2_font.c **** 
 521              		.loc 1 205 0
 522 0000 90F86900 		ldrb	r0, [r0, #105]	@ zero_extendqisi2
 523              	.LVL72:
 524 0004 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE4:
 528              		.section	.text.u8g2_GetFontBBXHeight,"ax",%progbits
 529              		.align	1
 530              		.global	u8g2_GetFontBBXHeight
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 534              		.fpu softvfp
 536              	u8g2_GetFontBBXHeight:
 537              	.LFB5:
 208:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.max_char_height;		/* new font info structure */
 538              		.loc 1 208 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543              	.LVL73:
 210:u8g2/csrc/u8g2_font.c **** 
 544              		.loc 1 210 0
 545 0000 90F86A00 		ldrb	r0, [r0, #106]	@ zero_extendqisi2
 546              	.LVL74:
 547 0004 7047     		bx	lr
 548              		.cfi_endproc
 549              	.LFE5:
 551              		.section	.text.u8g2_GetFontBBXOffX,"ax",%progbits
 552              		.align	1
 553              		.global	u8g2_GetFontBBXOffX
 554              		.syntax unified
 555              		.thumb
 556              		.thumb_func
 557              		.fpu softvfp
 559              	u8g2_GetFontBBXOffX:
 560              	.LFB6:
 214:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.x_offset;		/* new font info structure */
 561              		.loc 1 214 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 29


 566              	.LVL75:
 216:u8g2/csrc/u8g2_font.c **** 
 567              		.loc 1 216 0
 568 0000 90F96B00 		ldrsb	r0, [r0, #107]
 569              	.LVL76:
 570 0004 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE6:
 574              		.section	.text.u8g2_GetFontBBXOffY,"ax",%progbits
 575              		.align	1
 576              		.global	u8g2_GetFontBBXOffY
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 580              		.fpu softvfp
 582              	u8g2_GetFontBBXOffY:
 583              	.LFB7:
 220:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.y_offset;		/* new font info structure */
 584              		.loc 1 220 0
 585              		.cfi_startproc
 586              		@ args = 0, pretend = 0, frame = 0
 587              		@ frame_needed = 0, uses_anonymous_args = 0
 588              		@ link register save eliminated.
 589              	.LVL77:
 222:u8g2/csrc/u8g2_font.c **** 
 590              		.loc 1 222 0
 591 0000 90F96C00 		ldrsb	r0, [r0, #108]
 592              	.LVL78:
 593 0004 7047     		bx	lr
 594              		.cfi_endproc
 595              	.LFE7:
 597              		.section	.text.u8g2_GetFontCapitalAHeight,"ax",%progbits
 598              		.align	1
 599              		.global	u8g2_GetFontCapitalAHeight
 600              		.syntax unified
 601              		.thumb
 602              		.thumb_func
 603              		.fpu softvfp
 605              	u8g2_GetFontCapitalAHeight:
 606              	.LFB8:
 226:u8g2/csrc/u8g2_font.c ****   return u8g2->font_info.ascent_A;		/* new font info structure */
 607              		.loc 1 226 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612              	.LVL79:
 228:u8g2/csrc/u8g2_font.c **** 
 613              		.loc 1 228 0
 614 0000 90F86D00 		ldrb	r0, [r0, #109]	@ zero_extendqisi2
 615              	.LVL80:
 616 0004 7047     		bx	lr
 617              		.cfi_endproc
 618              	.LFE8:
 620              		.section	.text.u8g2_font_decode_get_unsigned_bits,"ax",%progbits
 621              		.align	1
 622              		.global	u8g2_font_decode_get_unsigned_bits
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 30


 623              		.syntax unified
 624              		.thumb
 625              		.thumb_func
 626              		.fpu softvfp
 628              	u8g2_font_decode_get_unsigned_bits:
 629              	.LFB9:
 235:u8g2/csrc/u8g2_font.c ****   uint8_t val;
 630              		.loc 1 235 0
 631              		.cfi_startproc
 632              		@ args = 0, pretend = 0, frame = 0
 633              		@ frame_needed = 0, uses_anonymous_args = 0
 634              		@ link register save eliminated.
 635              	.LVL81:
 636 0000 70B4     		push	{r4, r5, r6}
 637              	.LCFI1:
 638              		.cfi_def_cfa_offset 12
 639              		.cfi_offset 4, -12
 640              		.cfi_offset 5, -8
 641              		.cfi_offset 6, -4
 237:u8g2/csrc/u8g2_font.c ****   uint8_t bit_pos_plus_cnt;
 642              		.loc 1 237 0
 643 0002 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 644              	.LVL82:
 241:u8g2/csrc/u8g2_font.c ****   
 645              		.loc 1 241 0
 646 0004 0668     		ldr	r6, [r0]
 647 0006 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 648              	.LVL83:
 243:u8g2/csrc/u8g2_font.c ****   bit_pos_plus_cnt = bit_pos;
 649              		.loc 1 243 0
 650 0008 42FA04F5 		asr	r5, r2, r4
 651 000c EAB2     		uxtb	r2, r5
 652              	.LVL84:
 245:u8g2/csrc/u8g2_font.c ****   if ( bit_pos_plus_cnt >= 8 )
 653              		.loc 1 245 0
 654 000e 6318     		adds	r3, r4, r1
 655 0010 DBB2     		uxtb	r3, r3
 656              	.LVL85:
 246:u8g2/csrc/u8g2_font.c ****   {
 657              		.loc 1 246 0
 658 0012 072B     		cmp	r3, #7
 659 0014 0AD9     		bls	.L34
 660              	.LVL86:
 661              	.LBB2:
 249:u8g2/csrc/u8g2_font.c ****     f->decode_ptr++;
 662              		.loc 1 249 0
 663 0016 C4F10804 		rsb	r4, r4, #8
 664              	.LVL87:
 665 001a E4B2     		uxtb	r4, r4
 666              	.LVL88:
 250:u8g2/csrc/u8g2_font.c ****     //val |= *(f->decode_ptr) << (8-bit_pos);
 667              		.loc 1 250 0
 668 001c 721C     		adds	r2, r6, #1
 669              	.LVL89:
 670 001e 0260     		str	r2, [r0]
 252:u8g2/csrc/u8g2_font.c ****     //bit_pos -= 8;
 671              		.loc 1 252 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 31


 672 0020 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 673 0022 A240     		lsls	r2, r2, r4
 674 0024 2A43     		orrs	r2, r2, r5
 675 0026 D2B2     		uxtb	r2, r2
 676              	.LVL90:
 254:u8g2/csrc/u8g2_font.c ****   }
 677              		.loc 1 254 0
 678 0028 083B     		subs	r3, r3, #8
 679              	.LVL91:
 680 002a DBB2     		uxtb	r3, r3
 681              	.LVL92:
 682              	.L34:
 683              	.LBE2:
 256:u8g2/csrc/u8g2_font.c ****   //bit_pos += cnt;
 684              		.loc 1 256 0
 685 002c 4FF0FF34 		mov	r4, #-1
 686 0030 04FA01F1 		lsl	r1, r4, r1
 687              	.LVL93:
 259:u8g2/csrc/u8g2_font.c ****   return val;
 688              		.loc 1 259 0
 689 0034 8372     		strb	r3, [r0, #10]
 690              	.LVL94:
 261:u8g2/csrc/u8g2_font.c **** 
 691              		.loc 1 261 0
 692 0036 22EA0100 		bic	r0, r2, r1
 693              	.LVL95:
 694 003a 70BC     		pop	{r4, r5, r6}
 695              	.LCFI2:
 696              		.cfi_restore 6
 697              		.cfi_restore 5
 698              		.cfi_restore 4
 699              		.cfi_def_cfa_offset 0
 700 003c 7047     		bx	lr
 701              		.cfi_endproc
 702              	.LFE9:
 704              		.section	.text.u8g2_font_setup_decode,"ax",%progbits
 705              		.align	1
 706              		.syntax unified
 707              		.thumb
 708              		.thumb_func
 709              		.fpu softvfp
 711              	u8g2_font_setup_decode:
 712              	.LFB14:
 451:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_t *decode = &(u8g2->font_decode);
 713              		.loc 1 451 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 717              	.LVL96:
 718 0000 38B5     		push	{r3, r4, r5, lr}
 719              	.LCFI3:
 720              		.cfi_def_cfa_offset 16
 721              		.cfi_offset 3, -16
 722              		.cfi_offset 4, -12
 723              		.cfi_offset 5, -8
 724              		.cfi_offset 14, -4
 725 0002 0446     		mov	r4, r0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 32


 452:u8g2/csrc/u8g2_font.c ****   decode->decode_ptr = glyph_data;
 726              		.loc 1 452 0
 727 0004 00F15005 		add	r5, r0, #80
 728              	.LVL97:
 453:u8g2/csrc/u8g2_font.c ****   decode->decode_bit_pos = 0;
 729              		.loc 1 453 0
 730 0008 0165     		str	r1, [r0, #80]
 454:u8g2/csrc/u8g2_font.c ****   
 731              		.loc 1 454 0
 732 000a 0023     		movs	r3, #0
 733 000c 80F85A30 		strb	r3, [r0, #90]
 462:u8g2/csrc/u8g2_font.c ****   decode->glyph_height = u8g2_font_decode_get_unsigned_bits(decode,u8g2->font_info.bits_per_char_he
 734              		.loc 1 462 0
 735 0010 90F86410 		ldrb	r1, [r0, #100]	@ zero_extendqisi2
 736              	.LVL98:
 737 0014 2846     		mov	r0, r5
 738              	.LVL99:
 739 0016 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 740              	.LVL100:
 741 001a 84F85800 		strb	r0, [r4, #88]
 463:u8g2/csrc/u8g2_font.c ****   
 742              		.loc 1 463 0
 743 001e 94F86510 		ldrb	r1, [r4, #101]	@ zero_extendqisi2
 744 0022 2846     		mov	r0, r5
 745 0024 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 746              	.LVL101:
 747 0028 84F85900 		strb	r0, [r4, #89]
 465:u8g2/csrc/u8g2_font.c ****   decode->bg_color = (decode->fg_color == 0 ? 1 : 0);
 748              		.loc 1 465 0
 749 002c 94F87D30 		ldrb	r3, [r4, #125]	@ zero_extendqisi2
 750 0030 84F85C30 		strb	r3, [r4, #92]
 466:u8g2/csrc/u8g2_font.c **** }
 751              		.loc 1 466 0
 752 0034 B3FA83F3 		clz	r3, r3
 753 0038 5B09     		lsrs	r3, r3, #5
 754 003a 84F85D30 		strb	r3, [r4, #93]
 467:u8g2/csrc/u8g2_font.c **** 
 755              		.loc 1 467 0
 756 003e 38BD     		pop	{r3, r4, r5, pc}
 757              		.cfi_endproc
 758              	.LFE14:
 760              		.section	.text.u8g2_font_decode_get_signed_bits,"ax",%progbits
 761              		.align	1
 762              		.global	u8g2_font_decode_get_signed_bits
 763              		.syntax unified
 764              		.thumb
 765              		.thumb_func
 766              		.fpu softvfp
 768              	u8g2_font_decode_get_signed_bits:
 769              	.LFB10:
 280:u8g2/csrc/u8g2_font.c ****   int8_t v, d;
 770              		.loc 1 280 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              	.LVL102:
 775 0000 10B5     		push	{r4, lr}
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 33


 776              	.LCFI4:
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 4, -8
 779              		.cfi_offset 14, -4
 780 0002 0C46     		mov	r4, r1
 282:u8g2/csrc/u8g2_font.c ****   d = 1;
 781              		.loc 1 282 0
 782 0004 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 783              	.LVL103:
 284:u8g2/csrc/u8g2_font.c ****   d <<= cnt;
 784              		.loc 1 284 0
 785 0008 013C     		subs	r4, r4, #1
 786 000a E4B2     		uxtb	r4, r4
 787              	.LVL104:
 285:u8g2/csrc/u8g2_font.c ****   v -= d;
 788              		.loc 1 285 0
 789 000c 0123     		movs	r3, #1
 790 000e A340     		lsls	r3, r3, r4
 791              	.LVL105:
 286:u8g2/csrc/u8g2_font.c ****   return v;
 792              		.loc 1 286 0
 793 0010 C01A     		subs	r0, r0, r3
 794              	.LVL106:
 289:u8g2/csrc/u8g2_font.c **** 
 795              		.loc 1 289 0
 796 0012 40B2     		sxtb	r0, r0
 797 0014 10BD     		pop	{r4, pc}
 798              		.cfi_endproc
 799              	.LFE10:
 801              		.section	.text.u8g2_font_decode_len,"ax",%progbits
 802              		.align	1
 803              		.global	u8g2_font_decode_len
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 807              		.fpu softvfp
 809              	u8g2_font_decode_len:
 810              	.LFB13:
 357:u8g2/csrc/u8g2_font.c ****   uint8_t cnt;	/* total number of remaining pixels, which have to be drawn */
 811              		.loc 1 357 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 16
 814              		@ frame_needed = 0, uses_anonymous_args = 0
 815              	.LVL107:
 816 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 817              	.LCFI5:
 818              		.cfi_def_cfa_offset 36
 819              		.cfi_offset 4, -36
 820              		.cfi_offset 5, -32
 821              		.cfi_offset 6, -28
 822              		.cfi_offset 7, -24
 823              		.cfi_offset 8, -20
 824              		.cfi_offset 9, -16
 825              		.cfi_offset 10, -12
 826              		.cfi_offset 11, -8
 827              		.cfi_offset 14, -4
 828 0004 87B0     		sub	sp, sp, #28
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 34


 829              	.LCFI6:
 830              		.cfi_def_cfa_offset 64
 831 0006 0646     		mov	r6, r0
 832 0008 0C46     		mov	r4, r1
 833 000a 0592     		str	r2, [sp, #20]
 834              	.LVL108:
 374:u8g2/csrc/u8g2_font.c ****   ly = decode->y;
 835              		.loc 1 374 0
 836 000c 90F95630 		ldrsb	r3, [r0, #86]
 837 0010 5FFA83FA 		uxtb	r10, r3
 838              	.LVL109:
 375:u8g2/csrc/u8g2_font.c ****   
 839              		.loc 1 375 0
 840 0014 90F95780 		ldrsb	r8, [r0, #87]
 841 0018 5FFA88F8 		uxtb	r8, r8
 842              	.LVL110:
 843 001c 16E0     		b	.L45
 844              	.LVL111:
 845              	.L46:
 387:u8g2/csrc/u8g2_font.c ****     
 846              		.loc 1 387 0
 847 001e 0394     		str	r4, [sp, #12]
 848 0020 1DE0     		b	.L41
 849              	.LVL112:
 850              	.L48:
 409:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 851              		.loc 1 409 0
 852 0022 96F85C30 		ldrb	r3, [r6, #92]	@ zero_extendqisi2
 853 0026 86F87D30 		strb	r3, [r6, #125]
 410:u8g2/csrc/u8g2_font.c **** 	x, 
 854              		.loc 1 410 0
 855 002a 0097     		str	r7, [sp]
 856 002c 039B     		ldr	r3, [sp, #12]
 857 002e 0246     		mov	r2, r0
 858 0030 0499     		ldr	r1, [sp, #16]
 859 0032 3046     		mov	r0, r6
 860              	.LVL113:
 861 0034 FFF7FEFF 		bl	u8g2_DrawHVLine
 862              	.LVL114:
 863              	.L43:
 437:u8g2/csrc/u8g2_font.c ****       break;
 864              		.loc 1 437 0
 865 0038 AC42     		cmp	r4, r5
 866 003a 39D3     		bcc	.L44
 439:u8g2/csrc/u8g2_font.c ****     lx = 0;
 867              		.loc 1 439 0
 868 003c 641B     		subs	r4, r4, r5
 869              	.LVL115:
 870 003e E4B2     		uxtb	r4, r4
 871              	.LVL116:
 441:u8g2/csrc/u8g2_font.c ****   }
 872              		.loc 1 441 0
 873 0040 08F10108 		add	r8, r8, #1
 874              	.LVL117:
 875 0044 5FFA88F8 		uxtb	r8, r8
 876              	.LVL118:
 440:u8g2/csrc/u8g2_font.c ****     ly++;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 35


 877              		.loc 1 440 0
 878 0048 4FF0000A 		mov	r10, #0
 879              	.LVL119:
 880              	.L45:
 380:u8g2/csrc/u8g2_font.c ****     rem -= lx;
 881              		.loc 1 380 0
 882 004c 96F95850 		ldrsb	r5, [r6, #88]
 883 0050 EDB2     		uxtb	r5, r5
 884              	.LVL120:
 381:u8g2/csrc/u8g2_font.c ****     
 885              		.loc 1 381 0
 886 0052 A5EB0A05 		sub	r5, r5, r10
 887              	.LVL121:
 888 0056 EDB2     		uxtb	r5, r5
 889              	.LVL122:
 386:u8g2/csrc/u8g2_font.c ****       current = cnt;
 890              		.loc 1 386 0
 891 0058 AC42     		cmp	r4, r5
 892 005a E0D3     		bcc	.L46
 385:u8g2/csrc/u8g2_font.c ****     if ( cnt < rem )
 893              		.loc 1 385 0
 894 005c 0395     		str	r5, [sp, #12]
 895              	.L41:
 896              	.LVL123:
 395:u8g2/csrc/u8g2_font.c **** 
 897              		.loc 1 395 0
 898 005e 96F85590 		ldrb	r9, [r6, #85]	@ zero_extendqisi2
 899              	.LVL124:
 399:u8g2/csrc/u8g2_font.c ****     y = u8g2_add_vector_y(y, lx, ly, decode->dir);
 900              		.loc 1 399 0
 901 0062 4FFA8AF1 		sxtb	r1, r10
 902 0066 4FFA88FB 		sxtb	fp, r8
 903 006a 96F85E70 		ldrb	r7, [r6, #94]	@ zero_extendqisi2
 904 006e 3B46     		mov	r3, r7
 905 0070 5A46     		mov	r2, fp
 906 0072 0291     		str	r1, [sp, #8]
 907 0074 96F85400 		ldrb	r0, [r6, #84]	@ zero_extendqisi2
 908 0078 FFF7FEFF 		bl	u8g2_add_vector_x
 909              	.LVL125:
 910 007c 0490     		str	r0, [sp, #16]
 911              	.LVL126:
 400:u8g2/csrc/u8g2_font.c **** #else
 912              		.loc 1 400 0
 913 007e 3B46     		mov	r3, r7
 914 0080 5A46     		mov	r2, fp
 915 0082 0299     		ldr	r1, [sp, #8]
 916 0084 4846     		mov	r0, r9
 917 0086 FFF7FEFF 		bl	u8g2_add_vector_y
 918              	.LVL127:
 407:u8g2/csrc/u8g2_font.c ****     {
 919              		.loc 1 407 0
 920 008a 059B     		ldr	r3, [sp, #20]
 921 008c 002B     		cmp	r3, #0
 922 008e C8D1     		bne	.L48
 421:u8g2/csrc/u8g2_font.c ****     {
 923              		.loc 1 421 0
 924 0090 96F85B30 		ldrb	r3, [r6, #91]	@ zero_extendqisi2
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 36


 925 0094 002B     		cmp	r3, #0
 926 0096 CFD1     		bne	.L43
 423:u8g2/csrc/u8g2_font.c ****       u8g2_DrawHVLine(u8g2, 
 927              		.loc 1 423 0
 928 0098 96F85D30 		ldrb	r3, [r6, #93]	@ zero_extendqisi2
 929 009c 86F87D30 		strb	r3, [r6, #125]
 424:u8g2/csrc/u8g2_font.c **** 	x, 
 930              		.loc 1 424 0
 931 00a0 0097     		str	r7, [sp]
 932 00a2 039B     		ldr	r3, [sp, #12]
 933 00a4 0246     		mov	r2, r0
 934 00a6 0499     		ldr	r1, [sp, #16]
 935 00a8 3046     		mov	r0, r6
 936              	.LVL128:
 937 00aa FFF7FEFF 		bl	u8g2_DrawHVLine
 938              	.LVL129:
 939 00ae C3E7     		b	.L43
 940              	.L44:
 443:u8g2/csrc/u8g2_font.c ****   
 941              		.loc 1 443 0
 942 00b0 5444     		add	r4, r4, r10
 943              	.LVL130:
 445:u8g2/csrc/u8g2_font.c ****   decode->y = ly;
 944              		.loc 1 445 0
 945 00b2 86F85640 		strb	r4, [r6, #86]
 446:u8g2/csrc/u8g2_font.c ****   
 946              		.loc 1 446 0
 947 00b6 86F857B0 		strb	fp, [r6, #87]
 448:u8g2/csrc/u8g2_font.c **** 
 948              		.loc 1 448 0
 949 00ba 07B0     		add	sp, sp, #28
 950              	.LCFI7:
 951              		.cfi_def_cfa_offset 36
 952              		@ sp needed
 953 00bc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 954              		.cfi_endproc
 955              	.LFE13:
 957              		.section	.text.u8g2_font_decode_glyph,"ax",%progbits
 958              		.align	1
 959              		.global	u8g2_font_decode_glyph
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu softvfp
 965              	u8g2_font_decode_glyph:
 966              	.LFB15:
 485:u8g2/csrc/u8g2_font.c ****   uint8_t a, b;
 967              		.loc 1 485 0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 8
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              	.LVL131:
 972 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 973              	.LCFI8:
 974              		.cfi_def_cfa_offset 36
 975              		.cfi_offset 4, -36
 976              		.cfi_offset 5, -32
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 37


 977              		.cfi_offset 6, -28
 978              		.cfi_offset 7, -24
 979              		.cfi_offset 8, -20
 980              		.cfi_offset 9, -16
 981              		.cfi_offset 10, -12
 982              		.cfi_offset 11, -8
 983              		.cfi_offset 14, -4
 984 0004 85B0     		sub	sp, sp, #20
 985              	.LCFI9:
 986              		.cfi_def_cfa_offset 56
 987 0006 0446     		mov	r4, r0
 490:u8g2/csrc/u8g2_font.c ****     
 988              		.loc 1 490 0
 989 0008 00F15005 		add	r5, r0, #80
 990              	.LVL132:
 492:u8g2/csrc/u8g2_font.c ****   h = u8g2->font_decode.glyph_height;
 991              		.loc 1 492 0
 992 000c FFF7FEFF 		bl	u8g2_font_setup_decode
 993              	.LVL133:
 493:u8g2/csrc/u8g2_font.c ****   
 994              		.loc 1 493 0
 995 0010 94F95980 		ldrsb	r8, [r4, #89]
 996              	.LVL134:
 495:u8g2/csrc/u8g2_font.c ****   y = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_char_y);
 997              		.loc 1 495 0
 998 0014 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 999 0018 2846     		mov	r0, r5
 1000 001a FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1001              	.LVL135:
 1002 001e 8346     		mov	fp, r0
 1003              	.LVL136:
 496:u8g2/csrc/u8g2_font.c ****   d = u8g2_font_decode_get_signed_bits(decode, u8g2->font_info.bits_per_delta_x);
 1004              		.loc 1 496 0
 1005 0020 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1006 0024 2846     		mov	r0, r5
 1007 0026 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1008              	.LVL137:
 1009 002a 0646     		mov	r6, r0
 1010              	.LVL138:
 497:u8g2/csrc/u8g2_font.c ****   
 1011              		.loc 1 497 0
 1012 002c 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1013 0030 2846     		mov	r0, r5
 1014 0032 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1015              	.LVL139:
 1016 0036 0290     		str	r0, [sp, #8]
 1017              	.LVL140:
 499:u8g2/csrc/u8g2_font.c ****   {
 1018              		.loc 1 499 0
 1019 0038 94F95870 		ldrsb	r7, [r4, #88]
 1020 003c 002F     		cmp	r7, #0
 1021 003e 58DD     		ble	.L50
 502:u8g2/csrc/u8g2_font.c ****     decode->target_y = u8g2_add_vector_y(decode->target_y, x, -(h+y), decode->dir);
 1022              		.loc 1 502 0
 1023 0040 5FFA88F9 		uxtb	r9, r8
 1024 0044 4E44     		add	r6, r6, r9
 1025              	.LVL141:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 38


 1026 0046 F6B2     		uxtb	r6, r6
 1027 0048 7642     		negs	r6, r6
 1028 004a 76B2     		sxtb	r6, r6
 1029 004c 94F85EA0 		ldrb	r10, [r4, #94]	@ zero_extendqisi2
 1030 0050 5346     		mov	r3, r10
 1031 0052 3246     		mov	r2, r6
 1032 0054 CDF80CB0 		str	fp, [sp, #12]
 1033 0058 5946     		mov	r1, fp
 1034 005a 94F85400 		ldrb	r0, [r4, #84]	@ zero_extendqisi2
 1035 005e FFF7FEFF 		bl	u8g2_add_vector_x
 1036              	.LVL142:
 1037 0062 8346     		mov	fp, r0
 1038              	.LVL143:
 1039 0064 84F85400 		strb	r0, [r4, #84]
 503:u8g2/csrc/u8g2_font.c **** #else
 1040              		.loc 1 503 0
 1041 0068 5346     		mov	r3, r10
 1042 006a 3246     		mov	r2, r6
 1043 006c 0399     		ldr	r1, [sp, #12]
 1044 006e 94F85500 		ldrb	r0, [r4, #85]	@ zero_extendqisi2
 1045 0072 FFF7FEFF 		bl	u8g2_add_vector_y
 1046              	.LVL144:
 1047 0076 0246     		mov	r2, r0
 1048 0078 84F85500 		strb	r0, [r4, #85]
 1049              	.LVL145:
 1050              	.LBB3:
 519:u8g2/csrc/u8g2_font.c ****       {
 1051              		.loc 1 519 0
 1052 007c BAF1030F 		cmp	r10, #3
 1053 0080 65D8     		bhi	.L59
 1054 0082 DFE80AF0 		tbb	[pc, r10]
 1055              	.L53:
 1056 0086 02       		.byte	(.L52-.L53)/2
 1057 0087 3A       		.byte	(.L54-.L53)/2
 1058 0088 47       		.byte	(.L55-.L53)/2
 1059 0089 59       		.byte	(.L56-.L53)/2
 1060              		.p2align 1
 1061              	.L52:
 522:u8g2/csrc/u8g2_font.c **** 	    y1 += h;
 1062              		.loc 1 522 0
 1063 008a FBB2     		uxtb	r3, r7
 1064 008c 5B44     		add	r3, r3, fp
 1065 008e DBB2     		uxtb	r3, r3
 1066              	.LVL146:
 523:u8g2/csrc/u8g2_font.c **** 	    break;
 1067              		.loc 1 523 0
 1068 0090 4844     		add	r0, r9, r0
 1069              	.LVL147:
 1070 0092 C0B2     		uxtb	r0, r0
 1071              	.LVL148:
 1072              	.L51:
 551:u8g2/csrc/u8g2_font.c **** 	return d;
 1073              		.loc 1 551 0
 1074 0094 0090     		str	r0, [sp]
 1075 0096 5946     		mov	r1, fp
 1076 0098 2046     		mov	r0, r4
 1077              	.LVL149:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 39


 1078 009a FFF7FEFF 		bl	u8g2_IsIntersection
 1079              	.LVL150:
 1080 009e 40B3     		cbz	r0, .L50
 1081              	.LBE3:
 557:u8g2/csrc/u8g2_font.c ****     decode->y = 0;
 1082              		.loc 1 557 0
 1083 00a0 0023     		movs	r3, #0
 1084 00a2 84F85630 		strb	r3, [r4, #86]
 558:u8g2/csrc/u8g2_font.c ****     
 1085              		.loc 1 558 0
 1086 00a6 84F85730 		strb	r3, [r4, #87]
 1087              	.L58:
 563:u8g2/csrc/u8g2_font.c ****       b = u8g2_font_decode_get_unsigned_bits(decode, u8g2->font_info.bits_per_1);
 1088              		.loc 1 563 0
 1089 00aa 94F86210 		ldrb	r1, [r4, #98]	@ zero_extendqisi2
 1090 00ae 2846     		mov	r0, r5
 1091 00b0 FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1092              	.LVL151:
 1093 00b4 0746     		mov	r7, r0
 1094              	.LVL152:
 564:u8g2/csrc/u8g2_font.c ****       do
 1095              		.loc 1 564 0
 1096 00b6 94F86310 		ldrb	r1, [r4, #99]	@ zero_extendqisi2
 1097 00ba 2846     		mov	r0, r5
 1098 00bc FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1099              	.LVL153:
 1100 00c0 0646     		mov	r6, r0
 1101              	.LVL154:
 1102              	.L57:
 567:u8g2/csrc/u8g2_font.c **** 	u8g2_font_decode_len(u8g2, b, 1);
 1103              		.loc 1 567 0 discriminator 1
 1104 00c2 0022     		movs	r2, #0
 1105 00c4 3946     		mov	r1, r7
 1106 00c6 2046     		mov	r0, r4
 1107 00c8 FFF7FEFF 		bl	u8g2_font_decode_len
 1108              	.LVL155:
 568:u8g2/csrc/u8g2_font.c ****       } while( u8g2_font_decode_get_unsigned_bits(decode, 1) != 0 );
 1109              		.loc 1 568 0 discriminator 1
 1110 00cc 0122     		movs	r2, #1
 1111 00ce 3146     		mov	r1, r6
 1112 00d0 2046     		mov	r0, r4
 1113 00d2 FFF7FEFF 		bl	u8g2_font_decode_len
 1114              	.LVL156:
 569:u8g2/csrc/u8g2_font.c **** 
 1115              		.loc 1 569 0 discriminator 1
 1116 00d6 0121     		movs	r1, #1
 1117 00d8 2846     		mov	r0, r5
 1118 00da FFF7FEFF 		bl	u8g2_font_decode_get_unsigned_bits
 1119              	.LVL157:
 1120 00de 0028     		cmp	r0, #0
 1121 00e0 EFD1     		bne	.L57
 571:u8g2/csrc/u8g2_font.c **** 	break;
 1122              		.loc 1 571 0
 1123 00e2 94F95730 		ldrsb	r3, [r4, #87]
 1124 00e6 4345     		cmp	r3, r8
 1125 00e8 DFDB     		blt	.L58
 576:u8g2/csrc/u8g2_font.c ****   }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 40


 1126              		.loc 1 576 0
 1127 00ea 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 1128 00ee 84F87D30 		strb	r3, [r4, #125]
 1129              	.LVL158:
 1130              	.L50:
 579:u8g2/csrc/u8g2_font.c **** 
 1131              		.loc 1 579 0
 1132 00f2 0298     		ldr	r0, [sp, #8]
 1133 00f4 05B0     		add	sp, sp, #20
 1134              	.LCFI10:
 1135              		.cfi_remember_state
 1136              		.cfi_def_cfa_offset 36
 1137              		@ sp needed
 1138 00f6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1139              	.LVL159:
 1140              	.L54:
 1141              	.LCFI11:
 1142              		.cfi_restore_state
 1143              	.LBB4:
 526:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1144              		.loc 1 526 0
 1145 00fa ABEB0901 		sub	r1, fp, r9
 1146 00fe C9B2     		uxtb	r1, r1
 1147              	.LVL160:
 527:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1148              		.loc 1 527 0
 1149 0100 0131     		adds	r1, r1, #1
 1150              	.LVL161:
 528:u8g2/csrc/u8g2_font.c **** 	    y1 += decode->glyph_width;
 1151              		.loc 1 528 0
 1152 0102 0BF10103 		add	r3, fp, #1
 1153 0106 DBB2     		uxtb	r3, r3
 1154              	.LVL162:
 529:u8g2/csrc/u8g2_font.c **** 	    break;
 1155              		.loc 1 529 0
 1156 0108 F8B2     		uxtb	r0, r7
 1157              	.LVL163:
 1158 010a 1044     		add	r0, r0, r2
 1159 010c C0B2     		uxtb	r0, r0
 1160              	.LVL164:
 527:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1161              		.loc 1 527 0
 1162 010e 5FFA81FB 		uxtb	fp, r1
 530:u8g2/csrc/u8g2_font.c **** 	case 2:
 1163              		.loc 1 530 0
 1164 0112 BFE7     		b	.L51
 1165              	.LVL165:
 1166              	.L55:
 532:u8g2/csrc/u8g2_font.c **** 	    x0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1167              		.loc 1 532 0
 1168 0114 F9B2     		uxtb	r1, r7
 1169 0116 ABEB0101 		sub	r1, fp, r1
 1170 011a C9B2     		uxtb	r1, r1
 1171              	.LVL166:
 533:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1172              		.loc 1 533 0
 1173 011c 0131     		adds	r1, r1, #1
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 41


 1174              	.LVL167:
 534:u8g2/csrc/u8g2_font.c **** 	    y0 -= h;
 1175              		.loc 1 534 0
 1176 011e 0BF10103 		add	r3, fp, #1
 1177 0122 DBB2     		uxtb	r3, r3
 1178              	.LVL168:
 535:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1179              		.loc 1 535 0
 1180 0124 A0EB0906 		sub	r6, r0, r9
 1181 0128 F6B2     		uxtb	r6, r6
 1182              	.LVL169:
 536:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1183              		.loc 1 536 0
 1184 012a 0136     		adds	r6, r6, #1
 1185              	.LVL170:
 537:u8g2/csrc/u8g2_font.c **** 	    break;	  
 1186              		.loc 1 537 0
 1187 012c 0132     		adds	r2, r2, #1
 1188 012e D0B2     		uxtb	r0, r2
 1189              	.LVL171:
 536:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1190              		.loc 1 536 0
 1191 0130 F2B2     		uxtb	r2, r6
 533:u8g2/csrc/u8g2_font.c **** 	    x1++;
 1192              		.loc 1 533 0
 1193 0132 5FFA81FB 		uxtb	fp, r1
 538:u8g2/csrc/u8g2_font.c **** 	case 3:
 1194              		.loc 1 538 0
 1195 0136 ADE7     		b	.L51
 1196              	.LVL172:
 1197              	.L56:
 540:u8g2/csrc/u8g2_font.c **** 	    y0 -= decode->glyph_width;
 1198              		.loc 1 540 0
 1199 0138 09EB0B03 		add	r3, r9, fp
 1200 013c DBB2     		uxtb	r3, r3
 1201              	.LVL173:
 541:u8g2/csrc/u8g2_font.c **** 	    y0++;	/* shift down, because of assymetric boundaries for the interseciton test */
 1202              		.loc 1 541 0
 1203 013e F9B2     		uxtb	r1, r7
 1204 0140 411A     		subs	r1, r0, r1
 1205 0142 C9B2     		uxtb	r1, r1
 1206              	.LVL174:
 542:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1207              		.loc 1 542 0
 1208 0144 0131     		adds	r1, r1, #1
 1209              	.LVL175:
 543:u8g2/csrc/u8g2_font.c **** 	    break;	  
 1210              		.loc 1 543 0
 1211 0146 0132     		adds	r2, r2, #1
 1212 0148 D0B2     		uxtb	r0, r2
 1213              	.LVL176:
 542:u8g2/csrc/u8g2_font.c **** 	    y1++;
 1214              		.loc 1 542 0
 1215 014a CAB2     		uxtb	r2, r1
 544:u8g2/csrc/u8g2_font.c ****       }
 1216              		.loc 1 544 0
 1217 014c A2E7     		b	.L51
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 42


 1218              	.LVL177:
 1219              	.L59:
 515:u8g2/csrc/u8g2_font.c ****       y1 = y0;
 1220              		.loc 1 515 0
 1221 014e 5B46     		mov	r3, fp
 1222 0150 A0E7     		b	.L51
 1223              	.LBE4:
 1224              		.cfi_endproc
 1225              	.LFE15:
 1227              		.section	.text.u8g2_font_get_glyph_data,"ax",%progbits
 1228              		.align	1
 1229              		.global	u8g2_font_get_glyph_data
 1230              		.syntax unified
 1231              		.thumb
 1232              		.thumb_func
 1233              		.fpu softvfp
 1235              	u8g2_font_get_glyph_data:
 1236              	.LFB16:
 590:u8g2/csrc/u8g2_font.c ****   const uint8_t *font = u8g2->font;
 1237              		.loc 1 590 0
 1238              		.cfi_startproc
 1239              		@ args = 0, pretend = 0, frame = 0
 1240              		@ frame_needed = 0, uses_anonymous_args = 0
 1241              		@ link register save eliminated.
 1242              	.LVL178:
 591:u8g2/csrc/u8g2_font.c ****   font += U8G2_FONT_DATA_STRUCT_SIZE;
 1243              		.loc 1 591 0
 1244 0000 836C     		ldr	r3, [r0, #72]
 1245              	.LVL179:
 592:u8g2/csrc/u8g2_font.c **** 
 1246              		.loc 1 592 0
 1247 0002 1733     		adds	r3, r3, #23
 1248              	.LVL180:
 595:u8g2/csrc/u8g2_font.c ****   {
 1249              		.loc 1 595 0
 1250 0004 FF29     		cmp	r1, #255
 1251 0006 13D8     		bhi	.L62
 597:u8g2/csrc/u8g2_font.c ****     {
 1252              		.loc 1 597 0
 1253 0008 6029     		cmp	r1, #96
 1254 000a 09D9     		bls	.L63
 599:u8g2/csrc/u8g2_font.c ****     }
 1255              		.loc 1 599 0
 1256 000c B0F87420 		ldrh	r2, [r0, #116]
 1257 0010 1344     		add	r3, r3, r2
 1258              	.LVL181:
 1259              	.L67:
 608:u8g2/csrc/u8g2_font.c **** 	break;
 1260              		.loc 1 608 0
 1261 0012 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1262 0014 DAB1     		cbz	r2, .L70
 610:u8g2/csrc/u8g2_font.c ****       {
 1263              		.loc 1 610 0
 1264 0016 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1265 0018 8842     		cmp	r0, r1
 1266 001a 07D0     		beq	.L72
 614:u8g2/csrc/u8g2_font.c ****     }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 43


 1267              		.loc 1 614 0
 1268 001c 1344     		add	r3, r3, r2
 1269              	.LVL182:
 608:u8g2/csrc/u8g2_font.c **** 	break;
 1270              		.loc 1 608 0
 1271 001e F8E7     		b	.L67
 1272              	.LVL183:
 1273              	.L63:
 601:u8g2/csrc/u8g2_font.c ****     {
 1274              		.loc 1 601 0
 1275 0020 4029     		cmp	r1, #64
 1276 0022 F6D9     		bls	.L67
 603:u8g2/csrc/u8g2_font.c ****     }
 1277              		.loc 1 603 0
 1278 0024 B0F87220 		ldrh	r2, [r0, #114]
 1279 0028 1344     		add	r3, r3, r2
 1280              	.LVL184:
 1281 002a F2E7     		b	.L67
 1282              	.LVL185:
 1283              	.L72:
 612:u8g2/csrc/u8g2_font.c ****       }
 1284              		.loc 1 612 0
 1285 002c 981C     		adds	r0, r3, #2
 1286 002e 7047     		bx	lr
 1287              	.LVL186:
 1288              	.L62:
 1289              	.LBB5:
 630:u8g2/csrc/u8g2_font.c ****     
 1290              		.loc 1 630 0
 1291 0030 B0F87600 		ldrh	r0, [r0, #118]
 1292              	.LVL187:
 1293 0034 1844     		add	r0, r0, r3
 1294              	.LVL188:
 1295              	.L69:
 635:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 1296              		.loc 1 635 0
 1297 0036 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 1298              	.LVL189:
 637:u8g2/csrc/u8g2_font.c ****   
 1299              		.loc 1 637 0
 1300 0038 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 1301              	.LVL190:
 644:u8g2/csrc/u8g2_font.c **** 	break;
 1302              		.loc 1 644 0
 1303 003a 53EA0223 		orrs	r3, r3, r2, lsl #8
 1304              	.LVL191:
 1305 003e 08D0     		beq	.L71
 647:u8g2/csrc/u8g2_font.c ****       {
 1306              		.loc 1 647 0
 1307 0040 9942     		cmp	r1, r3
 1308 0042 02D0     		beq	.L73
 655:u8g2/csrc/u8g2_font.c ****     }  
 1309              		.loc 1 655 0
 1310 0044 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 1311              	.LVL192:
 1312 0046 1844     		add	r0, r0, r3
 1313              	.LVL193:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 44


 635:u8g2/csrc/u8g2_font.c ****       e <<= 8;
 1314              		.loc 1 635 0
 1315 0048 F5E7     		b	.L69
 1316              	.LVL194:
 1317              	.L73:
 653:u8g2/csrc/u8g2_font.c ****       }
 1318              		.loc 1 653 0
 1319 004a 0330     		adds	r0, r0, #3
 1320              	.LVL195:
 1321 004c 7047     		bx	lr
 1322              	.LVL196:
 1323              	.L70:
 1324              	.LBE5:
 660:u8g2/csrc/u8g2_font.c **** }
 1325              		.loc 1 660 0
 1326 004e 0020     		movs	r0, #0
 1327 0050 7047     		bx	lr
 1328              	.LVL197:
 1329              	.L71:
 1330 0052 0020     		movs	r0, #0
 1331              	.LVL198:
 661:u8g2/csrc/u8g2_font.c **** 
 1332              		.loc 1 661 0
 1333 0054 7047     		bx	lr
 1334              		.cfi_endproc
 1335              	.LFE16:
 1337              		.section	.text.u8g2_font_draw_glyph,"ax",%progbits
 1338              		.align	1
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1342              		.fpu softvfp
 1344              	u8g2_font_draw_glyph:
 1345              	.LFB17:
 664:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t dx = 0;
 1346              		.loc 1 664 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              	.LVL199:
 1351 0000 10B5     		push	{r4, lr}
 1352              	.LCFI12:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 4, -8
 1355              		.cfi_offset 14, -4
 1356 0002 0446     		mov	r4, r0
 1357              	.LVL200:
 666:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_y = y;
 1358              		.loc 1 666 0
 1359 0004 80F85410 		strb	r1, [r0, #84]
 667:u8g2/csrc/u8g2_font.c ****   //u8g2->font_decode.is_transparent = is_transparent; this is already set
 1360              		.loc 1 667 0
 1361 0008 80F85520 		strb	r2, [r0, #85]
 670:u8g2/csrc/u8g2_font.c ****   if ( glyph_data != NULL )
 1362              		.loc 1 670 0
 1363 000c 1946     		mov	r1, r3
 1364              	.LVL201:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 45


 1365 000e FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1366              	.LVL202:
 671:u8g2/csrc/u8g2_font.c ****   {
 1367              		.loc 1 671 0
 1368 0012 28B1     		cbz	r0, .L76
 1369 0014 0146     		mov	r1, r0
 673:u8g2/csrc/u8g2_font.c ****   }
 1370              		.loc 1 673 0
 1371 0016 2046     		mov	r0, r4
 1372              	.LVL203:
 1373 0018 FFF7FEFF 		bl	u8g2_font_decode_glyph
 1374              	.LVL204:
 1375 001c C0B2     		uxtb	r0, r0
 1376              	.LVL205:
 1377              	.L75:
 676:u8g2/csrc/u8g2_font.c **** 
 1378              		.loc 1 676 0
 1379 001e 10BD     		pop	{r4, pc}
 1380              	.LVL206:
 1381              	.L76:
 665:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.target_x = x;
 1382              		.loc 1 665 0
 1383 0020 0020     		movs	r0, #0
 1384              	.LVL207:
 1385 0022 FCE7     		b	.L75
 1386              		.cfi_endproc
 1387              	.LFE17:
 1389              		.section	.text.u8g2_GetGlyphHorizontalProperties,"ax",%progbits
 1390              		.align	1
 1391              		.syntax unified
 1392              		.thumb
 1393              		.thumb_func
 1394              		.fpu softvfp
 1396              	u8g2_GetGlyphHorizontalProperties:
 1397              	.LFB41:
1005:u8g2/csrc/u8g2_font.c **** 
1006:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontPosCenter(u8g2_t *u8g2)
1007:u8g2/csrc/u8g2_font.c **** {
1008:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_center;
1009:u8g2/csrc/u8g2_font.c **** }
1010:u8g2/csrc/u8g2_font.c **** 
1011:u8g2/csrc/u8g2_font.c **** /*===============================================*/
1012:u8g2/csrc/u8g2_font.c **** 
1013:u8g2/csrc/u8g2_font.c **** void u8g2_SetFont(u8g2_t *u8g2, const uint8_t  *font)
1014:u8g2/csrc/u8g2_font.c **** {
1015:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
1016:u8g2/csrc/u8g2_font.c ****   {
1017:u8g2/csrc/u8g2_font.c **** #ifdef  __unix__
1018:u8g2/csrc/u8g2_font.c **** 	u8g2->last_font_data = NULL;
1019:u8g2/csrc/u8g2_font.c **** 	u8g2->last_unicode = 0x0ffff;
1020:u8g2/csrc/u8g2_font.c **** #endif 
1021:u8g2/csrc/u8g2_font.c ****     u8g2->font = font;
1022:u8g2/csrc/u8g2_font.c ****     u8g2_read_font_info(&(u8g2->font_info), font);
1023:u8g2/csrc/u8g2_font.c ****     u8g2_UpdateRefHeight(u8g2);
1024:u8g2/csrc/u8g2_font.c ****     /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
1025:u8g2/csrc/u8g2_font.c ****   }
1026:u8g2/csrc/u8g2_font.c **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 46


1027:u8g2/csrc/u8g2_font.c **** 
1028:u8g2/csrc/u8g2_font.c **** /*===============================================*/
1029:u8g2/csrc/u8g2_font.c **** 
1030:u8g2/csrc/u8g2_font.c **** /* string calculation is stilll not 100% perfect as it addes the initial string offset to the overa
1031:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str) U8G2_NOINLINE;
1032:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_string_width(u8g2_t *u8g2, const char *str)
1033:u8g2/csrc/u8g2_font.c **** {
1034:u8g2/csrc/u8g2_font.c ****   uint16_t e;
1035:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t  w, dx;
1036:u8g2/csrc/u8g2_font.c ****   
1037:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.glyph_width = 0;
1038:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
1039:u8g2/csrc/u8g2_font.c ****   
1040:u8g2/csrc/u8g2_font.c ****   /* reset the total width to zero, this will be expanded during calculation */
1041:u8g2/csrc/u8g2_font.c ****   w = 0;
1042:u8g2/csrc/u8g2_font.c ****   dx = 0;
1043:u8g2/csrc/u8g2_font.c **** 
1044:u8g2/csrc/u8g2_font.c ****   // printf("str=<%s>\n", str);
1045:u8g2/csrc/u8g2_font.c **** 	
1046:u8g2/csrc/u8g2_font.c ****   for(;;)
1047:u8g2/csrc/u8g2_font.c ****   {
1048:u8g2/csrc/u8g2_font.c ****     e = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
1049:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
1050:u8g2/csrc/u8g2_font.c ****       break;
1051:u8g2/csrc/u8g2_font.c ****     str++;
1052:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
1053:u8g2/csrc/u8g2_font.c ****     {
1054:u8g2/csrc/u8g2_font.c ****       dx = u8g2_GetGlyphWidth(u8g2, e);		/* delta x value of the glyph */
1055:u8g2/csrc/u8g2_font.c ****       w += dx;
1056:u8g2/csrc/u8g2_font.c ****     }
1057:u8g2/csrc/u8g2_font.c ****   }
1058:u8g2/csrc/u8g2_font.c ****   
1059:u8g2/csrc/u8g2_font.c ****   /* adjust the last glyph, check for issue #16: do not adjust if width is 0 */
1060:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_decode.glyph_width != 0 )
1061:u8g2/csrc/u8g2_font.c ****   {
1062:u8g2/csrc/u8g2_font.c ****     w -= dx;
1063:u8g2/csrc/u8g2_font.c ****     w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGly
1064:u8g2/csrc/u8g2_font.c ****     /* issue #46: we have to add the x offset also */
1065:u8g2/csrc/u8g2_font.c ****     w += u8g2->glyph_x_offset;	/* this value is set as a side effect of u8g2_GetGlyphWidth() */
1066:u8g2/csrc/u8g2_font.c ****   }
1067:u8g2/csrc/u8g2_font.c ****   // printf("w=%d \n", w);
1068:u8g2/csrc/u8g2_font.c ****   
1069:u8g2/csrc/u8g2_font.c ****   return w;  
1070:u8g2/csrc/u8g2_font.c **** }
1071:u8g2/csrc/u8g2_font.c **** 
1072:u8g2/csrc/u8g2_font.c **** static void u8g2_GetGlyphHorizontalProperties(u8g2_t *u8g2, uint16_t requested_encoding, uint8_t *w
1073:u8g2/csrc/u8g2_font.c **** {
 1398              		.loc 1 1073 0
 1399              		.cfi_startproc
 1400              		@ args = 4, pretend = 0, frame = 0
 1401              		@ frame_needed = 0, uses_anonymous_args = 0
 1402              	.LVL208:
 1403 0000 70B5     		push	{r4, r5, r6, lr}
 1404              	.LCFI13:
 1405              		.cfi_def_cfa_offset 16
 1406              		.cfi_offset 4, -16
 1407              		.cfi_offset 5, -12
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 47


 1408              		.cfi_offset 6, -8
 1409              		.cfi_offset 14, -4
 1410 0002 0446     		mov	r4, r0
 1411 0004 1546     		mov	r5, r2
 1412 0006 1E46     		mov	r6, r3
1074:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 1413              		.loc 1 1074 0
 1414 0008 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1415              	.LVL209:
1075:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 1416              		.loc 1 1075 0
 1417 000c D0B1     		cbz	r0, .L78
 1418 000e 0146     		mov	r1, r0
1076:u8g2/csrc/u8g2_font.c ****     return; 
1077:u8g2/csrc/u8g2_font.c ****   
1078:u8g2/csrc/u8g2_font.c ****   u8g2_font_setup_decode(u8g2, glyph_data);
 1419              		.loc 1 1078 0
 1420 0010 2046     		mov	r0, r4
 1421              	.LVL210:
 1422 0012 FFF7FEFF 		bl	u8g2_font_setup_decode
 1423              	.LVL211:
1079:u8g2/csrc/u8g2_font.c ****   *w = u8g2->font_decode.glyph_width;
 1424              		.loc 1 1079 0
 1425 0016 94F85830 		ldrb	r3, [r4, #88]	@ zero_extendqisi2
 1426 001a 2B70     		strb	r3, [r5]
1080:u8g2/csrc/u8g2_font.c ****   *ox =  u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_x);
 1427              		.loc 1 1080 0
 1428 001c 04F15005 		add	r5, r4, #80
 1429              	.LVL212:
 1430 0020 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 1431 0024 2846     		mov	r0, r5
 1432 0026 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1433              	.LVL213:
 1434 002a 3070     		strb	r0, [r6]
1081:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 1435              		.loc 1 1081 0
 1436 002c 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1437 0030 2846     		mov	r0, r5
 1438 0032 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1439              	.LVL214:
1082:u8g2/csrc/u8g2_font.c ****   *dx = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_delta_x);
 1440              		.loc 1 1082 0
 1441 0036 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1442 003a 2846     		mov	r0, r5
 1443 003c FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1444              	.LVL215:
 1445 0040 049B     		ldr	r3, [sp, #16]
 1446 0042 1870     		strb	r0, [r3]
 1447              	.L78:
1083:u8g2/csrc/u8g2_font.c **** }
 1448              		.loc 1 1083 0
 1449 0044 70BD     		pop	{r4, r5, r6, pc}
 1450              		.cfi_endproc
 1451              	.LFE41:
 1453              		.section	.text.u8g2_calculate_exact_string_width,"ax",%progbits
 1454              		.align	1
 1455              		.syntax unified
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 48


 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu softvfp
 1460              	u8g2_calculate_exact_string_width:
 1461              	.LFB43:
1084:u8g2/csrc/u8g2_font.c **** 
1085:u8g2/csrc/u8g2_font.c **** /* u8g compatible GetStrX function */
1086:u8g2/csrc/u8g2_font.c **** int8_t u8g2_GetStrX(u8g2_t *u8g2, const char *s)
1087:u8g2/csrc/u8g2_font.c **** {
1088:u8g2/csrc/u8g2_font.c ****   uint8_t w;
1089:u8g2/csrc/u8g2_font.c ****   int8_t ox, dx;
1090:u8g2/csrc/u8g2_font.c ****   u8g2_GetGlyphHorizontalProperties(u8g2, *s, &w, &ox, &dx);
1091:u8g2/csrc/u8g2_font.c ****   return ox;
1092:u8g2/csrc/u8g2_font.c **** }
1093:u8g2/csrc/u8g2_font.c **** 
1094:u8g2/csrc/u8g2_font.c **** 
1095:u8g2/csrc/u8g2_font.c **** 
1096:u8g2/csrc/u8g2_font.c **** static u8g2_uint_t u8g2_calculate_exact_string_width(u8g2_t *u8g2, const char *str)
1097:u8g2/csrc/u8g2_font.c **** {
 1462              		.loc 1 1097 0
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 8
 1465              		@ frame_needed = 0, uses_anonymous_args = 0
 1466              	.LVL216:
 1467 0000 70B5     		push	{r4, r5, r6, lr}
 1468              	.LCFI14:
 1469              		.cfi_def_cfa_offset 16
 1470              		.cfi_offset 4, -16
 1471              		.cfi_offset 5, -12
 1472              		.cfi_offset 6, -8
 1473              		.cfi_offset 14, -4
 1474 0002 84B0     		sub	sp, sp, #16
 1475              	.LCFI15:
 1476              		.cfi_def_cfa_offset 32
 1477 0004 0446     		mov	r4, r0
 1478 0006 0D46     		mov	r5, r1
 1479              	.LVL217:
 1480              	.L82:
1098:u8g2/csrc/u8g2_font.c **** 
1099:u8g2/csrc/u8g2_font.c ****   u8g2_uint_t  w;
1100:u8g2/csrc/u8g2_font.c ****   uint16_t enc;
1101:u8g2/csrc/u8g2_font.c ****   uint8_t gw; 
1102:u8g2/csrc/u8g2_font.c ****   int8_t ox, dx;
1103:u8g2/csrc/u8g2_font.c ****   
1104:u8g2/csrc/u8g2_font.c ****   /* reset the total minimal width to zero, this will be expanded during calculation */
1105:u8g2/csrc/u8g2_font.c ****   w = 0;
1106:u8g2/csrc/u8g2_font.c ****     
1107:u8g2/csrc/u8g2_font.c ****   
1108:u8g2/csrc/u8g2_font.c ****   /* check for empty string, width is already 0 */
1109:u8g2/csrc/u8g2_font.c ****   do
1110:u8g2/csrc/u8g2_font.c ****   {
1111:u8g2/csrc/u8g2_font.c ****     enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 1481              		.loc 1 1111 0 discriminator 1
 1482 0008 6368     		ldr	r3, [r4, #4]
 1483 000a 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1484              	.LVL218:
 1485 000e 2046     		mov	r0, r4
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 49


 1486 0010 9847     		blx	r3
 1487              	.LVL219:
1112:u8g2/csrc/u8g2_font.c ****     str++;
1113:u8g2/csrc/u8g2_font.c ****   } while( enc == 0x0fffe );
 1488              		.loc 1 1113 0 discriminator 1
 1489 0012 4FF6FE73 		movw	r3, #65534
 1490 0016 9842     		cmp	r0, r3
 1491 0018 F6D0     		beq	.L82
1114:u8g2/csrc/u8g2_font.c ****   
1115:u8g2/csrc/u8g2_font.c ****   if ( enc== 0x0ffff )
 1492              		.loc 1 1115 0
 1493 001a 4FF6FF73 		movw	r3, #65535
 1494 001e 9842     		cmp	r0, r3
 1495 0020 3BD0     		beq	.L88
1116:u8g2/csrc/u8g2_font.c ****      return w;
1117:u8g2/csrc/u8g2_font.c ****   
1118:u8g2/csrc/u8g2_font.c ****   /* get the glyph information of the first char. This must be valid, because we already checked fo
1119:u8g2/csrc/u8g2_font.c ****   /* if *s is not inside the font, then the cached parameters of the glyph are all zero */
1120:u8g2/csrc/u8g2_font.c ****   u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 1496              		.loc 1 1120 0
 1497 0022 0DF10D03 		add	r3, sp, #13
 1498 0026 0093     		str	r3, [sp]
 1499 0028 0DF10E03 		add	r3, sp, #14
 1500 002c 0DF10F02 		add	r2, sp, #15
 1501 0030 0146     		mov	r1, r0
 1502 0032 2046     		mov	r0, r4
 1503              	.LVL220:
 1504 0034 FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 1505              	.LVL221:
1121:u8g2/csrc/u8g2_font.c **** 
1122:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 1:       width = width(s[0]) */
1123:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 2:       width = - offx(s[0]) + deltax(s[0]) + offx(s[1]) + width(s[1]) */
1124:u8g2/csrc/u8g2_font.c ****   /* strlen(s) == 3:       width = - offx(s[0]) + deltax(s[0]) + deltax(s[1]) + offx(s[2]) + width(
1125:u8g2/csrc/u8g2_font.c ****   
1126:u8g2/csrc/u8g2_font.c ****   /* assume that the string has size 2 or more, than start with negative offset-x */
1127:u8g2/csrc/u8g2_font.c ****   /* for string with size 1, this will be nullified after the loop */
1128:u8g2/csrc/u8g2_font.c ****   w = -ox;  
 1506              		.loc 1 1128 0
 1507 0038 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 1508 003c 5B42     		negs	r3, r3
 1509 003e DEB2     		uxtb	r6, r3
 1510              	.LVL222:
 1511              	.L84:
1129:u8g2/csrc/u8g2_font.c ****   for(;;)
1130:u8g2/csrc/u8g2_font.c ****   {
1131:u8g2/csrc/u8g2_font.c ****     
1132:u8g2/csrc/u8g2_font.c ****     /* check and stop if the end of the string is reached */
1133:u8g2/csrc/u8g2_font.c ****     do
1134:u8g2/csrc/u8g2_font.c ****     {
1135:u8g2/csrc/u8g2_font.c ****       enc = u8g2->u8x8.next_cb(u8g2_GetU8x8(u8g2), (uint8_t)*str);
 1512              		.loc 1 1135 0 discriminator 1
 1513 0040 6368     		ldr	r3, [r4, #4]
 1514 0042 15F8011B 		ldrb	r1, [r5], #1	@ zero_extendqisi2
 1515              	.LVL223:
 1516 0046 2046     		mov	r0, r4
 1517 0048 9847     		blx	r3
 1518              	.LVL224:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 50


1136:u8g2/csrc/u8g2_font.c ****       str++;
1137:u8g2/csrc/u8g2_font.c ****     } while( enc == 0x0fffe );
 1519              		.loc 1 1137 0 discriminator 1
 1520 004a 4FF6FE73 		movw	r3, #65534
 1521 004e 9842     		cmp	r0, r3
 1522 0050 F6D0     		beq	.L84
1138:u8g2/csrc/u8g2_font.c ****     if ( enc== 0x0ffff )
 1523              		.loc 1 1138 0
 1524 0052 4FF6FF73 		movw	r3, #65535
 1525 0056 9842     		cmp	r0, r3
 1526 0058 0FD0     		beq	.L86
1139:u8g2/csrc/u8g2_font.c ****       break;
1140:u8g2/csrc/u8g2_font.c **** 
1141:u8g2/csrc/u8g2_font.c ****     u8g2_GetGlyphHorizontalProperties(u8g2, enc, &gw, &ox, &dx);  
 1527              		.loc 1 1141 0
 1528 005a 0DF10D03 		add	r3, sp, #13
 1529 005e 0093     		str	r3, [sp]
 1530 0060 0DF10E03 		add	r3, sp, #14
 1531 0064 0DF10F02 		add	r2, sp, #15
 1532 0068 0146     		mov	r1, r0
 1533 006a 2046     		mov	r0, r4
 1534              	.LVL225:
 1535 006c FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 1536              	.LVL226:
1142:u8g2/csrc/u8g2_font.c ****     
1143:u8g2/csrc/u8g2_font.c ****     /* if there are still more characters, add the delta to the next glyph */
1144:u8g2/csrc/u8g2_font.c ****     w += dx;    
 1537              		.loc 1 1144 0
 1538 0070 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 1539 0074 3344     		add	r3, r3, r6
 1540 0076 DEB2     		uxtb	r6, r3
 1541              	.LVL227:
1129:u8g2/csrc/u8g2_font.c ****   {
 1542              		.loc 1 1129 0
 1543 0078 E2E7     		b	.L84
 1544              	.LVL228:
 1545              	.L86:
1145:u8g2/csrc/u8g2_font.c ****   }
1146:u8g2/csrc/u8g2_font.c ****   
1147:u8g2/csrc/u8g2_font.c ****   /* finally calculate the width of the last char */
1148:u8g2/csrc/u8g2_font.c ****   /* here is another exception, if the last char is a black, use the dx value instead */
1149:u8g2/csrc/u8g2_font.c ****   if ( enc != ' ' )
 1546              		.loc 1 1149 0
 1547 007a 2028     		cmp	r0, #32
 1548 007c 08D0     		beq	.L87
1150:u8g2/csrc/u8g2_font.c ****   {
1151:u8g2/csrc/u8g2_font.c ****     /* if g was not updated in the for loop (strlen() == 1), then the initial offset x gets removed
1152:u8g2/csrc/u8g2_font.c ****     w += gw;
 1549              		.loc 1 1152 0
 1550 007e 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 1551 0082 3344     		add	r3, r3, r6
 1552 0084 DBB2     		uxtb	r3, r3
 1553              	.LVL229:
1153:u8g2/csrc/u8g2_font.c ****     w += ox;
 1554              		.loc 1 1153 0
 1555 0086 9DF80E00 		ldrb	r0, [sp, #14]	@ zero_extendqisi2
 1556              	.LVL230:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 51


 1557 008a 0344     		add	r3, r3, r0
 1558              	.LVL231:
 1559 008c D8B2     		uxtb	r0, r3
 1560              	.LVL232:
 1561 008e 05E0     		b	.L83
 1562              	.LVL233:
 1563              	.L87:
1154:u8g2/csrc/u8g2_font.c ****   }
1155:u8g2/csrc/u8g2_font.c ****   else
1156:u8g2/csrc/u8g2_font.c ****   {
1157:u8g2/csrc/u8g2_font.c ****     w += dx;
 1564              		.loc 1 1157 0
 1565 0090 9DF80D30 		ldrb	r3, [sp, #13]	@ zero_extendqisi2
 1566 0094 3344     		add	r3, r3, r6
 1567 0096 D8B2     		uxtb	r0, r3
 1568              	.LVL234:
 1569 0098 00E0     		b	.L83
 1570              	.LVL235:
 1571              	.L88:
1116:u8g2/csrc/u8g2_font.c ****   
 1572              		.loc 1 1116 0
 1573 009a 0020     		movs	r0, #0
 1574              	.LVL236:
 1575              	.L83:
1158:u8g2/csrc/u8g2_font.c ****   }
1159:u8g2/csrc/u8g2_font.c ****   
1160:u8g2/csrc/u8g2_font.c ****   
1161:u8g2/csrc/u8g2_font.c ****   return w;
1162:u8g2/csrc/u8g2_font.c **** 	
1163:u8g2/csrc/u8g2_font.c **** }
 1576              		.loc 1 1163 0
 1577 009c 04B0     		add	sp, sp, #16
 1578              	.LCFI16:
 1579              		.cfi_def_cfa_offset 16
 1580              		@ sp needed
 1581 009e 70BD     		pop	{r4, r5, r6, pc}
 1582              		.cfi_endproc
 1583              	.LFE43:
 1585              		.section	.text.u8g2_IsGlyph,"ax",%progbits
 1586              		.align	1
 1587              		.global	u8g2_IsGlyph
 1588              		.syntax unified
 1589              		.thumb
 1590              		.thumb_func
 1591              		.fpu softvfp
 1593              	u8g2_IsGlyph:
 1594              	.LFB18:
 681:u8g2/csrc/u8g2_font.c ****   /* updated to new code */
 1595              		.loc 1 681 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 0
 1598              		@ frame_needed = 0, uses_anonymous_args = 0
 1599              	.LVL237:
 1600 0000 08B5     		push	{r3, lr}
 1601              	.LCFI17:
 1602              		.cfi_def_cfa_offset 8
 1603              		.cfi_offset 3, -8
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 52


 1604              		.cfi_offset 14, -4
 683:u8g2/csrc/u8g2_font.c ****     return 1;
 1605              		.loc 1 683 0
 1606 0002 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1607              	.LVL238:
 1608 0006 08B1     		cbz	r0, .L92
 684:u8g2/csrc/u8g2_font.c ****   return 0;
 1609              		.loc 1 684 0
 1610 0008 0120     		movs	r0, #1
 1611              	.L91:
 686:u8g2/csrc/u8g2_font.c **** 
 1612              		.loc 1 686 0
 1613 000a 08BD     		pop	{r3, pc}
 1614              	.L92:
 685:u8g2/csrc/u8g2_font.c **** }
 1615              		.loc 1 685 0
 1616 000c 0020     		movs	r0, #0
 1617 000e FCE7     		b	.L91
 1618              		.cfi_endproc
 1619              	.LFE18:
 1621              		.section	.text.u8g2_GetGlyphWidth,"ax",%progbits
 1622              		.align	1
 1623              		.global	u8g2_GetGlyphWidth
 1624              		.syntax unified
 1625              		.thumb
 1626              		.thumb_func
 1627              		.fpu softvfp
 1629              	u8g2_GetGlyphWidth:
 1630              	.LFB19:
 690:u8g2/csrc/u8g2_font.c ****   const uint8_t *glyph_data = u8g2_font_get_glyph_data(u8g2, requested_encoding);
 1631              		.loc 1 690 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 0
 1634              		@ frame_needed = 0, uses_anonymous_args = 0
 1635              	.LVL239:
 1636 0000 38B5     		push	{r3, r4, r5, lr}
 1637              	.LCFI18:
 1638              		.cfi_def_cfa_offset 16
 1639              		.cfi_offset 3, -16
 1640              		.cfi_offset 4, -12
 1641              		.cfi_offset 5, -8
 1642              		.cfi_offset 14, -4
 1643 0002 0446     		mov	r4, r0
 691:u8g2/csrc/u8g2_font.c ****   if ( glyph_data == NULL )
 1644              		.loc 1 691 0
 1645 0004 FFF7FEFF 		bl	u8g2_font_get_glyph_data
 1646              	.LVL240:
 692:u8g2/csrc/u8g2_font.c ****     return 0; 
 1647              		.loc 1 692 0
 1648 0008 B8B1     		cbz	r0, .L96
 1649 000a 0146     		mov	r1, r0
 695:u8g2/csrc/u8g2_font.c ****   u8g2->glyph_x_offset = u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bit
 1650              		.loc 1 695 0
 1651 000c 2046     		mov	r0, r4
 1652              	.LVL241:
 1653 000e FFF7FEFF 		bl	u8g2_font_setup_decode
 1654              	.LVL242:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 53


 696:u8g2/csrc/u8g2_font.c ****   u8g2_font_decode_get_signed_bits(&(u8g2->font_decode), u8g2->font_info.bits_per_char_y);
 1655              		.loc 1 696 0
 1656 0012 04F15005 		add	r5, r4, #80
 1657 0016 94F86610 		ldrb	r1, [r4, #102]	@ zero_extendqisi2
 1658 001a 2846     		mov	r0, r5
 1659 001c FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1660              	.LVL243:
 1661 0020 84F87B00 		strb	r0, [r4, #123]
 697:u8g2/csrc/u8g2_font.c ****   
 1662              		.loc 1 697 0
 1663 0024 94F86710 		ldrb	r1, [r4, #103]	@ zero_extendqisi2
 1664 0028 2846     		mov	r0, r5
 1665 002a FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1666              	.LVL244:
 701:u8g2/csrc/u8g2_font.c **** }
 1667              		.loc 1 701 0
 1668 002e 94F86810 		ldrb	r1, [r4, #104]	@ zero_extendqisi2
 1669 0032 2846     		mov	r0, r5
 1670 0034 FFF7FEFF 		bl	u8g2_font_decode_get_signed_bits
 1671              	.LVL245:
 1672              	.L95:
 702:u8g2/csrc/u8g2_font.c **** 
 1673              		.loc 1 702 0
 1674 0038 38BD     		pop	{r3, r4, r5, pc}
 1675              	.LVL246:
 1676              	.L96:
 693:u8g2/csrc/u8g2_font.c ****   
 1677              		.loc 1 693 0
 1678 003a 0020     		movs	r0, #0
 1679              	.LVL247:
 1680 003c FCE7     		b	.L95
 1681              		.cfi_endproc
 1682              	.LFE19:
 1684              		.section	.text.u8g2_string_width,"ax",%progbits
 1685              		.align	1
 1686              		.syntax unified
 1687              		.thumb
 1688              		.thumb_func
 1689              		.fpu softvfp
 1691              	u8g2_string_width:
 1692              	.LFB40:
1033:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 1693              		.loc 1 1033 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 0
 1696              		@ frame_needed = 0, uses_anonymous_args = 0
 1697              	.LVL248:
 1698 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1699              	.LCFI19:
 1700              		.cfi_def_cfa_offset 24
 1701              		.cfi_offset 3, -24
 1702              		.cfi_offset 4, -20
 1703              		.cfi_offset 5, -16
 1704              		.cfi_offset 6, -12
 1705              		.cfi_offset 7, -8
 1706              		.cfi_offset 14, -4
 1707 0002 0546     		mov	r5, r0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 54


 1708 0004 0E46     		mov	r6, r1
1037:u8g2/csrc/u8g2_font.c ****   u8x8_utf8_init(u8g2_GetU8x8(u8g2));
 1709              		.loc 1 1037 0
 1710 0006 0024     		movs	r4, #0
 1711 0008 80F85840 		strb	r4, [r0, #88]
1038:u8g2/csrc/u8g2_font.c ****   
 1712              		.loc 1 1038 0
 1713 000c FFF7FEFF 		bl	u8x8_utf8_init
 1714              	.LVL249:
1042:u8g2/csrc/u8g2_font.c **** 
 1715              		.loc 1 1042 0
 1716 0010 2746     		mov	r7, r4
 1717              	.LVL250:
 1718              	.L99:
1048:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 1719              		.loc 1 1048 0
 1720 0012 6B68     		ldr	r3, [r5, #4]
 1721 0014 3178     		ldrb	r1, [r6]	@ zero_extendqisi2
 1722 0016 2846     		mov	r0, r5
 1723 0018 9847     		blx	r3
 1724              	.LVL251:
1049:u8g2/csrc/u8g2_font.c ****       break;
 1725              		.loc 1 1049 0
 1726 001a 4FF6FF73 		movw	r3, #65535
 1727 001e 9842     		cmp	r0, r3
 1728 0020 0CD0     		beq	.L100
1051:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 1729              		.loc 1 1051 0
 1730 0022 0136     		adds	r6, r6, #1
 1731              	.LVL252:
1052:u8g2/csrc/u8g2_font.c ****     {
 1732              		.loc 1 1052 0
 1733 0024 4FF6FE73 		movw	r3, #65534
 1734 0028 9842     		cmp	r0, r3
 1735 002a F2D0     		beq	.L99
1054:u8g2/csrc/u8g2_font.c ****       w += dx;
 1736              		.loc 1 1054 0
 1737 002c 0146     		mov	r1, r0
 1738 002e 2846     		mov	r0, r5
 1739              	.LVL253:
 1740 0030 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 1741              	.LVL254:
 1742 0034 C7B2     		uxtb	r7, r0
 1743              	.LVL255:
1055:u8g2/csrc/u8g2_font.c ****     }
 1744              		.loc 1 1055 0
 1745 0036 3C44     		add	r4, r4, r7
 1746              	.LVL256:
 1747 0038 E4B2     		uxtb	r4, r4
 1748              	.LVL257:
 1749 003a EAE7     		b	.L99
 1750              	.LVL258:
 1751              	.L100:
1060:u8g2/csrc/u8g2_font.c ****   {
 1752              		.loc 1 1060 0
 1753 003c 95F95830 		ldrsb	r3, [r5, #88]
 1754 0040 43B1     		cbz	r3, .L102
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 55


1062:u8g2/csrc/u8g2_font.c ****     w += u8g2->font_decode.glyph_width;  /* the real pixel width of the glyph, sideeffect of GetGly
 1755              		.loc 1 1062 0
 1756 0042 E41B     		subs	r4, r4, r7
 1757              	.LVL259:
 1758 0044 E4B2     		uxtb	r4, r4
 1759              	.LVL260:
1063:u8g2/csrc/u8g2_font.c ****     /* issue #46: we have to add the x offset also */
 1760              		.loc 1 1063 0
 1761 0046 DBB2     		uxtb	r3, r3
 1762 0048 1C44     		add	r4, r4, r3
 1763              	.LVL261:
 1764 004a E4B2     		uxtb	r4, r4
 1765              	.LVL262:
1065:u8g2/csrc/u8g2_font.c ****   }
 1766              		.loc 1 1065 0
 1767 004c 95F87B30 		ldrb	r3, [r5, #123]	@ zero_extendqisi2
 1768 0050 1C44     		add	r4, r4, r3
 1769              	.LVL263:
 1770 0052 E4B2     		uxtb	r4, r4
 1771              	.LVL264:
 1772              	.L102:
1070:u8g2/csrc/u8g2_font.c **** 
 1773              		.loc 1 1070 0
 1774 0054 2046     		mov	r0, r4
 1775              	.LVL265:
 1776 0056 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1777              		.cfi_endproc
 1778              	.LFE40:
 1780              		.section	.text.u8g2_SetFontMode,"ax",%progbits
 1781              		.align	1
 1782              		.global	u8g2_SetFontMode
 1783              		.syntax unified
 1784              		.thumb
 1785              		.thumb_func
 1786              		.fpu softvfp
 1788              	u8g2_SetFontMode:
 1789              	.LFB20:
 713:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.is_transparent = is_transparent;		// new font procedures
 1790              		.loc 1 713 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 0
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
 1794              		@ link register save eliminated.
 1795              	.LVL266:
 714:u8g2/csrc/u8g2_font.c **** }
 1796              		.loc 1 714 0
 1797 0000 80F85B10 		strb	r1, [r0, #91]
 715:u8g2/csrc/u8g2_font.c **** 
 1798              		.loc 1 715 0
 1799 0004 7047     		bx	lr
 1800              		.cfi_endproc
 1801              	.LFE20:
 1803              		.section	.text.u8g2_DrawGlyph,"ax",%progbits
 1804              		.align	1
 1805              		.global	u8g2_DrawGlyph
 1806              		.syntax unified
 1807              		.thumb
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 56


 1808              		.thumb_func
 1809              		.fpu softvfp
 1811              	u8g2_DrawGlyph:
 1812              	.LFB21:
 718:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION
 1813              		.loc 1 718 0
 1814              		.cfi_startproc
 1815              		@ args = 0, pretend = 0, frame = 0
 1816              		@ frame_needed = 0, uses_anonymous_args = 0
 1817              	.LVL267:
 1818 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1819              	.LCFI20:
 1820              		.cfi_def_cfa_offset 24
 1821              		.cfi_offset 3, -24
 1822              		.cfi_offset 4, -20
 1823              		.cfi_offset 5, -16
 1824              		.cfi_offset 6, -12
 1825              		.cfi_offset 7, -8
 1826              		.cfi_offset 14, -4
 1827 0002 0446     		mov	r4, r0
 1828 0004 0D46     		mov	r5, r1
 1829 0006 1646     		mov	r6, r2
 1830 0008 1F46     		mov	r7, r3
 720:u8g2/csrc/u8g2_font.c ****   {
 1831              		.loc 1 720 0
 1832 000a 90F85E30 		ldrb	r3, [r0, #94]	@ zero_extendqisi2
 1833              	.LVL268:
 1834 000e 032B     		cmp	r3, #3
 1835 0010 07D8     		bhi	.L106
 1836 0012 DFE803F0 		tbb	[pc, r3]
 1837              	.LVL269:
 1838              	.L108:
 1839 0016 02       		.byte	(.L107-.L108)/2
 1840 0017 0D       		.byte	(.L109-.L108)/2
 1841 0018 12       		.byte	(.L110-.L108)/2
 1842 0019 17       		.byte	(.L111-.L108)/2
 1843              		.p2align 1
 1844              	.L107:
 723:u8g2/csrc/u8g2_font.c ****       break;
 1845              		.loc 1 723 0
 1846 001a C36C     		ldr	r3, [r0, #76]
 1847 001c 9847     		blx	r3
 1848              	.LVL270:
 1849 001e 0644     		add	r6, r6, r0
 1850 0020 F6B2     		uxtb	r6, r6
 1851              	.LVL271:
 1852              	.L106:
 738:u8g2/csrc/u8g2_font.c **** }
 1853              		.loc 1 738 0
 1854 0022 3B46     		mov	r3, r7
 1855 0024 3246     		mov	r2, r6
 1856 0026 2946     		mov	r1, r5
 1857 0028 2046     		mov	r0, r4
 1858 002a FFF7FEFF 		bl	u8g2_font_draw_glyph
 1859              	.LVL272:
 739:u8g2/csrc/u8g2_font.c **** 
 1860              		.loc 1 739 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 57


 1861 002e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1862              	.LVL273:
 1863              	.L109:
 726:u8g2/csrc/u8g2_font.c ****       break;
 1864              		.loc 1 726 0
 1865 0030 C36C     		ldr	r3, [r0, #76]
 1866 0032 9847     		blx	r3
 1867              	.LVL274:
 1868 0034 2D1A     		subs	r5, r5, r0
 1869 0036 EDB2     		uxtb	r5, r5
 1870              	.LVL275:
 727:u8g2/csrc/u8g2_font.c ****     case 2:
 1871              		.loc 1 727 0
 1872 0038 F3E7     		b	.L106
 1873              	.LVL276:
 1874              	.L110:
 729:u8g2/csrc/u8g2_font.c ****       break;
 1875              		.loc 1 729 0
 1876 003a C36C     		ldr	r3, [r0, #76]
 1877 003c 9847     		blx	r3
 1878              	.LVL277:
 1879 003e 361A     		subs	r6, r6, r0
 1880 0040 F6B2     		uxtb	r6, r6
 1881              	.LVL278:
 730:u8g2/csrc/u8g2_font.c ****     case 3:
 1882              		.loc 1 730 0
 1883 0042 EEE7     		b	.L106
 1884              	.LVL279:
 1885              	.L111:
 732:u8g2/csrc/u8g2_font.c ****       break;
 1886              		.loc 1 732 0
 1887 0044 C36C     		ldr	r3, [r0, #76]
 1888 0046 9847     		blx	r3
 1889              	.LVL280:
 1890 0048 0544     		add	r5, r5, r0
 1891 004a EDB2     		uxtb	r5, r5
 1892              	.LVL281:
 733:u8g2/csrc/u8g2_font.c ****   }
 1893              		.loc 1 733 0
 1894 004c E9E7     		b	.L106
 1895              		.cfi_endproc
 1896              	.LFE21:
 1898              		.section	.text.u8g2_draw_string,"ax",%progbits
 1899              		.align	1
 1900              		.syntax unified
 1901              		.thumb
 1902              		.thumb_func
 1903              		.fpu softvfp
 1905              	u8g2_draw_string:
 1906              	.LFB22:
 743:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 1907              		.loc 1 743 0
 1908              		.cfi_startproc
 1909              		@ args = 0, pretend = 0, frame = 0
 1910              		@ frame_needed = 0, uses_anonymous_args = 0
 1911              	.LVL282:
 1912 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 58


 1913              	.LCFI21:
 1914              		.cfi_def_cfa_offset 24
 1915              		.cfi_offset 4, -24
 1916              		.cfi_offset 5, -20
 1917              		.cfi_offset 6, -16
 1918              		.cfi_offset 7, -12
 1919              		.cfi_offset 8, -8
 1920              		.cfi_offset 14, -4
 1921 0004 0446     		mov	r4, r0
 1922 0006 0F46     		mov	r7, r1
 1923 0008 1646     		mov	r6, r2
 1924 000a 1D46     		mov	r5, r3
 746:u8g2/csrc/u8g2_font.c ****   sum = 0;
 1925              		.loc 1 746 0
 1926 000c FFF7FEFF 		bl	u8x8_utf8_init
 1927              	.LVL283:
 747:u8g2/csrc/u8g2_font.c ****   for(;;)
 1928              		.loc 1 747 0
 1929 0010 4FF00008 		mov	r8, #0
 1930 0014 04E0     		b	.L114
 1931              	.LVL284:
 1932              	.L118:
 762:u8g2/csrc/u8g2_font.c **** 	  break;
 1933              		.loc 1 762 0
 1934 0016 0744     		add	r7, r7, r0
 1935              	.LVL285:
 1936 0018 FFB2     		uxtb	r7, r7
 1937              	.LVL286:
 1938              	.L117:
 778:u8g2/csrc/u8g2_font.c ****     }
 1939              		.loc 1 778 0
 1940 001a 8044     		add	r8, r8, r0
 1941              	.LVL287:
 1942 001c 5FFA88F8 		uxtb	r8, r8
 1943              	.LVL288:
 1944              	.L114:
 750:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 1945              		.loc 1 750 0
 1946 0020 6368     		ldr	r3, [r4, #4]
 1947 0022 2978     		ldrb	r1, [r5]	@ zero_extendqisi2
 1948 0024 2046     		mov	r0, r4
 1949 0026 9847     		blx	r3
 1950              	.LVL289:
 751:u8g2/csrc/u8g2_font.c ****       break;
 1951              		.loc 1 751 0
 1952 0028 4FF6FF73 		movw	r3, #65535
 1953 002c 9842     		cmp	r0, r3
 1954 002e 22D0     		beq	.L115
 753:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 1955              		.loc 1 753 0
 1956 0030 0135     		adds	r5, r5, #1
 1957              	.LVL290:
 754:u8g2/csrc/u8g2_font.c ****     {
 1958              		.loc 1 754 0
 1959 0032 4FF6FE73 		movw	r3, #65534
 1960 0036 9842     		cmp	r0, r3
 1961 0038 F2D0     		beq	.L114
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 59


 756:u8g2/csrc/u8g2_font.c ****     
 1962              		.loc 1 756 0
 1963 003a 0346     		mov	r3, r0
 1964 003c 3246     		mov	r2, r6
 1965 003e 3946     		mov	r1, r7
 1966 0040 2046     		mov	r0, r4
 1967              	.LVL291:
 1968 0042 FFF7FEFF 		bl	u8g2_DrawGlyph
 1969              	.LVL292:
 759:u8g2/csrc/u8g2_font.c ****       {
 1970              		.loc 1 759 0
 1971 0046 94F85E30 		ldrb	r3, [r4, #94]	@ zero_extendqisi2
 1972 004a 032B     		cmp	r3, #3
 1973 004c E5D8     		bhi	.L117
 1974 004e 01A2     		adr	r2, .L119
 1975 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1976              		.p2align 2
 1977              	.L119:
 1978 0054 17000000 		.word	.L118+1
 1979 0058 65000000 		.word	.L120+1
 1980 005c 6B000000 		.word	.L121+1
 1981 0060 71000000 		.word	.L122+1
 1982              		.p2align 1
 1983              	.L120:
 765:u8g2/csrc/u8g2_font.c **** 	  break;
 1984              		.loc 1 765 0
 1985 0064 0644     		add	r6, r6, r0
 1986              	.LVL293:
 1987 0066 F6B2     		uxtb	r6, r6
 1988              	.LVL294:
 766:u8g2/csrc/u8g2_font.c **** 	case 2:
 1989              		.loc 1 766 0
 1990 0068 D7E7     		b	.L117
 1991              	.L121:
 768:u8g2/csrc/u8g2_font.c **** 	  break;
 1992              		.loc 1 768 0
 1993 006a 3F1A     		subs	r7, r7, r0
 1994              	.LVL295:
 1995 006c FFB2     		uxtb	r7, r7
 1996              	.LVL296:
 769:u8g2/csrc/u8g2_font.c **** 	case 3:
 1997              		.loc 1 769 0
 1998 006e D4E7     		b	.L117
 1999              	.L122:
 771:u8g2/csrc/u8g2_font.c **** 	  break;
 2000              		.loc 1 771 0
 2001 0070 361A     		subs	r6, r6, r0
 2002              	.LVL297:
 2003 0072 F6B2     		uxtb	r6, r6
 2004              	.LVL298:
 772:u8g2/csrc/u8g2_font.c ****       }
 2005              		.loc 1 772 0
 2006 0074 D1E7     		b	.L117
 2007              	.LVL299:
 2008              	.L115:
 782:u8g2/csrc/u8g2_font.c **** 
 2009              		.loc 1 782 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 60


 2010 0076 4046     		mov	r0, r8
 2011              	.LVL300:
 2012 0078 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2013              		.cfi_endproc
 2014              	.LFE22:
 2016              		.section	.text.u8g2_DrawStr,"ax",%progbits
 2017              		.align	1
 2018              		.global	u8g2_DrawStr
 2019              		.syntax unified
 2020              		.thumb
 2021              		.thumb_func
 2022              		.fpu softvfp
 2024              	u8g2_DrawStr:
 2025              	.LFB23:
 785:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2026              		.loc 1 785 0
 2027              		.cfi_startproc
 2028              		@ args = 0, pretend = 0, frame = 0
 2029              		@ frame_needed = 0, uses_anonymous_args = 0
 2030              	.LVL301:
 2031 0000 10B5     		push	{r4, lr}
 2032              	.LCFI22:
 2033              		.cfi_def_cfa_offset 8
 2034              		.cfi_offset 4, -8
 2035              		.cfi_offset 14, -4
 786:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 2036              		.loc 1 786 0
 2037 0002 024C     		ldr	r4, .L126
 2038 0004 4460     		str	r4, [r0, #4]
 787:u8g2/csrc/u8g2_font.c **** }
 2039              		.loc 1 787 0
 2040 0006 FFF7FEFF 		bl	u8g2_draw_string
 2041              	.LVL302:
 788:u8g2/csrc/u8g2_font.c **** 
 2042              		.loc 1 788 0
 2043 000a 10BD     		pop	{r4, pc}
 2044              	.L127:
 2045              		.align	2
 2046              	.L126:
 2047 000c 00000000 		.word	u8x8_ascii_next
 2048              		.cfi_endproc
 2049              	.LFE23:
 2051              		.section	.text.u8g2_DrawUTF8,"ax",%progbits
 2052              		.align	1
 2053              		.global	u8g2_DrawUTF8
 2054              		.syntax unified
 2055              		.thumb
 2056              		.thumb_func
 2057              		.fpu softvfp
 2059              	u8g2_DrawUTF8:
 2060              	.LFB24:
 801:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2061              		.loc 1 801 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 0, uses_anonymous_args = 0
 2065              	.LVL303:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 61


 2066 0000 10B5     		push	{r4, lr}
 2067              	.LCFI23:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 4, -8
 2070              		.cfi_offset 14, -4
 802:u8g2/csrc/u8g2_font.c ****   return u8g2_draw_string(u8g2, x, y, str);
 2071              		.loc 1 802 0
 2072 0002 024C     		ldr	r4, .L130
 2073 0004 4460     		str	r4, [r0, #4]
 803:u8g2/csrc/u8g2_font.c **** }
 2074              		.loc 1 803 0
 2075 0006 FFF7FEFF 		bl	u8g2_draw_string
 2076              	.LVL304:
 804:u8g2/csrc/u8g2_font.c **** 
 2077              		.loc 1 804 0
 2078 000a 10BD     		pop	{r4, pc}
 2079              	.L131:
 2080              		.align	2
 2081              	.L130:
 2082 000c 00000000 		.word	u8x8_utf8_next
 2083              		.cfi_endproc
 2084              	.LFE24:
 2086              		.section	.text.u8g2_DrawExtendedUTF8,"ax",%progbits
 2087              		.align	1
 2088              		.global	u8g2_DrawExtendedUTF8
 2089              		.syntax unified
 2090              		.thumb
 2091              		.thumb_func
 2092              		.fpu softvfp
 2094              	u8g2_DrawExtendedUTF8:
 2095              	.LFB25:
 809:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2096              		.loc 1 809 0
 2097              		.cfi_startproc
 2098              		@ args = 8, pretend = 0, frame = 8
 2099              		@ frame_needed = 0, uses_anonymous_args = 0
 2100              	.LVL305:
 2101 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2102              	.LCFI24:
 2103              		.cfi_def_cfa_offset 36
 2104              		.cfi_offset 4, -36
 2105              		.cfi_offset 5, -32
 2106              		.cfi_offset 6, -28
 2107              		.cfi_offset 7, -24
 2108              		.cfi_offset 8, -20
 2109              		.cfi_offset 9, -16
 2110              		.cfi_offset 10, -12
 2111              		.cfi_offset 11, -8
 2112              		.cfi_offset 14, -4
 2113 0004 83B0     		sub	sp, sp, #12
 2114              	.LCFI25:
 2115              		.cfi_def_cfa_offset 48
 2116 0006 8146     		mov	r9, r0
 2117 0008 0F46     		mov	r7, r1
 2118 000a 0192     		str	r2, [sp, #4]
 2119 000c 9B46     		mov	fp, r3
 2120 000e DDF834A0 		ldr	r10, [sp, #52]
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 62


 810:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 2121              		.loc 1 810 0
 2122 0012 264B     		ldr	r3, .L140
 2123              	.LVL306:
 2124 0014 4360     		str	r3, [r0, #4]
 2125              	.LVL307:
 814:u8g2/csrc/u8g2_font.c ****   sum = 0;
 2126              		.loc 1 814 0
 2127 0016 FFF7FEFF 		bl	u8x8_utf8_init
 2128              	.LVL308:
 815:u8g2/csrc/u8g2_font.c ****   for(;;)
 2129              		.loc 1 815 0
 2130 001a 0025     		movs	r5, #0
 811:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 2131              		.loc 1 811 0
 2132 001c 4FF6FF78 		movw	r8, #65535
 2133 0020 0CE0     		b	.L133
 2134              	.LVL309:
 2135              	.L136:
 834:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2136              		.loc 1 834 0
 2137 0022 2346     		mov	r3, r4
 2138 0024 4246     		mov	r2, r8
 2139 0026 0C99     		ldr	r1, [sp, #48]
 2140 0028 4846     		mov	r0, r9
 2141 002a FFF7FEFF 		bl	u8g2_GetKerning
 2142              	.LVL310:
 2143 002e 8046     		mov	r8, r0
 2144              	.LVL311:
 835:u8g2/csrc/u8g2_font.c ****       }
 2145              		.loc 1 835 0
 2146 0030 361A     		subs	r6, r6, r0
 2147              	.LVL312:
 2148 0032 F6B2     		uxtb	r6, r6
 2149              	.LVL313:
 2150 0034 26E0     		b	.L137
 2151              	.LVL314:
 2152              	.L138:
 849:u8g2/csrc/u8g2_font.c ****     }
 2153              		.loc 1 849 0
 2154 0036 2E44     		add	r6, r6, r5
 2155              	.LVL315:
 2156 0038 F5B2     		uxtb	r5, r6
 2157              	.LVL316:
 837:u8g2/csrc/u8g2_font.c **** 
 2158              		.loc 1 837 0
 2159 003a A046     		mov	r8, r4
 2160              	.LVL317:
 2161              	.L133:
 818:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 2162              		.loc 1 818 0
 2163 003c D9F80430 		ldr	r3, [r9, #4]
 2164 0040 9AF80010 		ldrb	r1, [r10]	@ zero_extendqisi2
 2165 0044 4846     		mov	r0, r9
 2166 0046 9847     		blx	r3
 2167              	.LVL318:
 2168 0048 0446     		mov	r4, r0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 63


 2169              	.LVL319:
 819:u8g2/csrc/u8g2_font.c ****       break;
 2170              		.loc 1 819 0
 2171 004a 4FF6FF73 		movw	r3, #65535
 2172 004e 9842     		cmp	r0, r3
 2173 0050 27D0     		beq	.L134
 821:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 2174              		.loc 1 821 0
 2175 0052 0AF1010A 		add	r10, r10, #1
 2176              	.LVL320:
 822:u8g2/csrc/u8g2_font.c ****     {
 2177              		.loc 1 822 0
 2178 0056 4FF6FE73 		movw	r3, #65534
 2179 005a 9842     		cmp	r0, r3
 2180 005c EED0     		beq	.L133
 824:u8g2/csrc/u8g2_font.c **** 	    
 2181              		.loc 1 824 0
 2182 005e 0146     		mov	r1, r0
 2183 0060 4846     		mov	r0, r9
 2184              	.LVL321:
 2185 0062 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 2186              	.LVL322:
 2187 0066 C6B2     		uxtb	r6, r0
 2188              	.LVL323:
 826:u8g2/csrc/u8g2_font.c ****       {
 2189              		.loc 1 826 0
 2190 0068 BBF1000F 		cmp	fp, #0
 2191 006c D9D0     		beq	.L136
 828:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2192              		.loc 1 828 0
 2193 006e 4346     		mov	r3, r8
 2194 0070 2246     		mov	r2, r4
 2195 0072 0C99     		ldr	r1, [sp, #48]
 2196 0074 4846     		mov	r0, r9
 2197 0076 FFF7FEFF 		bl	u8g2_GetKerning
 2198              	.LVL324:
 2199 007a 8046     		mov	r8, r0
 2200              	.LVL325:
 829:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 2201              		.loc 1 829 0
 2202 007c 361A     		subs	r6, r6, r0
 2203              	.LVL326:
 2204 007e F6B2     		uxtb	r6, r6
 2205              	.LVL327:
 830:u8g2/csrc/u8g2_font.c ****       }
 2206              		.loc 1 830 0
 2207 0080 BF1B     		subs	r7, r7, r6
 2208              	.LVL328:
 2209 0082 FFB2     		uxtb	r7, r7
 2210              	.LVL329:
 2211              	.L137:
 839:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 2212              		.loc 1 839 0
 2213 0084 2346     		mov	r3, r4
 2214 0086 019A     		ldr	r2, [sp, #4]
 2215 0088 3946     		mov	r1, r7
 2216 008a 4846     		mov	r0, r9
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 64


 2217 008c FFF7FEFF 		bl	u8g2_DrawGlyph
 2218              	.LVL330:
 840:u8g2/csrc/u8g2_font.c ****       {
 2219              		.loc 1 840 0
 2220 0090 BBF1000F 		cmp	fp, #0
 2221 0094 CFD1     		bne	.L138
 845:u8g2/csrc/u8g2_font.c **** 	x -= k;
 2222              		.loc 1 845 0
 2223 0096 3744     		add	r7, r7, r6
 2224              	.LVL331:
 2225 0098 FFB2     		uxtb	r7, r7
 2226              	.LVL332:
 846:u8g2/csrc/u8g2_font.c ****       }
 2227              		.loc 1 846 0
 2228 009a A7EB0807 		sub	r7, r7, r8
 2229              	.LVL333:
 2230 009e FFB2     		uxtb	r7, r7
 2231              	.LVL334:
 2232 00a0 C9E7     		b	.L138
 2233              	.LVL335:
 2234              	.L134:
 853:u8g2/csrc/u8g2_font.c **** 
 2235              		.loc 1 853 0
 2236 00a2 2846     		mov	r0, r5
 2237              	.LVL336:
 2238 00a4 03B0     		add	sp, sp, #12
 2239              	.LCFI26:
 2240              		.cfi_def_cfa_offset 36
 2241              		@ sp needed
 2242 00a6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2243              	.LVL337:
 2244              	.L141:
 2245 00aa 00BF     		.align	2
 2246              	.L140:
 2247 00ac 00000000 		.word	u8x8_utf8_next
 2248              		.cfi_endproc
 2249              	.LFE25:
 2251              		.section	.text.u8g2_DrawExtUTF8,"ax",%progbits
 2252              		.align	1
 2253              		.global	u8g2_DrawExtUTF8
 2254              		.syntax unified
 2255              		.thumb
 2256              		.thumb_func
 2257              		.fpu softvfp
 2259              	u8g2_DrawExtUTF8:
 2260              	.LFB26:
 856:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2261              		.loc 1 856 0
 2262              		.cfi_startproc
 2263              		@ args = 8, pretend = 0, frame = 8
 2264              		@ frame_needed = 0, uses_anonymous_args = 0
 2265              	.LVL338:
 2266 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2267              	.LCFI27:
 2268              		.cfi_def_cfa_offset 36
 2269              		.cfi_offset 4, -36
 2270              		.cfi_offset 5, -32
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 65


 2271              		.cfi_offset 6, -28
 2272              		.cfi_offset 7, -24
 2273              		.cfi_offset 8, -20
 2274              		.cfi_offset 9, -16
 2275              		.cfi_offset 10, -12
 2276              		.cfi_offset 11, -8
 2277              		.cfi_offset 14, -4
 2278 0004 83B0     		sub	sp, sp, #12
 2279              	.LCFI28:
 2280              		.cfi_def_cfa_offset 48
 2281 0006 0646     		mov	r6, r0
 2282 0008 8846     		mov	r8, r1
 2283 000a 0192     		str	r2, [sp, #4]
 2284 000c 9A46     		mov	r10, r3
 2285 000e 0D9F     		ldr	r7, [sp, #52]
 857:u8g2/csrc/u8g2_font.c ****   uint16_t e_prev = 0x0ffff;
 2286              		.loc 1 857 0
 2287 0010 244B     		ldr	r3, .L150
 2288              	.LVL339:
 2289 0012 4360     		str	r3, [r0, #4]
 2290              	.LVL340:
 861:u8g2/csrc/u8g2_font.c ****   sum = 0;
 2291              		.loc 1 861 0
 2292 0014 FFF7FEFF 		bl	u8x8_utf8_init
 2293              	.LVL341:
 862:u8g2/csrc/u8g2_font.c ****   for(;;)
 2294              		.loc 1 862 0
 2295 0018 4FF00009 		mov	r9, #0
 858:u8g2/csrc/u8g2_font.c ****   uint16_t e;
 2296              		.loc 1 858 0
 2297 001c 4FF6FF7B 		movw	fp, #65535
 2298 0020 12E0     		b	.L143
 2299              	.LVL342:
 2300              	.L146:
 881:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2301              		.loc 1 881 0
 2302 0022 2346     		mov	r3, r4
 2303 0024 5A46     		mov	r2, fp
 2304 0026 0C99     		ldr	r1, [sp, #48]
 2305 0028 3046     		mov	r0, r6
 2306 002a FFF7FEFF 		bl	u8g2_GetKerningByTable
 2307              	.LVL343:
 882:u8g2/csrc/u8g2_font.c ****       }
 2308              		.loc 1 882 0
 2309 002e 2D1A     		subs	r5, r5, r0
 2310              	.LVL344:
 2311 0030 EDB2     		uxtb	r5, r5
 2312              	.LVL345:
 2313 0032 2BE0     		b	.L147
 2314              	.LVL346:
 2315              	.L148:
 893:u8g2/csrc/u8g2_font.c ****       if ( to_left )
 2316              		.loc 1 893 0
 2317 0034 2346     		mov	r3, r4
 2318 0036 019A     		ldr	r2, [sp, #4]
 2319 0038 4146     		mov	r1, r8
 2320 003a 3046     		mov	r0, r6
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 66


 2321              	.LVL347:
 2322 003c FFF7FEFF 		bl	u8g2_DrawGlyph
 2323              	.LVL348:
 903:u8g2/csrc/u8g2_font.c ****     }
 2324              		.loc 1 903 0
 2325 0040 A944     		add	r9, r9, r5
 2326              	.LVL349:
 2327 0042 5FFA89F9 		uxtb	r9, r9
 2328              	.LVL350:
 884:u8g2/csrc/u8g2_font.c **** 
 2329              		.loc 1 884 0
 2330 0046 A346     		mov	fp, r4
 2331              	.LVL351:
 2332              	.L143:
 865:u8g2/csrc/u8g2_font.c ****     if ( e == 0x0ffff )
 2333              		.loc 1 865 0
 2334 0048 7368     		ldr	r3, [r6, #4]
 2335 004a 3978     		ldrb	r1, [r7]	@ zero_extendqisi2
 2336 004c 3046     		mov	r0, r6
 2337 004e 9847     		blx	r3
 2338              	.LVL352:
 2339 0050 0446     		mov	r4, r0
 2340              	.LVL353:
 866:u8g2/csrc/u8g2_font.c ****       break;
 2341              		.loc 1 866 0
 2342 0052 4FF6FF73 		movw	r3, #65535
 2343 0056 9842     		cmp	r0, r3
 2344 0058 1FD0     		beq	.L144
 868:u8g2/csrc/u8g2_font.c ****     if ( e != 0x0fffe )
 2345              		.loc 1 868 0
 2346 005a 0137     		adds	r7, r7, #1
 2347              	.LVL354:
 869:u8g2/csrc/u8g2_font.c ****     {
 2348              		.loc 1 869 0
 2349 005c 4FF6FE73 		movw	r3, #65534
 2350 0060 9842     		cmp	r0, r3
 2351 0062 F1D0     		beq	.L143
 871:u8g2/csrc/u8g2_font.c **** 	    
 2352              		.loc 1 871 0
 2353 0064 0146     		mov	r1, r0
 2354 0066 3046     		mov	r0, r6
 2355              	.LVL355:
 2356 0068 FFF7FEFF 		bl	u8g2_GetGlyphWidth
 2357              	.LVL356:
 2358 006c C5B2     		uxtb	r5, r0
 2359              	.LVL357:
 873:u8g2/csrc/u8g2_font.c ****       {
 2360              		.loc 1 873 0
 2361 006e BAF1000F 		cmp	r10, #0
 2362 0072 D6D0     		beq	.L146
 875:u8g2/csrc/u8g2_font.c **** 	delta -= k;
 2363              		.loc 1 875 0
 2364 0074 5B46     		mov	r3, fp
 2365 0076 2246     		mov	r2, r4
 2366 0078 0C99     		ldr	r1, [sp, #48]
 2367 007a 3046     		mov	r0, r6
 2368 007c FFF7FEFF 		bl	u8g2_GetKerningByTable
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 67


 2369              	.LVL358:
 876:u8g2/csrc/u8g2_font.c **** 	x -= delta;
 2370              		.loc 1 876 0
 2371 0080 2D1A     		subs	r5, r5, r0
 2372              	.LVL359:
 2373 0082 EDB2     		uxtb	r5, r5
 2374              	.LVL360:
 877:u8g2/csrc/u8g2_font.c ****       }
 2375              		.loc 1 877 0
 2376 0084 A8EB0508 		sub	r8, r8, r5
 2377              	.LVL361:
 2378 0088 5FFA88F8 		uxtb	r8, r8
 2379              	.LVL362:
 2380              	.L147:
 886:u8g2/csrc/u8g2_font.c ****       {
 2381              		.loc 1 886 0
 2382 008c BAF1000F 		cmp	r10, #0
 2383 0090 D0D1     		bne	.L148
 891:u8g2/csrc/u8g2_font.c ****       }
 2384              		.loc 1 891 0
 2385 0092 A844     		add	r8, r8, r5
 2386              	.LVL363:
 2387 0094 5FFA88F8 		uxtb	r8, r8
 2388              	.LVL364:
 2389 0098 CCE7     		b	.L148
 2390              	.LVL365:
 2391              	.L144:
 907:u8g2/csrc/u8g2_font.c **** 
 2392              		.loc 1 907 0
 2393 009a 4846     		mov	r0, r9
 2394              	.LVL366:
 2395 009c 03B0     		add	sp, sp, #12
 2396              	.LCFI29:
 2397              		.cfi_def_cfa_offset 36
 2398              		@ sp needed
 2399 009e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2400              	.LVL367:
 2401              	.L151:
 2402 00a2 00BF     		.align	2
 2403              	.L150:
 2404 00a4 00000000 		.word	u8x8_utf8_next
 2405              		.cfi_endproc
 2406              	.LFE26:
 2408              		.section	.text.u8g2_UpdateRefHeight,"ax",%progbits
 2409              		.align	1
 2410              		.global	u8g2_UpdateRefHeight
 2411              		.syntax unified
 2412              		.thumb
 2413              		.thumb_func
 2414              		.fpu softvfp
 2416              	u8g2_UpdateRefHeight:
 2417              	.LFB27:
 916:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 2418              		.loc 1 916 0
 2419              		.cfi_startproc
 2420              		@ args = 0, pretend = 0, frame = 0
 2421              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 68


 2422              		@ link register save eliminated.
 2423              	.LVL368:
 917:u8g2/csrc/u8g2_font.c ****     return;
 2424              		.loc 1 917 0
 2425 0000 836C     		ldr	r3, [r0, #72]
 2426 0002 63B3     		cbz	r3, .L158
 919:u8g2/csrc/u8g2_font.c ****   u8g2->font_ref_descent = u8g2->font_info.descent_g;
 2427              		.loc 1 919 0
 2428 0004 90F96D20 		ldrsb	r2, [r0, #109]
 2429 0008 80F87920 		strb	r2, [r0, #121]
 920:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font_height_mode == U8G2_FONT_HEIGHT_MODE_TEXT )
 2430              		.loc 1 920 0
 2431 000c 90F96E30 		ldrsb	r3, [r0, #110]
 2432 0010 80F87A30 		strb	r3, [r0, #122]
 921:u8g2/csrc/u8g2_font.c ****   {
 2433              		.loc 1 921 0
 2434 0014 90F87810 		ldrb	r1, [r0, #120]	@ zero_extendqisi2
 2435 0018 09B3     		cbz	r1, .L158
 924:u8g2/csrc/u8g2_font.c ****   {
 2436              		.loc 1 924 0
 2437 001a 0129     		cmp	r1, #1
 2438 001c 12D0     		beq	.L160
 916:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font == NULL )
 2439              		.loc 1 916 0
 2440 001e 30B4     		push	{r4, r5}
 2441              	.LCFI30:
 2442              		.cfi_def_cfa_offset 8
 2443              		.cfi_offset 4, -8
 2444              		.cfi_offset 5, -4
 933:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.max_char_height+u8g2->font_info.y_offset;
 2445              		.loc 1 933 0
 2446 0020 90F96A10 		ldrsb	r1, [r0, #106]
 2447 0024 90F96C40 		ldrsb	r4, [r0, #108]
 2448 0028 0D19     		adds	r5, r1, r4
 2449 002a AA42     		cmp	r2, r5
 2450 002c 04DA     		bge	.L156
 934:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.y_offset )
 2451              		.loc 1 934 0
 2452 002e C9B2     		uxtb	r1, r1
 2453 0030 E2B2     		uxtb	r2, r4
 2454 0032 1144     		add	r1, r1, r2
 2455 0034 80F87910 		strb	r1, [r0, #121]
 2456              	.L156:
 935:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.y_offset;
 2457              		.loc 1 935 0
 2458 0038 A342     		cmp	r3, r4
 2459 003a 01DD     		ble	.L152
 936:u8g2/csrc/u8g2_font.c ****   }  
 2460              		.loc 1 936 0
 2461 003c 80F87A40 		strb	r4, [r0, #122]
 2462              	.L152:
 938:u8g2/csrc/u8g2_font.c **** 
 2463              		.loc 1 938 0
 2464 0040 30BC     		pop	{r4, r5}
 2465              	.LCFI31:
 2466              		.cfi_restore 5
 2467              		.cfi_restore 4
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 69


 2468              		.cfi_def_cfa_offset 0
 2469 0042 7047     		bx	lr
 2470              	.L160:
 926:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_ascent = u8g2->font_info.ascent_para;
 2471              		.loc 1 926 0
 2472 0044 90F96F10 		ldrsb	r1, [r0, #111]
 2473 0048 8A42     		cmp	r2, r1
 2474 004a 01DA     		bge	.L155
 927:u8g2/csrc/u8g2_font.c ****     if ( u8g2->font_ref_descent > u8g2->font_info.descent_para )
 2475              		.loc 1 927 0
 2476 004c 80F87910 		strb	r1, [r0, #121]
 2477              	.L155:
 928:u8g2/csrc/u8g2_font.c ****       u8g2->font_ref_descent = u8g2->font_info.descent_para;
 2478              		.loc 1 928 0
 2479 0050 90F97020 		ldrsb	r2, [r0, #112]
 2480 0054 9342     		cmp	r3, r2
 2481 0056 02DD     		ble	.L158
 929:u8g2/csrc/u8g2_font.c ****   }
 2482              		.loc 1 929 0
 2483 0058 80F87A20 		strb	r2, [r0, #122]
 2484 005c 7047     		bx	lr
 2485              	.L158:
 2486 005e 7047     		bx	lr
 2487              		.cfi_endproc
 2488              	.LFE27:
 2490              		.section	.text.u8g2_SetFontRefHeightText,"ax",%progbits
 2491              		.align	1
 2492              		.global	u8g2_SetFontRefHeightText
 2493              		.syntax unified
 2494              		.thumb
 2495              		.thumb_func
 2496              		.fpu softvfp
 2498              	u8g2_SetFontRefHeightText:
 2499              	.LFB28:
 941:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_TEXT;
 2500              		.loc 1 941 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 2504              	.LVL369:
 2505 0000 08B5     		push	{r3, lr}
 2506              	.LCFI32:
 2507              		.cfi_def_cfa_offset 8
 2508              		.cfi_offset 3, -8
 2509              		.cfi_offset 14, -4
 942:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2510              		.loc 1 942 0
 2511 0002 0022     		movs	r2, #0
 2512 0004 80F87820 		strb	r2, [r0, #120]
 943:u8g2/csrc/u8g2_font.c **** }
 2513              		.loc 1 943 0
 2514 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2515              	.LVL370:
 944:u8g2/csrc/u8g2_font.c **** 
 2516              		.loc 1 944 0
 2517 000c 08BD     		pop	{r3, pc}
 2518              		.cfi_endproc
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 70


 2519              	.LFE28:
 2521              		.section	.text.u8g2_SetFontRefHeightExtendedText,"ax",%progbits
 2522              		.align	1
 2523              		.global	u8g2_SetFontRefHeightExtendedText
 2524              		.syntax unified
 2525              		.thumb
 2526              		.thumb_func
 2527              		.fpu softvfp
 2529              	u8g2_SetFontRefHeightExtendedText:
 2530              	.LFB29:
 947:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_XTEXT;
 2531              		.loc 1 947 0
 2532              		.cfi_startproc
 2533              		@ args = 0, pretend = 0, frame = 0
 2534              		@ frame_needed = 0, uses_anonymous_args = 0
 2535              	.LVL371:
 2536 0000 08B5     		push	{r3, lr}
 2537              	.LCFI33:
 2538              		.cfi_def_cfa_offset 8
 2539              		.cfi_offset 3, -8
 2540              		.cfi_offset 14, -4
 948:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2541              		.loc 1 948 0
 2542 0002 0123     		movs	r3, #1
 2543 0004 80F87830 		strb	r3, [r0, #120]
 949:u8g2/csrc/u8g2_font.c **** }
 2544              		.loc 1 949 0
 2545 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2546              	.LVL372:
 950:u8g2/csrc/u8g2_font.c **** 
 2547              		.loc 1 950 0
 2548 000c 08BD     		pop	{r3, pc}
 2549              		.cfi_endproc
 2550              	.LFE29:
 2552              		.section	.text.u8g2_SetFontRefHeightAll,"ax",%progbits
 2553              		.align	1
 2554              		.global	u8g2_SetFontRefHeightAll
 2555              		.syntax unified
 2556              		.thumb
 2557              		.thumb_func
 2558              		.fpu softvfp
 2560              	u8g2_SetFontRefHeightAll:
 2561              	.LFB30:
 953:u8g2/csrc/u8g2_font.c ****   u8g2->font_height_mode = U8G2_FONT_HEIGHT_MODE_ALL;
 2562              		.loc 1 953 0
 2563              		.cfi_startproc
 2564              		@ args = 0, pretend = 0, frame = 0
 2565              		@ frame_needed = 0, uses_anonymous_args = 0
 2566              	.LVL373:
 2567 0000 08B5     		push	{r3, lr}
 2568              	.LCFI34:
 2569              		.cfi_def_cfa_offset 8
 2570              		.cfi_offset 3, -8
 2571              		.cfi_offset 14, -4
 954:u8g2/csrc/u8g2_font.c ****   u8g2_UpdateRefHeight(u8g2);
 2572              		.loc 1 954 0
 2573 0002 0223     		movs	r3, #2
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 71


 2574 0004 80F87830 		strb	r3, [r0, #120]
 955:u8g2/csrc/u8g2_font.c **** }
 2575              		.loc 1 955 0
 2576 0008 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2577              	.LVL374:
 956:u8g2/csrc/u8g2_font.c **** 
 2578              		.loc 1 956 0
 2579 000c 08BD     		pop	{r3, pc}
 2580              		.cfi_endproc
 2581              	.LFE30:
 2583              		.section	.text.u8g2_SetFontPosBaseline,"ax",%progbits
 2584              		.align	1
 2585              		.global	u8g2_SetFontPosBaseline
 2586              		.syntax unified
 2587              		.thumb
 2588              		.thumb_func
 2589              		.fpu softvfp
 2591              	u8g2_SetFontPosBaseline:
 2592              	.LFB32:
 967:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_font;
 2593              		.loc 1 967 0
 2594              		.cfi_startproc
 2595              		@ args = 0, pretend = 0, frame = 0
 2596              		@ frame_needed = 0, uses_anonymous_args = 0
 2597              		@ link register save eliminated.
 2598              	.LVL375:
 968:u8g2/csrc/u8g2_font.c **** }
 2599              		.loc 1 968 0
 2600 0000 014B     		ldr	r3, .L168
 2601 0002 C364     		str	r3, [r0, #76]
 969:u8g2/csrc/u8g2_font.c **** 
 2602              		.loc 1 969 0
 2603 0004 7047     		bx	lr
 2604              	.L169:
 2605 0006 00BF     		.align	2
 2606              	.L168:
 2607 0008 00000000 		.word	u8g2_font_calc_vref_font
 2608              		.cfi_endproc
 2609              	.LFE32:
 2611              		.section	.text.u8g2_SetFontPosBottom,"ax",%progbits
 2612              		.align	1
 2613              		.global	u8g2_SetFontPosBottom
 2614              		.syntax unified
 2615              		.thumb
 2616              		.thumb_func
 2617              		.fpu softvfp
 2619              	u8g2_SetFontPosBottom:
 2620              	.LFB34:
 978:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_bottom;
 2621              		.loc 1 978 0
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 0
 2624              		@ frame_needed = 0, uses_anonymous_args = 0
 2625              		@ link register save eliminated.
 2626              	.LVL376:
 979:u8g2/csrc/u8g2_font.c **** }
 2627              		.loc 1 979 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 72


 2628 0000 014B     		ldr	r3, .L171
 2629 0002 C364     		str	r3, [r0, #76]
 980:u8g2/csrc/u8g2_font.c **** 
 2630              		.loc 1 980 0
 2631 0004 7047     		bx	lr
 2632              	.L172:
 2633 0006 00BF     		.align	2
 2634              	.L171:
 2635 0008 00000000 		.word	u8g2_font_calc_vref_bottom
 2636              		.cfi_endproc
 2637              	.LFE34:
 2639              		.section	.text.u8g2_SetFontPosTop,"ax",%progbits
 2640              		.align	1
 2641              		.global	u8g2_SetFontPosTop
 2642              		.syntax unified
 2643              		.thumb
 2644              		.thumb_func
 2645              		.fpu softvfp
 2647              	u8g2_SetFontPosTop:
 2648              	.LFB36:
 992:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_top;
 2649              		.loc 1 992 0
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 0
 2652              		@ frame_needed = 0, uses_anonymous_args = 0
 2653              		@ link register save eliminated.
 2654              	.LVL377:
 993:u8g2/csrc/u8g2_font.c **** }
 2655              		.loc 1 993 0
 2656 0000 014B     		ldr	r3, .L174
 2657 0002 C364     		str	r3, [r0, #76]
 994:u8g2/csrc/u8g2_font.c **** 
 2658              		.loc 1 994 0
 2659 0004 7047     		bx	lr
 2660              	.L175:
 2661 0006 00BF     		.align	2
 2662              	.L174:
 2663 0008 00000000 		.word	u8g2_font_calc_vref_top
 2664              		.cfi_endproc
 2665              	.LFE36:
 2667              		.section	.text.u8g2_SetFontPosCenter,"ax",%progbits
 2668              		.align	1
 2669              		.global	u8g2_SetFontPosCenter
 2670              		.syntax unified
 2671              		.thumb
 2672              		.thumb_func
 2673              		.fpu softvfp
 2675              	u8g2_SetFontPosCenter:
 2676              	.LFB38:
1007:u8g2/csrc/u8g2_font.c ****   u8g2->font_calc_vref = u8g2_font_calc_vref_center;
 2677              		.loc 1 1007 0
 2678              		.cfi_startproc
 2679              		@ args = 0, pretend = 0, frame = 0
 2680              		@ frame_needed = 0, uses_anonymous_args = 0
 2681              		@ link register save eliminated.
 2682              	.LVL378:
1008:u8g2/csrc/u8g2_font.c **** }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 73


 2683              		.loc 1 1008 0
 2684 0000 014B     		ldr	r3, .L177
 2685 0002 C364     		str	r3, [r0, #76]
1009:u8g2/csrc/u8g2_font.c **** 
 2686              		.loc 1 1009 0
 2687 0004 7047     		bx	lr
 2688              	.L178:
 2689 0006 00BF     		.align	2
 2690              	.L177:
 2691 0008 00000000 		.word	u8g2_font_calc_vref_center
 2692              		.cfi_endproc
 2693              	.LFE38:
 2695              		.section	.text.u8g2_SetFont,"ax",%progbits
 2696              		.align	1
 2697              		.global	u8g2_SetFont
 2698              		.syntax unified
 2699              		.thumb
 2700              		.thumb_func
 2701              		.fpu softvfp
 2703              	u8g2_SetFont:
 2704              	.LFB39:
1014:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
 2705              		.loc 1 1014 0
 2706              		.cfi_startproc
 2707              		@ args = 0, pretend = 0, frame = 0
 2708              		@ frame_needed = 0, uses_anonymous_args = 0
 2709              	.LVL379:
1015:u8g2/csrc/u8g2_font.c ****   {
 2710              		.loc 1 1015 0
 2711 0000 836C     		ldr	r3, [r0, #72]
 2712 0002 8B42     		cmp	r3, r1
 2713 0004 09D0     		beq	.L182
1014:u8g2/csrc/u8g2_font.c ****   if ( u8g2->font != font )
 2714              		.loc 1 1014 0
 2715 0006 10B5     		push	{r4, lr}
 2716              	.LCFI35:
 2717              		.cfi_def_cfa_offset 8
 2718              		.cfi_offset 4, -8
 2719              		.cfi_offset 14, -4
 2720 0008 0446     		mov	r4, r0
1021:u8g2/csrc/u8g2_font.c ****     u8g2_read_font_info(&(u8g2->font_info), font);
 2721              		.loc 1 1021 0
 2722 000a 8164     		str	r1, [r0, #72]
1022:u8g2/csrc/u8g2_font.c ****     u8g2_UpdateRefHeight(u8g2);
 2723              		.loc 1 1022 0
 2724 000c 6030     		adds	r0, r0, #96
 2725              	.LVL380:
 2726 000e FFF7FEFF 		bl	u8g2_read_font_info
 2727              	.LVL381:
1023:u8g2/csrc/u8g2_font.c ****     /* u8g2_SetFontPosBaseline(u8g2); */ /* removed with issue 195 */
 2728              		.loc 1 1023 0
 2729 0012 2046     		mov	r0, r4
 2730 0014 FFF7FEFF 		bl	u8g2_UpdateRefHeight
 2731              	.LVL382:
1026:u8g2/csrc/u8g2_font.c **** 
 2732              		.loc 1 1026 0
 2733 0018 10BD     		pop	{r4, pc}
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 74


 2734              	.LVL383:
 2735              	.L182:
 2736              	.LCFI36:
 2737              		.cfi_def_cfa_offset 0
 2738              		.cfi_restore 4
 2739              		.cfi_restore 14
 2740 001a 7047     		bx	lr
 2741              		.cfi_endproc
 2742              	.LFE39:
 2744              		.section	.text.u8g2_GetStrX,"ax",%progbits
 2745              		.align	1
 2746              		.global	u8g2_GetStrX
 2747              		.syntax unified
 2748              		.thumb
 2749              		.thumb_func
 2750              		.fpu softvfp
 2752              	u8g2_GetStrX:
 2753              	.LFB42:
1087:u8g2/csrc/u8g2_font.c ****   uint8_t w;
 2754              		.loc 1 1087 0
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 8
 2757              		@ frame_needed = 0, uses_anonymous_args = 0
 2758              	.LVL384:
 2759 0000 00B5     		push	{lr}
 2760              	.LCFI37:
 2761              		.cfi_def_cfa_offset 4
 2762              		.cfi_offset 14, -4
 2763 0002 85B0     		sub	sp, sp, #20
 2764              	.LCFI38:
 2765              		.cfi_def_cfa_offset 24
1090:u8g2/csrc/u8g2_font.c ****   return ox;
 2766              		.loc 1 1090 0
 2767 0004 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 2768              	.LVL385:
 2769 0006 0DF10D03 		add	r3, sp, #13
 2770 000a 0093     		str	r3, [sp]
 2771 000c 0DF10E03 		add	r3, sp, #14
 2772 0010 0DF10F02 		add	r2, sp, #15
 2773 0014 FFF7FEFF 		bl	u8g2_GetGlyphHorizontalProperties
 2774              	.LVL386:
1092:u8g2/csrc/u8g2_font.c **** 
 2775              		.loc 1 1092 0
 2776 0018 9DF90E00 		ldrsb	r0, [sp, #14]
 2777 001c 05B0     		add	sp, sp, #20
 2778              	.LCFI39:
 2779              		.cfi_def_cfa_offset 4
 2780              		@ sp needed
 2781 001e 5DF804FB 		ldr	pc, [sp], #4
 2782              		.cfi_endproc
 2783              	.LFE42:
 2785              		.section	.text.u8g2_GetStrWidth,"ax",%progbits
 2786              		.align	1
 2787              		.global	u8g2_GetStrWidth
 2788              		.syntax unified
 2789              		.thumb
 2790              		.thumb_func
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 75


 2791              		.fpu softvfp
 2793              	u8g2_GetStrWidth:
 2794              	.LFB44:
1164:u8g2/csrc/u8g2_font.c **** 
1165:u8g2/csrc/u8g2_font.c **** 
1166:u8g2/csrc/u8g2_font.c **** 
1167:u8g2/csrc/u8g2_font.c **** 
1168:u8g2/csrc/u8g2_font.c **** 
1169:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetStrWidth(u8g2_t *u8g2, const char *s)
1170:u8g2/csrc/u8g2_font.c **** {
 2795              		.loc 1 1170 0
 2796              		.cfi_startproc
 2797              		@ args = 0, pretend = 0, frame = 0
 2798              		@ frame_needed = 0, uses_anonymous_args = 0
 2799              	.LVL387:
 2800 0000 08B5     		push	{r3, lr}
 2801              	.LCFI40:
 2802              		.cfi_def_cfa_offset 8
 2803              		.cfi_offset 3, -8
 2804              		.cfi_offset 14, -4
1171:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2805              		.loc 1 1171 0
 2806 0002 024B     		ldr	r3, .L189
 2807 0004 4360     		str	r3, [r0, #4]
1172:u8g2/csrc/u8g2_font.c ****   return u8g2_string_width(u8g2, s);
 2808              		.loc 1 1172 0
 2809 0006 FFF7FEFF 		bl	u8g2_string_width
 2810              	.LVL388:
1173:u8g2/csrc/u8g2_font.c **** }
 2811              		.loc 1 1173 0
 2812 000a 08BD     		pop	{r3, pc}
 2813              	.L190:
 2814              		.align	2
 2815              	.L189:
 2816 000c 00000000 		.word	u8x8_ascii_next
 2817              		.cfi_endproc
 2818              	.LFE44:
 2820              		.section	.text.u8g2_GetExactStrWidth,"ax",%progbits
 2821              		.align	1
 2822              		.global	u8g2_GetExactStrWidth
 2823              		.syntax unified
 2824              		.thumb
 2825              		.thumb_func
 2826              		.fpu softvfp
 2828              	u8g2_GetExactStrWidth:
 2829              	.LFB45:
1174:u8g2/csrc/u8g2_font.c **** 
1175:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetExactStrWidth(u8g2_t *u8g2, const char *s)
1176:u8g2/csrc/u8g2_font.c **** {
 2830              		.loc 1 1176 0
 2831              		.cfi_startproc
 2832              		@ args = 0, pretend = 0, frame = 0
 2833              		@ frame_needed = 0, uses_anonymous_args = 0
 2834              	.LVL389:
 2835 0000 08B5     		push	{r3, lr}
 2836              	.LCFI41:
 2837              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 76


 2838              		.cfi_offset 3, -8
 2839              		.cfi_offset 14, -4
1177:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_ascii_next;
 2840              		.loc 1 1177 0
 2841 0002 024B     		ldr	r3, .L193
 2842 0004 4360     		str	r3, [r0, #4]
1178:u8g2/csrc/u8g2_font.c ****   return u8g2_calculate_exact_string_width(u8g2, s);
 2843              		.loc 1 1178 0
 2844 0006 FFF7FEFF 		bl	u8g2_calculate_exact_string_width
 2845              	.LVL390:
1179:u8g2/csrc/u8g2_font.c **** }
 2846              		.loc 1 1179 0
 2847 000a 08BD     		pop	{r3, pc}
 2848              	.L194:
 2849              		.align	2
 2850              	.L193:
 2851 000c 00000000 		.word	u8x8_ascii_next
 2852              		.cfi_endproc
 2853              	.LFE45:
 2855              		.section	.text.u8g2_GetUTF8Width,"ax",%progbits
 2856              		.align	1
 2857              		.global	u8g2_GetUTF8Width
 2858              		.syntax unified
 2859              		.thumb
 2860              		.thumb_func
 2861              		.fpu softvfp
 2863              	u8g2_GetUTF8Width:
 2864              	.LFB46:
1180:u8g2/csrc/u8g2_font.c **** 
1181:u8g2/csrc/u8g2_font.c **** /*
1182:u8g2/csrc/u8g2_font.c **** source: https://en.wikipedia.org/wiki/UTF-8
1183:u8g2/csrc/u8g2_font.c **** Bits	from 		to			bytes	Byte 1 		Byte 2 		Byte 3 		Byte 4 		Byte 5 		Byte 6
1184:u8g2/csrc/u8g2_font.c ****   7 	U+0000 		U+007F 		1 		0xxxxxxx
1185:u8g2/csrc/u8g2_font.c **** 11 	U+0080 		U+07FF 		2 		110xxxxx 	10xxxxxx
1186:u8g2/csrc/u8g2_font.c **** 16 	U+0800 		U+FFFF 		3 		1110xxxx 	10xxxxxx 	10xxxxxx
1187:u8g2/csrc/u8g2_font.c **** 21 	U+10000 	U+1FFFFF 	4 		11110xxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
1188:u8g2/csrc/u8g2_font.c **** 26 	U+200000 	U+3FFFFFF 	5 		111110xx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx
1189:u8g2/csrc/u8g2_font.c **** 31 	U+4000000 	U+7FFFFFFF 	6 		1111110x 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx 	10xxxxxx  
1190:u8g2/csrc/u8g2_font.c **** */
1191:u8g2/csrc/u8g2_font.c **** u8g2_uint_t u8g2_GetUTF8Width(u8g2_t *u8g2, const char *str)
1192:u8g2/csrc/u8g2_font.c **** {
 2865              		.loc 1 1192 0
 2866              		.cfi_startproc
 2867              		@ args = 0, pretend = 0, frame = 0
 2868              		@ frame_needed = 0, uses_anonymous_args = 0
 2869              	.LVL391:
 2870 0000 08B5     		push	{r3, lr}
 2871              	.LCFI42:
 2872              		.cfi_def_cfa_offset 8
 2873              		.cfi_offset 3, -8
 2874              		.cfi_offset 14, -4
1193:u8g2/csrc/u8g2_font.c ****   u8g2->u8x8.next_cb = u8x8_utf8_next;
 2875              		.loc 1 1193 0
 2876 0002 024B     		ldr	r3, .L197
 2877 0004 4360     		str	r3, [r0, #4]
1194:u8g2/csrc/u8g2_font.c ****   return u8g2_string_width(u8g2, str);
 2878              		.loc 1 1194 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 77


 2879 0006 FFF7FEFF 		bl	u8g2_string_width
 2880              	.LVL392:
1195:u8g2/csrc/u8g2_font.c **** }
 2881              		.loc 1 1195 0
 2882 000a 08BD     		pop	{r3, pc}
 2883              	.L198:
 2884              		.align	2
 2885              	.L197:
 2886 000c 00000000 		.word	u8x8_utf8_next
 2887              		.cfi_endproc
 2888              	.LFE46:
 2890              		.section	.text.u8g2_SetFontDirection,"ax",%progbits
 2891              		.align	1
 2892              		.global	u8g2_SetFontDirection
 2893              		.syntax unified
 2894              		.thumb
 2895              		.thumb_func
 2896              		.fpu softvfp
 2898              	u8g2_SetFontDirection:
 2899              	.LFB47:
1196:u8g2/csrc/u8g2_font.c **** 
1197:u8g2/csrc/u8g2_font.c **** 
1198:u8g2/csrc/u8g2_font.c **** 
1199:u8g2/csrc/u8g2_font.c **** void u8g2_SetFontDirection(u8g2_t *u8g2, uint8_t dir)
1200:u8g2/csrc/u8g2_font.c **** {
 2900              		.loc 1 1200 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 0
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
 2904              		@ link register save eliminated.
 2905              	.LVL393:
1201:u8g2/csrc/u8g2_font.c **** #ifdef U8G2_WITH_FONT_ROTATION  
1202:u8g2/csrc/u8g2_font.c ****   u8g2->font_decode.dir = dir;
 2906              		.loc 1 1202 0
 2907 0000 80F85E10 		strb	r1, [r0, #94]
1203:u8g2/csrc/u8g2_font.c **** #endif
1204:u8g2/csrc/u8g2_font.c **** }
 2908              		.loc 1 1204 0
 2909 0004 7047     		bx	lr
 2910              		.cfi_endproc
 2911              	.LFE47:
 2913              		.text
 2914              	.Letext0:
 2915              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 2916              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 2917              		.file 4 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 2918              		.file 5 "u8g2/csrc/u8x8.h"
 2919              		.file 6 "u8g2/csrc/u8g2.h"
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 u8g2_font.c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:16     .text.u8g2_font_get_byte:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:22     .text.u8g2_font_get_byte:0000000000000000 u8g2_font_get_byte
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:39     .text.u8g2_font_get_word:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:45     .text.u8g2_font_get_word:0000000000000000 u8g2_font_get_word
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:70     .text.u8g2_add_vector_y:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:76     .text.u8g2_add_vector_y:0000000000000000 u8g2_add_vector_y
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:125    .text.u8g2_add_vector_x:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:131    .text.u8g2_add_vector_x:0000000000000000 u8g2_add_vector_x
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:180    .text.u8g2_font_calc_vref_font:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:187    .text.u8g2_font_calc_vref_font:0000000000000000 u8g2_font_calc_vref_font
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:203    .text.u8g2_font_calc_vref_bottom:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:210    .text.u8g2_font_calc_vref_bottom:0000000000000000 u8g2_font_calc_vref_bottom
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:228    .text.u8g2_font_calc_vref_top:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:235    .text.u8g2_font_calc_vref_top:0000000000000000 u8g2_font_calc_vref_top
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:258    .text.u8g2_font_calc_vref_center:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:265    .text.u8g2_font_calc_vref_center:0000000000000000 u8g2_font_calc_vref_center
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:295    .text.u8g2_read_font_info:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:302    .text.u8g2_read_font_info:0000000000000000 u8g2_read_font_info
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:446    .text.u8g2_GetFontSize:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:453    .text.u8g2_GetFontSize:0000000000000000 u8g2_GetFontSize
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:506    .text.u8g2_GetFontBBXWidth:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:513    .text.u8g2_GetFontBBXWidth:0000000000000000 u8g2_GetFontBBXWidth
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:529    .text.u8g2_GetFontBBXHeight:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:536    .text.u8g2_GetFontBBXHeight:0000000000000000 u8g2_GetFontBBXHeight
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:552    .text.u8g2_GetFontBBXOffX:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:559    .text.u8g2_GetFontBBXOffX:0000000000000000 u8g2_GetFontBBXOffX
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:575    .text.u8g2_GetFontBBXOffY:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:582    .text.u8g2_GetFontBBXOffY:0000000000000000 u8g2_GetFontBBXOffY
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:598    .text.u8g2_GetFontCapitalAHeight:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:605    .text.u8g2_GetFontCapitalAHeight:0000000000000000 u8g2_GetFontCapitalAHeight
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:621    .text.u8g2_font_decode_get_unsigned_bits:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:628    .text.u8g2_font_decode_get_unsigned_bits:0000000000000000 u8g2_font_decode_get_unsigned_bits
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:705    .text.u8g2_font_setup_decode:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:711    .text.u8g2_font_setup_decode:0000000000000000 u8g2_font_setup_decode
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:761    .text.u8g2_font_decode_get_signed_bits:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:768    .text.u8g2_font_decode_get_signed_bits:0000000000000000 u8g2_font_decode_get_signed_bits
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:802    .text.u8g2_font_decode_len:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:809    .text.u8g2_font_decode_len:0000000000000000 u8g2_font_decode_len
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:958    .text.u8g2_font_decode_glyph:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:965    .text.u8g2_font_decode_glyph:0000000000000000 u8g2_font_decode_glyph
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1056   .text.u8g2_font_decode_glyph:0000000000000086 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1060   .text.u8g2_font_decode_glyph:000000000000008a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1228   .text.u8g2_font_get_glyph_data:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1235   .text.u8g2_font_get_glyph_data:0000000000000000 u8g2_font_get_glyph_data
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1338   .text.u8g2_font_draw_glyph:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1344   .text.u8g2_font_draw_glyph:0000000000000000 u8g2_font_draw_glyph
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1390   .text.u8g2_GetGlyphHorizontalProperties:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1396   .text.u8g2_GetGlyphHorizontalProperties:0000000000000000 u8g2_GetGlyphHorizontalProperties
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1454   .text.u8g2_calculate_exact_string_width:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1460   .text.u8g2_calculate_exact_string_width:0000000000000000 u8g2_calculate_exact_string_width
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1586   .text.u8g2_IsGlyph:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1593   .text.u8g2_IsGlyph:0000000000000000 u8g2_IsGlyph
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1622   .text.u8g2_GetGlyphWidth:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1629   .text.u8g2_GetGlyphWidth:0000000000000000 u8g2_GetGlyphWidth
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1685   .text.u8g2_string_width:0000000000000000 $t
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 79


/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1691   .text.u8g2_string_width:0000000000000000 u8g2_string_width
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1781   .text.u8g2_SetFontMode:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1788   .text.u8g2_SetFontMode:0000000000000000 u8g2_SetFontMode
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1804   .text.u8g2_DrawGlyph:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1811   .text.u8g2_DrawGlyph:0000000000000000 u8g2_DrawGlyph
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1839   .text.u8g2_DrawGlyph:0000000000000016 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1843   .text.u8g2_DrawGlyph:000000000000001a $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1899   .text.u8g2_draw_string:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1905   .text.u8g2_draw_string:0000000000000000 u8g2_draw_string
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1978   .text.u8g2_draw_string:0000000000000054 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:1982   .text.u8g2_draw_string:0000000000000064 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2017   .text.u8g2_DrawStr:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2024   .text.u8g2_DrawStr:0000000000000000 u8g2_DrawStr
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2047   .text.u8g2_DrawStr:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2052   .text.u8g2_DrawUTF8:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2059   .text.u8g2_DrawUTF8:0000000000000000 u8g2_DrawUTF8
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2082   .text.u8g2_DrawUTF8:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2087   .text.u8g2_DrawExtendedUTF8:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2094   .text.u8g2_DrawExtendedUTF8:0000000000000000 u8g2_DrawExtendedUTF8
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2247   .text.u8g2_DrawExtendedUTF8:00000000000000ac $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2252   .text.u8g2_DrawExtUTF8:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2259   .text.u8g2_DrawExtUTF8:0000000000000000 u8g2_DrawExtUTF8
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2404   .text.u8g2_DrawExtUTF8:00000000000000a4 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2409   .text.u8g2_UpdateRefHeight:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2416   .text.u8g2_UpdateRefHeight:0000000000000000 u8g2_UpdateRefHeight
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2491   .text.u8g2_SetFontRefHeightText:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2498   .text.u8g2_SetFontRefHeightText:0000000000000000 u8g2_SetFontRefHeightText
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2522   .text.u8g2_SetFontRefHeightExtendedText:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2529   .text.u8g2_SetFontRefHeightExtendedText:0000000000000000 u8g2_SetFontRefHeightExtendedText
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2553   .text.u8g2_SetFontRefHeightAll:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2560   .text.u8g2_SetFontRefHeightAll:0000000000000000 u8g2_SetFontRefHeightAll
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2584   .text.u8g2_SetFontPosBaseline:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2591   .text.u8g2_SetFontPosBaseline:0000000000000000 u8g2_SetFontPosBaseline
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2607   .text.u8g2_SetFontPosBaseline:0000000000000008 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2612   .text.u8g2_SetFontPosBottom:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2619   .text.u8g2_SetFontPosBottom:0000000000000000 u8g2_SetFontPosBottom
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2635   .text.u8g2_SetFontPosBottom:0000000000000008 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2640   .text.u8g2_SetFontPosTop:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2647   .text.u8g2_SetFontPosTop:0000000000000000 u8g2_SetFontPosTop
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2663   .text.u8g2_SetFontPosTop:0000000000000008 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2668   .text.u8g2_SetFontPosCenter:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2675   .text.u8g2_SetFontPosCenter:0000000000000000 u8g2_SetFontPosCenter
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2691   .text.u8g2_SetFontPosCenter:0000000000000008 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2696   .text.u8g2_SetFont:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2703   .text.u8g2_SetFont:0000000000000000 u8g2_SetFont
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2745   .text.u8g2_GetStrX:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2752   .text.u8g2_GetStrX:0000000000000000 u8g2_GetStrX
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2786   .text.u8g2_GetStrWidth:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2793   .text.u8g2_GetStrWidth:0000000000000000 u8g2_GetStrWidth
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2816   .text.u8g2_GetStrWidth:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2821   .text.u8g2_GetExactStrWidth:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2828   .text.u8g2_GetExactStrWidth:0000000000000000 u8g2_GetExactStrWidth
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2851   .text.u8g2_GetExactStrWidth:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2856   .text.u8g2_GetUTF8Width:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2863   .text.u8g2_GetUTF8Width:0000000000000000 u8g2_GetUTF8Width
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2886   .text.u8g2_GetUTF8Width:000000000000000c $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2891   .text.u8g2_SetFontDirection:0000000000000000 $t
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s 			page 80


/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccAV3RfH.s:2898   .text.u8g2_SetFontDirection:0000000000000000 u8g2_SetFontDirection

UNDEFINED SYMBOLS
u8g2_DrawHVLine
u8g2_IsIntersection
u8x8_utf8_init
u8x8_ascii_next
u8x8_utf8_next
u8g2_GetKerning
u8g2_GetKerningByTable
