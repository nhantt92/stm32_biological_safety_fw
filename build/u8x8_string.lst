ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_string.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_GetStringLineCnt,"ax",%progbits
  16              		.align	1
  17              		.global	u8x8_GetStringLineCnt
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	u8x8_GetStringLineCnt:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "u8g2/csrc/u8x8_string.c"
   1:u8g2/csrc/u8x8_string.c **** /*
   2:u8g2/csrc/u8x8_string.c **** 
   3:u8g2/csrc/u8x8_string.c ****   u8x8_string.c
   4:u8g2/csrc/u8x8_string.c ****   
   5:u8g2/csrc/u8x8_string.c ****   string line procedures
   6:u8g2/csrc/u8x8_string.c ****   
   7:u8g2/csrc/u8x8_string.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:u8g2/csrc/u8x8_string.c **** 
   9:u8g2/csrc/u8x8_string.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:u8g2/csrc/u8x8_string.c ****   All rights reserved.
  11:u8g2/csrc/u8x8_string.c **** 
  12:u8g2/csrc/u8x8_string.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g2/csrc/u8x8_string.c ****   are permitted provided that the following conditions are met:
  14:u8g2/csrc/u8x8_string.c **** 
  15:u8g2/csrc/u8x8_string.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g2/csrc/u8x8_string.c ****     of conditions and the following disclaimer.
  17:u8g2/csrc/u8x8_string.c ****     
  18:u8g2/csrc/u8x8_string.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g2/csrc/u8x8_string.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g2/csrc/u8x8_string.c ****     materials provided with the distribution.
  21:u8g2/csrc/u8x8_string.c **** 
  22:u8g2/csrc/u8x8_string.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g2/csrc/u8x8_string.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g2/csrc/u8x8_string.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g2/csrc/u8x8_string.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g2/csrc/u8x8_string.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g2/csrc/u8x8_string.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g2/csrc/u8x8_string.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g2/csrc/u8x8_string.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g2/csrc/u8x8_string.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g2/csrc/u8x8_string.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 2


  32:u8g2/csrc/u8x8_string.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g2/csrc/u8x8_string.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:u8g2/csrc/u8x8_string.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:u8g2/csrc/u8x8_string.c **** 
  36:u8g2/csrc/u8x8_string.c **** */
  37:u8g2/csrc/u8x8_string.c **** 
  38:u8g2/csrc/u8x8_string.c **** #include "u8x8.h"
  39:u8g2/csrc/u8x8_string.c **** 
  40:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_GetStringLineCnt(const char *str)
  41:u8g2/csrc/u8x8_string.c **** {
  28              		.loc 1 41 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  42:u8g2/csrc/u8x8_string.c ****   char e;
  33              		.loc 1 42 3 view .LVU1
  43:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
  34              		.loc 1 43 3 view .LVU2
  44:u8g2/csrc/u8x8_string.c ****   if ( str == NULL )
  35              		.loc 1 44 3 view .LVU3
  36              		.loc 1 44 6 is_stmt 0 view .LVU4
  37 0000 0346     		mov	r3, r0
  38 0002 40B1     		cbz	r0, .L5
  43:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
  39              		.loc 1 43 11 view .LVU5
  40 0004 0120     		movs	r0, #1
  41              	.LVL1:
  42              	.L3:
  45:u8g2/csrc/u8x8_string.c ****     return 0;
  46:u8g2/csrc/u8x8_string.c ****   for(;;)
  43              		.loc 1 46 3 is_stmt 1 view .LVU6
  47:u8g2/csrc/u8x8_string.c ****   {
  48:u8g2/csrc/u8x8_string.c ****     e = *str;
  44              		.loc 1 48 5 view .LVU7
  45              		.loc 1 48 7 is_stmt 0 view .LVU8
  46 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  47              	.LVL2:
  49:u8g2/csrc/u8x8_string.c ****     if ( e == '\0' )
  48              		.loc 1 49 5 is_stmt 1 view .LVU9
  49              		.loc 1 49 8 is_stmt 0 view .LVU10
  50 0008 32B1     		cbz	r2, .L2
  50:u8g2/csrc/u8x8_string.c ****       break;
  51:u8g2/csrc/u8x8_string.c ****     str++;
  51              		.loc 1 51 5 is_stmt 1 view .LVU11
  52              		.loc 1 51 8 is_stmt 0 view .LVU12
  53 000a 0133     		adds	r3, r3, #1
  54              	.LVL3:
  52:u8g2/csrc/u8x8_string.c ****     if ( e == '\n' )
  55              		.loc 1 52 5 is_stmt 1 view .LVU13
  56              		.loc 1 52 8 is_stmt 0 view .LVU14
  57 000c 0A2A     		cmp	r2, #10
  58 000e FAD1     		bne	.L3
  53:u8g2/csrc/u8x8_string.c ****       line_cnt++;
  59              		.loc 1 53 7 is_stmt 1 view .LVU15
  60              		.loc 1 53 15 is_stmt 0 view .LVU16
  61 0010 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 3


  62              	.LVL4:
  63              		.loc 1 53 15 view .LVU17
  64 0012 C0B2     		uxtb	r0, r0
  65              	.LVL5:
  66              		.loc 1 53 15 view .LVU18
  67 0014 F7E7     		b	.L3
  68              	.LVL6:
  69              	.L5:
  45:u8g2/csrc/u8x8_string.c ****   for(;;)
  70              		.loc 1 45 12 view .LVU19
  71 0016 0020     		movs	r0, #0
  72              	.LVL7:
  73              	.L2:
  54:u8g2/csrc/u8x8_string.c ****   }
  55:u8g2/csrc/u8x8_string.c ****   return line_cnt;
  56:u8g2/csrc/u8x8_string.c **** }
  74              		.loc 1 56 1 view .LVU20
  75 0018 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE0:
  79              		.section	.text.u8x8_GetStringLineStart,"ax",%progbits
  80              		.align	1
  81              		.global	u8x8_GetStringLineStart
  82              		.syntax unified
  83              		.thumb
  84              		.thumb_func
  85              		.fpu softvfp
  87              	u8x8_GetStringLineStart:
  88              	.LVL8:
  89              	.LFB1:
  57:u8g2/csrc/u8x8_string.c **** 
  58:u8g2/csrc/u8x8_string.c **** 
  59:u8g2/csrc/u8x8_string.c **** /*
  60:u8g2/csrc/u8x8_string.c ****     Assumes strings, separated by '\n' in "str".
  61:u8g2/csrc/u8x8_string.c ****     Returns the string at index "line_idx". First strng has line_idx = 0
  62:u8g2/csrc/u8x8_string.c ****     Example:
  63:u8g2/csrc/u8x8_string.c ****       Returns "xyz" for line_idx = 1 with str = "abc\nxyz"
  64:u8g2/csrc/u8x8_string.c ****     Support both UTF8 and normal strings.
  65:u8g2/csrc/u8x8_string.c **** */
  66:u8g2/csrc/u8x8_string.c **** const char *u8x8_GetStringLineStart(uint8_t line_idx, const char *str )
  67:u8g2/csrc/u8x8_string.c **** {
  90              		.loc 1 67 1 is_stmt 1 view -0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  68:u8g2/csrc/u8x8_string.c ****   char e;
  95              		.loc 1 68 3 view .LVU22
  69:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
  96              		.loc 1 69 3 view .LVU23
  70:u8g2/csrc/u8x8_string.c ****   
  71:u8g2/csrc/u8x8_string.c ****   if ( line_idx == 0 )
  97              		.loc 1 71 3 view .LVU24
  98              		.loc 1 71 6 is_stmt 0 view .LVU25
  99 0000 60B1     		cbz	r0, .L10
  67:u8g2/csrc/u8x8_string.c ****   char e;
 100              		.loc 1 67 1 view .LVU26
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 4


 101 0002 10B4     		push	{r4}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 4, -4
 105 0004 0446     		mov	r4, r0
  69:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
 106              		.loc 1 69 11 view .LVU27
 107 0006 0122     		movs	r2, #1
 108              	.LVL9:
 109              	.L8:
  72:u8g2/csrc/u8x8_string.c ****     return str;
  73:u8g2/csrc/u8x8_string.c **** 
  74:u8g2/csrc/u8x8_string.c ****   for(;;)
 110              		.loc 1 74 3 is_stmt 1 view .LVU28
  75:u8g2/csrc/u8x8_string.c ****   {
  76:u8g2/csrc/u8x8_string.c ****     e = *str;
 111              		.loc 1 76 5 view .LVU29
 112              		.loc 1 76 7 is_stmt 0 view .LVU30
 113 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 114              	.LVL10:
  77:u8g2/csrc/u8x8_string.c ****     if ( e == '\0' )
 115              		.loc 1 77 5 is_stmt 1 view .LVU31
 116              		.loc 1 77 8 is_stmt 0 view .LVU32
 117 000a 4BB1     		cbz	r3, .L11
  78:u8g2/csrc/u8x8_string.c ****       break;
  79:u8g2/csrc/u8x8_string.c ****     str++;
 118              		.loc 1 79 5 is_stmt 1 view .LVU33
 119              		.loc 1 79 8 is_stmt 0 view .LVU34
 120 000c 0131     		adds	r1, r1, #1
 121              	.LVL11:
  80:u8g2/csrc/u8x8_string.c ****     if ( e == '\n' )
 122              		.loc 1 80 5 is_stmt 1 view .LVU35
 123              		.loc 1 80 8 is_stmt 0 view .LVU36
 124 000e 0A2B     		cmp	r3, #10
 125 0010 FAD1     		bne	.L8
  81:u8g2/csrc/u8x8_string.c ****     {
  82:u8g2/csrc/u8x8_string.c ****       if ( line_cnt == line_idx )
 126              		.loc 1 82 7 is_stmt 1 view .LVU37
 127              		.loc 1 82 10 is_stmt 0 view .LVU38
 128 0012 A242     		cmp	r2, r4
 129 0014 07D0     		beq	.L12
  83:u8g2/csrc/u8x8_string.c **** 	return str;
  84:u8g2/csrc/u8x8_string.c ****       line_cnt++;
 130              		.loc 1 84 7 is_stmt 1 view .LVU39
 131              		.loc 1 84 15 is_stmt 0 view .LVU40
 132 0016 0132     		adds	r2, r2, #1
 133              	.LVL12:
 134              		.loc 1 84 15 view .LVU41
 135 0018 D2B2     		uxtb	r2, r2
 136              	.LVL13:
 137              		.loc 1 84 15 view .LVU42
 138 001a F5E7     		b	.L8
 139              	.LVL14:
 140              	.L10:
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 0
 143              		.cfi_restore 4
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 5


  72:u8g2/csrc/u8x8_string.c **** 
 144              		.loc 1 72 12 view .LVU43
 145 001c 0846     		mov	r0, r1
 146              	.LVL15:
  85:u8g2/csrc/u8x8_string.c ****     }
  86:u8g2/csrc/u8x8_string.c ****   }
  87:u8g2/csrc/u8x8_string.c ****   return NULL;	/* line not found */
  88:u8g2/csrc/u8x8_string.c **** }
 147              		.loc 1 88 1 view .LVU44
 148 001e 7047     		bx	lr
 149              	.LVL16:
 150              	.L11:
 151              	.LCFI2:
 152              		.cfi_def_cfa_offset 4
 153              		.cfi_offset 4, -4
  87:u8g2/csrc/u8x8_string.c **** }
 154              		.loc 1 87 10 view .LVU45
 155 0020 0020     		movs	r0, #0
 156              	.LVL17:
 157              	.L6:
 158              		.loc 1 88 1 view .LVU46
 159 0022 10BC     		pop	{r4}
 160              	.LCFI3:
 161              		.cfi_remember_state
 162              		.cfi_restore 4
 163              		.cfi_def_cfa_offset 0
 164 0024 7047     		bx	lr
 165              	.LVL18:
 166              	.L12:
 167              	.LCFI4:
 168              		.cfi_restore_state
  83:u8g2/csrc/u8x8_string.c ****       line_cnt++;
 169              		.loc 1 83 9 view .LVU47
 170 0026 0846     		mov	r0, r1
 171              	.LVL19:
  83:u8g2/csrc/u8x8_string.c ****       line_cnt++;
 172              		.loc 1 83 9 view .LVU48
 173 0028 FBE7     		b	.L6
 174              		.cfi_endproc
 175              	.LFE1:
 177              		.section	.text.u8x8_CopyStringLine,"ax",%progbits
 178              		.align	1
 179              		.global	u8x8_CopyStringLine
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu softvfp
 185              	u8x8_CopyStringLine:
 186              	.LVL20:
 187              	.LFB2:
  89:u8g2/csrc/u8x8_string.c **** 
  90:u8g2/csrc/u8x8_string.c **** /* copy until first '\n' or '\0' in str */
  91:u8g2/csrc/u8x8_string.c **** /* Important: There is no string overflow check, ensure */
  92:u8g2/csrc/u8x8_string.c **** /* that the destination buffer is large enough */
  93:u8g2/csrc/u8x8_string.c **** void u8x8_CopyStringLine(char *dest, uint8_t line_idx, const char *str)
  94:u8g2/csrc/u8x8_string.c **** {
 188              		.loc 1 94 1 is_stmt 1 view -0
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 6


 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
  95:u8g2/csrc/u8x8_string.c ****   if ( dest == NULL )
 192              		.loc 1 95 3 view .LVU50
 193              		.loc 1 95 6 is_stmt 0 view .LVU51
 194 0000 98B1     		cbz	r0, .L22
  94:u8g2/csrc/u8x8_string.c ****   if ( dest == NULL )
 195              		.loc 1 94 1 view .LVU52
 196 0002 10B5     		push	{r4, lr}
 197              	.LCFI5:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 4, -8
 200              		.cfi_offset 14, -4
 201 0004 0B46     		mov	r3, r1
 202 0006 0446     		mov	r4, r0
  96:u8g2/csrc/u8x8_string.c ****     return;
  97:u8g2/csrc/u8x8_string.c ****   str = u8x8_GetStringLineStart( line_idx, str );
 203              		.loc 1 97 3 is_stmt 1 view .LVU53
 204              		.loc 1 97 9 is_stmt 0 view .LVU54
 205 0008 1146     		mov	r1, r2
 206              	.LVL21:
 207              		.loc 1 97 9 view .LVU55
 208 000a 1846     		mov	r0, r3
 209              	.LVL22:
 210              		.loc 1 97 9 view .LVU56
 211 000c FFF7FEFF 		bl	u8x8_GetStringLineStart
 212              	.LVL23:
  98:u8g2/csrc/u8x8_string.c ****   if ( str != NULL )
 213              		.loc 1 98 3 is_stmt 1 view .LVU57
 214              		.loc 1 98 6 is_stmt 0 view .LVU58
 215 0010 0246     		mov	r2, r0
 216 0012 38B1     		cbz	r0, .L19
 217              	.LVL24:
 218              	.L20:
  99:u8g2/csrc/u8x8_string.c ****   {
 100:u8g2/csrc/u8x8_string.c ****     for(;;)
 219              		.loc 1 100 5 is_stmt 1 view .LVU59
 101:u8g2/csrc/u8x8_string.c ****     {
 102:u8g2/csrc/u8x8_string.c ****       if ( *str == '\n' || *str == '\0' )
 220              		.loc 1 102 7 view .LVU60
 221              		.loc 1 102 12 is_stmt 0 view .LVU61
 222 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 223              		.loc 1 102 10 view .LVU62
 224 0016 0A2B     		cmp	r3, #10
 225 0018 04D0     		beq	.L19
 226              		.loc 1 102 25 discriminator 1 view .LVU63
 227 001a 1BB1     		cbz	r3, .L19
 103:u8g2/csrc/u8x8_string.c **** 	break;
 104:u8g2/csrc/u8x8_string.c ****       *dest = *str;
 228              		.loc 1 104 7 is_stmt 1 view .LVU64
 229              		.loc 1 104 13 is_stmt 0 view .LVU65
 230 001c 04F8013B 		strb	r3, [r4], #1
 231              	.LVL25:
 105:u8g2/csrc/u8x8_string.c ****       dest++;
 232              		.loc 1 105 7 is_stmt 1 view .LVU66
 106:u8g2/csrc/u8x8_string.c ****       str++;
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 7


 233              		.loc 1 106 7 view .LVU67
 234              		.loc 1 106 10 is_stmt 0 view .LVU68
 235 0020 0132     		adds	r2, r2, #1
 236              	.LVL26:
 102:u8g2/csrc/u8x8_string.c **** 	break;
 237              		.loc 1 102 10 view .LVU69
 238 0022 F7E7     		b	.L20
 239              	.L19:
 107:u8g2/csrc/u8x8_string.c ****     }
 108:u8g2/csrc/u8x8_string.c ****   }
 109:u8g2/csrc/u8x8_string.c ****   *dest = '\0';
 240              		.loc 1 109 3 is_stmt 1 view .LVU70
 241              		.loc 1 109 9 is_stmt 0 view .LVU71
 242 0024 0023     		movs	r3, #0
 243 0026 2370     		strb	r3, [r4]
 110:u8g2/csrc/u8x8_string.c **** }
 244              		.loc 1 110 1 view .LVU72
 245 0028 10BD     		pop	{r4, pc}
 246              	.LVL27:
 247              	.L22:
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 0
 250              		.cfi_restore 4
 251              		.cfi_restore 14
 252              		.loc 1 110 1 view .LVU73
 253 002a 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE2:
 257              		.section	.text.u8x8_DrawUTF8Line,"ax",%progbits
 258              		.align	1
 259              		.global	u8x8_DrawUTF8Line
 260              		.syntax unified
 261              		.thumb
 262              		.thumb_func
 263              		.fpu softvfp
 265              	u8x8_DrawUTF8Line:
 266              	.LVL28:
 267              	.LFB3:
 111:u8g2/csrc/u8x8_string.c **** 
 112:u8g2/csrc/u8x8_string.c **** /*
 113:u8g2/csrc/u8x8_string.c ****   Draw a string
 114:u8g2/csrc/u8x8_string.c ****   Extend the string to size "w"
 115:u8g2/csrc/u8x8_string.c ****   Center the string within "w"
 116:u8g2/csrc/u8x8_string.c ****   return the size of the string
 117:u8g2/csrc/u8x8_string.c **** 
 118:u8g2/csrc/u8x8_string.c **** */
 119:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_DrawUTF8Line(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 120:u8g2/csrc/u8x8_string.c **** {
 268              		.loc 1 120 1 is_stmt 1 view -0
 269              		.cfi_startproc
 270              		@ args = 4, pretend = 0, frame = 0
 271              		@ frame_needed = 0, uses_anonymous_args = 0
 272              		.loc 1 120 1 is_stmt 0 view .LVU75
 273 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 32
 276              		.cfi_offset 3, -32
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 8


 277              		.cfi_offset 4, -28
 278              		.cfi_offset 5, -24
 279              		.cfi_offset 6, -20
 280              		.cfi_offset 7, -16
 281              		.cfi_offset 8, -12
 282              		.cfi_offset 9, -8
 283              		.cfi_offset 14, -4
 284 0004 0546     		mov	r5, r0
 285 0006 0F46     		mov	r7, r1
 286 0008 1646     		mov	r6, r2
 287 000a 9846     		mov	r8, r3
 121:u8g2/csrc/u8x8_string.c ****   uint8_t d, lw;
 288              		.loc 1 121 3 is_stmt 1 view .LVU76
 122:u8g2/csrc/u8x8_string.c ****   uint8_t cx, dx;
 289              		.loc 1 122 3 view .LVU77
 123:u8g2/csrc/u8x8_string.c ****     
 124:u8g2/csrc/u8x8_string.c ****   d = 0;
 290              		.loc 1 124 3 view .LVU78
 291              	.LVL29:
 125:u8g2/csrc/u8x8_string.c ****   
 126:u8g2/csrc/u8x8_string.c ****   lw = u8x8_GetUTF8Len(u8x8, s);
 292              		.loc 1 126 3 view .LVU79
 293              		.loc 1 126 8 is_stmt 0 view .LVU80
 294 000c 0899     		ldr	r1, [sp, #32]
 295              	.LVL30:
 296              		.loc 1 126 8 view .LVU81
 297 000e FFF7FEFF 		bl	u8x8_GetUTF8Len
 298              	.LVL31:
 127:u8g2/csrc/u8x8_string.c ****   if ( lw < w )
 299              		.loc 1 127 3 is_stmt 1 view .LVU82
 300              		.loc 1 127 6 is_stmt 0 view .LVU83
 301 0012 4045     		cmp	r0, r8
 302 0014 04D2     		bcs	.L31
 128:u8g2/csrc/u8x8_string.c ****   {
 129:u8g2/csrc/u8x8_string.c ****     d = w;
 303              		.loc 1 129 5 is_stmt 1 view .LVU84
 304              	.LVL32:
 130:u8g2/csrc/u8x8_string.c ****     d -=lw;
 305              		.loc 1 130 5 view .LVU85
 306              		.loc 1 130 7 is_stmt 0 view .LVU86
 307 0016 A8EB0009 		sub	r9, r8, r0
 308              	.LVL33:
 131:u8g2/csrc/u8x8_string.c ****     d /= 2;
 309              		.loc 1 131 5 is_stmt 1 view .LVU87
 310              		.loc 1 131 7 is_stmt 0 view .LVU88
 311 001a C9F34609 		ubfx	r9, r9, #1, #7
 312              	.LVL34:
 313              		.loc 1 131 7 view .LVU89
 314 001e 01E0     		b	.L26
 315              	.LVL35:
 316              	.L31:
 124:u8g2/csrc/u8x8_string.c ****   
 317              		.loc 1 124 5 view .LVU90
 318 0020 4FF00009 		mov	r9, #0
 319              	.LVL36:
 320              	.L26:
 132:u8g2/csrc/u8x8_string.c ****   }
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 9


 133:u8g2/csrc/u8x8_string.c ****     
 134:u8g2/csrc/u8x8_string.c ****   cx = x;
 321              		.loc 1 134 3 is_stmt 1 view .LVU91
 135:u8g2/csrc/u8x8_string.c ****   dx = cx + d;
 322              		.loc 1 135 3 view .LVU92
 323              		.loc 1 135 6 is_stmt 0 view .LVU93
 324 0024 B944     		add	r9, r9, r7
 325              	.LVL37:
 326              		.loc 1 135 6 view .LVU94
 327 0026 5FFA89F9 		uxtb	r9, r9
 328              	.LVL38:
 136:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 329              		.loc 1 136 3 is_stmt 1 view .LVU95
 134:u8g2/csrc/u8x8_string.c ****   dx = cx + d;
 330              		.loc 1 134 6 is_stmt 0 view .LVU96
 331 002a 3C46     		mov	r4, r7
 332              	.LVL39:
 333              	.L27:
 334              		.loc 1 136 8 view .LVU97
 335 002c 4C45     		cmp	r4, r9
 336 002e 08D2     		bcs	.L33
 137:u8g2/csrc/u8x8_string.c ****   {
 138:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 337              		.loc 1 138 5 is_stmt 1 view .LVU98
 338 0030 114B     		ldr	r3, .L34
 339 0032 3246     		mov	r2, r6
 340 0034 2146     		mov	r1, r4
 341 0036 2846     		mov	r0, r5
 342 0038 FFF7FEFF 		bl	u8x8_DrawUTF8
 343              	.LVL40:
 139:u8g2/csrc/u8x8_string.c ****     cx++;
 344              		.loc 1 139 5 view .LVU99
 345              		.loc 1 139 7 is_stmt 0 view .LVU100
 346 003c 0134     		adds	r4, r4, #1
 347              	.LVL41:
 348              		.loc 1 139 7 view .LVU101
 349 003e E4B2     		uxtb	r4, r4
 350              	.LVL42:
 351              		.loc 1 139 7 view .LVU102
 352 0040 F4E7     		b	.L27
 353              	.L33:
 140:u8g2/csrc/u8x8_string.c ****   }
 141:u8g2/csrc/u8x8_string.c ****   cx += u8x8_DrawUTF8(u8x8, cx, y, s);
 354              		.loc 1 141 3 is_stmt 1 view .LVU103
 355              		.loc 1 141 9 is_stmt 0 view .LVU104
 356 0042 089B     		ldr	r3, [sp, #32]
 357 0044 3246     		mov	r2, r6
 358 0046 2146     		mov	r1, r4
 359 0048 2846     		mov	r0, r5
 360 004a FFF7FEFF 		bl	u8x8_DrawUTF8
 361              	.LVL43:
 362              		.loc 1 141 6 view .LVU105
 363 004e 0444     		add	r4, r4, r0
 364              	.LVL44:
 365              		.loc 1 141 6 view .LVU106
 366 0050 E4B2     		uxtb	r4, r4
 367              	.LVL45:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 10


 142:u8g2/csrc/u8x8_string.c ****   dx = x + w;
 368              		.loc 1 142 3 is_stmt 1 view .LVU107
 369              		.loc 1 142 6 is_stmt 0 view .LVU108
 370 0052 B844     		add	r8, r8, r7
 371 0054 5FFA88F8 		uxtb	r8, r8
 372              	.LVL46:
 143:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 373              		.loc 1 143 3 is_stmt 1 view .LVU109
 374              		.loc 1 143 8 is_stmt 0 view .LVU110
 375 0058 07E0     		b	.L29
 376              	.L30:
 144:u8g2/csrc/u8x8_string.c ****   {
 145:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 377              		.loc 1 145 5 is_stmt 1 view .LVU111
 378 005a 074B     		ldr	r3, .L34
 379 005c 3246     		mov	r2, r6
 380 005e 2146     		mov	r1, r4
 381 0060 2846     		mov	r0, r5
 382 0062 FFF7FEFF 		bl	u8x8_DrawUTF8
 383              	.LVL47:
 146:u8g2/csrc/u8x8_string.c ****     cx++;
 384              		.loc 1 146 5 view .LVU112
 385              		.loc 1 146 7 is_stmt 0 view .LVU113
 386 0066 0134     		adds	r4, r4, #1
 387              	.LVL48:
 388              		.loc 1 146 7 view .LVU114
 389 0068 E4B2     		uxtb	r4, r4
 390              	.LVL49:
 391              	.L29:
 143:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 392              		.loc 1 143 8 view .LVU115
 393 006a 4445     		cmp	r4, r8
 394 006c F5D3     		bcc	.L30
 147:u8g2/csrc/u8x8_string.c ****   }
 148:u8g2/csrc/u8x8_string.c ****   cx -= x;
 395              		.loc 1 148 3 is_stmt 1 view .LVU116
 396              		.loc 1 148 6 is_stmt 0 view .LVU117
 397 006e E01B     		subs	r0, r4, r7
 398              	.LVL50:
 149:u8g2/csrc/u8x8_string.c ****   return cx;
 399              		.loc 1 149 3 is_stmt 1 view .LVU118
 150:u8g2/csrc/u8x8_string.c **** }
 400              		.loc 1 150 1 is_stmt 0 view .LVU119
 401 0070 C0B2     		uxtb	r0, r0
 402              		.loc 1 150 1 view .LVU120
 403 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 404              	.LVL51:
 405              	.L35:
 406              		.loc 1 150 1 view .LVU121
 407 0076 00BF     		.align	2
 408              	.L34:
 409 0078 00000000 		.word	.LC0
 410              		.cfi_endproc
 411              	.LFE3:
 413              		.section	.text.u8x8_DrawUTF8Lines,"ax",%progbits
 414              		.align	1
 415              		.global	u8x8_DrawUTF8Lines
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 11


 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu softvfp
 421              	u8x8_DrawUTF8Lines:
 422              	.LVL52:
 423              	.LFB4:
 151:u8g2/csrc/u8x8_string.c **** 
 152:u8g2/csrc/u8x8_string.c **** /*
 153:u8g2/csrc/u8x8_string.c ****   draw several lines at position x,y.
 154:u8g2/csrc/u8x8_string.c ****   lines are stored in s and must be separated with '\n'.
 155:u8g2/csrc/u8x8_string.c ****   lines can be centered with respect to "w" 
 156:u8g2/csrc/u8x8_string.c ****   if s == NULL nothing is drawn and 0 is returned
 157:u8g2/csrc/u8x8_string.c ****   returns the number of lines in s
 158:u8g2/csrc/u8x8_string.c **** */
 159:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_DrawUTF8Lines(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 160:u8g2/csrc/u8x8_string.c **** {
 424              		.loc 1 160 1 is_stmt 1 view -0
 425              		.cfi_startproc
 426              		@ args = 4, pretend = 0, frame = 0
 427              		@ frame_needed = 0, uses_anonymous_args = 0
 428              		.loc 1 160 1 is_stmt 0 view .LVU123
 429 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 430              	.LCFI8:
 431              		.cfi_def_cfa_offset 28
 432              		.cfi_offset 4, -28
 433              		.cfi_offset 5, -24
 434              		.cfi_offset 6, -20
 435              		.cfi_offset 7, -16
 436              		.cfi_offset 8, -12
 437              		.cfi_offset 9, -8
 438              		.cfi_offset 14, -4
 439 0004 83B0     		sub	sp, sp, #12
 440              	.LCFI9:
 441              		.cfi_def_cfa_offset 40
 442 0006 8146     		mov	r9, r0
 443 0008 8846     		mov	r8, r1
 444 000a 1546     		mov	r5, r2
 445 000c 1F46     		mov	r7, r3
 161:u8g2/csrc/u8x8_string.c ****   uint8_t i;
 446              		.loc 1 161 3 is_stmt 1 view .LVU124
 162:u8g2/csrc/u8x8_string.c ****   uint8_t cnt;
 447              		.loc 1 162 3 view .LVU125
 163:u8g2/csrc/u8x8_string.c ****   cnt = u8x8_GetStringLineCnt(s);
 448              		.loc 1 163 3 view .LVU126
 449              		.loc 1 163 9 is_stmt 0 view .LVU127
 450 000e 0A98     		ldr	r0, [sp, #40]
 451              	.LVL53:
 452              		.loc 1 163 9 view .LVU128
 453 0010 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 454              	.LVL54:
 455              		.loc 1 163 9 view .LVU129
 456 0014 0646     		mov	r6, r0
 457              	.LVL55:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 458              		.loc 1 164 3 is_stmt 1 view .LVU130
 459              		.loc 1 164 10 is_stmt 0 view .LVU131
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 12


 460 0016 0024     		movs	r4, #0
 461              	.LVL56:
 462              	.L37:
 463              		.loc 1 164 3 discriminator 1 view .LVU132
 464 0018 B442     		cmp	r4, r6
 465 001a 0FD2     		bcs	.L40
 165:u8g2/csrc/u8x8_string.c ****   {
 166:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8Line(u8x8, x, y, w, u8x8_GetStringLineStart(i, s));
 466              		.loc 1 166 5 is_stmt 1 discriminator 3 view .LVU133
 467 001c 0A99     		ldr	r1, [sp, #40]
 468 001e 2046     		mov	r0, r4
 469 0020 FFF7FEFF 		bl	u8x8_GetStringLineStart
 470              	.LVL57:
 471 0024 0090     		str	r0, [sp]
 472 0026 3B46     		mov	r3, r7
 473 0028 2A46     		mov	r2, r5
 474 002a 4146     		mov	r1, r8
 475 002c 4846     		mov	r0, r9
 476 002e FFF7FEFF 		bl	u8x8_DrawUTF8Line
 477              	.LVL58:
 167:u8g2/csrc/u8x8_string.c ****     y++;
 478              		.loc 1 167 5 discriminator 3 view .LVU134
 479              		.loc 1 167 6 is_stmt 0 discriminator 3 view .LVU135
 480 0032 0135     		adds	r5, r5, #1
 481              	.LVL59:
 482              		.loc 1 167 6 discriminator 3 view .LVU136
 483 0034 EDB2     		uxtb	r5, r5
 484              	.LVL60:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 485              		.loc 1 164 25 discriminator 3 view .LVU137
 486 0036 0134     		adds	r4, r4, #1
 487              	.LVL61:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 488              		.loc 1 164 25 discriminator 3 view .LVU138
 489 0038 E4B2     		uxtb	r4, r4
 490              	.LVL62:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 491              		.loc 1 164 25 discriminator 3 view .LVU139
 492 003a EDE7     		b	.L37
 493              	.L40:
 168:u8g2/csrc/u8x8_string.c ****   }
 169:u8g2/csrc/u8x8_string.c ****   return cnt;
 494              		.loc 1 169 3 is_stmt 1 view .LVU140
 170:u8g2/csrc/u8x8_string.c **** }
 495              		.loc 1 170 1 is_stmt 0 view .LVU141
 496 003c 3046     		mov	r0, r6
 497 003e 03B0     		add	sp, sp, #12
 498              	.LCFI10:
 499              		.cfi_def_cfa_offset 28
 500              		@ sp needed
 501 0040 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 502              		.loc 1 170 1 view .LVU142
 503              		.cfi_endproc
 504              	.LFE4:
 506              		.section	.rodata.u8x8_DrawUTF8Line.str1.4,"aMS",%progbits,1
 507              		.align	2
 508              	.LC0:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 13


 509 0000 2000     		.ascii	" \000"
 510              		.text
 511              	.Letext0:
 512              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 513              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 514              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_string.c
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:16     .text.u8x8_GetStringLineCnt:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:24     .text.u8x8_GetStringLineCnt:00000000 u8x8_GetStringLineCnt
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:80     .text.u8x8_GetStringLineStart:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:87     .text.u8x8_GetStringLineStart:00000000 u8x8_GetStringLineStart
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:178    .text.u8x8_CopyStringLine:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:185    .text.u8x8_CopyStringLine:00000000 u8x8_CopyStringLine
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:258    .text.u8x8_DrawUTF8Line:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:265    .text.u8x8_DrawUTF8Line:00000000 u8x8_DrawUTF8Line
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:409    .text.u8x8_DrawUTF8Line:00000078 $d
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:414    .text.u8x8_DrawUTF8Lines:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:421    .text.u8x8_DrawUTF8Lines:00000000 u8x8_DrawUTF8Lines
C:\Users\behun\AppData\Local\Temp\ccmiSpuy.s:507    .rodata.u8x8_DrawUTF8Line.str1.4:00000000 $d

UNDEFINED SYMBOLS
u8x8_GetUTF8Len
u8x8_DrawUTF8
