ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_string.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_GetStringLineCnt,"ax",%progbits
  16              		.align	1
  17              		.global	u8x8_GetStringLineCnt
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8x8_GetStringLineCnt:
  24              	.LFB0:
  25              		.file 1 "u8g2/csrc/u8x8_string.c"
   1:u8g2/csrc/u8x8_string.c **** /*
   2:u8g2/csrc/u8x8_string.c **** 
   3:u8g2/csrc/u8x8_string.c ****   u8x8_string.c
   4:u8g2/csrc/u8x8_string.c ****   
   5:u8g2/csrc/u8x8_string.c ****   string line procedures
   6:u8g2/csrc/u8x8_string.c ****   
   7:u8g2/csrc/u8x8_string.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:u8g2/csrc/u8x8_string.c **** 
   9:u8g2/csrc/u8x8_string.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:u8g2/csrc/u8x8_string.c ****   All rights reserved.
  11:u8g2/csrc/u8x8_string.c **** 
  12:u8g2/csrc/u8x8_string.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g2/csrc/u8x8_string.c ****   are permitted provided that the following conditions are met:
  14:u8g2/csrc/u8x8_string.c **** 
  15:u8g2/csrc/u8x8_string.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g2/csrc/u8x8_string.c ****     of conditions and the following disclaimer.
  17:u8g2/csrc/u8x8_string.c ****     
  18:u8g2/csrc/u8x8_string.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g2/csrc/u8x8_string.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g2/csrc/u8x8_string.c ****     materials provided with the distribution.
  21:u8g2/csrc/u8x8_string.c **** 
  22:u8g2/csrc/u8x8_string.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g2/csrc/u8x8_string.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g2/csrc/u8x8_string.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g2/csrc/u8x8_string.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g2/csrc/u8x8_string.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g2/csrc/u8x8_string.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g2/csrc/u8x8_string.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g2/csrc/u8x8_string.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g2/csrc/u8x8_string.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g2/csrc/u8x8_string.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  32:u8g2/csrc/u8x8_string.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g2/csrc/u8x8_string.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 2


  34:u8g2/csrc/u8x8_string.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.    
  35:u8g2/csrc/u8x8_string.c **** 
  36:u8g2/csrc/u8x8_string.c **** */
  37:u8g2/csrc/u8x8_string.c **** 
  38:u8g2/csrc/u8x8_string.c **** #include "u8x8.h"
  39:u8g2/csrc/u8x8_string.c **** 
  40:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_GetStringLineCnt(const char *str)
  41:u8g2/csrc/u8x8_string.c **** {
  26              		.loc 1 41 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  42:u8g2/csrc/u8x8_string.c ****   char e;
  43:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
  44:u8g2/csrc/u8x8_string.c ****   if ( str == NULL )
  32              		.loc 1 44 0
  33 0000 0346     		mov	r3, r0
  34 0002 40B1     		cbz	r0, .L5
  43:u8g2/csrc/u8x8_string.c ****   if ( str == NULL )
  35              		.loc 1 43 0
  36 0004 0120     		movs	r0, #1
  37              	.LVL1:
  38              	.L3:
  45:u8g2/csrc/u8x8_string.c ****     return 0;
  46:u8g2/csrc/u8x8_string.c ****   for(;;)
  47:u8g2/csrc/u8x8_string.c ****   {
  48:u8g2/csrc/u8x8_string.c ****     e = *str;
  39              		.loc 1 48 0
  40 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
  41              	.LVL2:
  49:u8g2/csrc/u8x8_string.c ****     if ( e == '\0' )
  42              		.loc 1 49 0
  43 0008 32B1     		cbz	r2, .L2
  50:u8g2/csrc/u8x8_string.c ****       break;
  51:u8g2/csrc/u8x8_string.c ****     str++;
  44              		.loc 1 51 0
  45 000a 0133     		adds	r3, r3, #1
  46              	.LVL3:
  52:u8g2/csrc/u8x8_string.c ****     if ( e == '\n' )
  47              		.loc 1 52 0
  48 000c 0A2A     		cmp	r2, #10
  49 000e FAD1     		bne	.L3
  53:u8g2/csrc/u8x8_string.c ****       line_cnt++;
  50              		.loc 1 53 0
  51 0010 0130     		adds	r0, r0, #1
  52              	.LVL4:
  53 0012 C0B2     		uxtb	r0, r0
  54              	.LVL5:
  55 0014 F7E7     		b	.L3
  56              	.LVL6:
  57              	.L5:
  45:u8g2/csrc/u8x8_string.c ****   for(;;)
  58              		.loc 1 45 0
  59 0016 0020     		movs	r0, #0
  60              	.LVL7:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 3


  61              	.L2:
  54:u8g2/csrc/u8x8_string.c ****   }
  55:u8g2/csrc/u8x8_string.c ****   return line_cnt;
  56:u8g2/csrc/u8x8_string.c **** }
  62              		.loc 1 56 0
  63 0018 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE0:
  67              		.section	.text.u8x8_GetStringLineStart,"ax",%progbits
  68              		.align	1
  69              		.global	u8x8_GetStringLineStart
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu softvfp
  75              	u8x8_GetStringLineStart:
  76              	.LFB1:
  57:u8g2/csrc/u8x8_string.c **** 
  58:u8g2/csrc/u8x8_string.c **** 
  59:u8g2/csrc/u8x8_string.c **** /*
  60:u8g2/csrc/u8x8_string.c ****     Assumes strings, separated by '\n' in "str".
  61:u8g2/csrc/u8x8_string.c ****     Returns the string at index "line_idx". First strng has line_idx = 0
  62:u8g2/csrc/u8x8_string.c ****     Example:
  63:u8g2/csrc/u8x8_string.c ****       Returns "xyz" for line_idx = 1 with str = "abc\nxyz"
  64:u8g2/csrc/u8x8_string.c ****     Support both UTF8 and normal strings.
  65:u8g2/csrc/u8x8_string.c **** */
  66:u8g2/csrc/u8x8_string.c **** const char *u8x8_GetStringLineStart(uint8_t line_idx, const char *str )
  67:u8g2/csrc/u8x8_string.c **** {
  77              		.loc 1 67 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82              	.LVL8:
  68:u8g2/csrc/u8x8_string.c ****   char e;
  69:u8g2/csrc/u8x8_string.c ****   uint8_t line_cnt = 1;
  70:u8g2/csrc/u8x8_string.c ****   
  71:u8g2/csrc/u8x8_string.c ****   if ( line_idx == 0 )
  83              		.loc 1 71 0
  84 0000 60B1     		cbz	r0, .L10
  67:u8g2/csrc/u8x8_string.c ****   char e;
  85              		.loc 1 67 0
  86 0002 10B4     		push	{r4}
  87              	.LCFI0:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 4, -4
  90 0004 0446     		mov	r4, r0
  69:u8g2/csrc/u8x8_string.c ****   
  91              		.loc 1 69 0
  92 0006 0122     		movs	r2, #1
  93              	.LVL9:
  94              	.L8:
  72:u8g2/csrc/u8x8_string.c ****     return str;
  73:u8g2/csrc/u8x8_string.c **** 
  74:u8g2/csrc/u8x8_string.c ****   for(;;)
  75:u8g2/csrc/u8x8_string.c ****   {
  76:u8g2/csrc/u8x8_string.c ****     e = *str;
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 4


  95              		.loc 1 76 0
  96 0008 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
  97              	.LVL10:
  77:u8g2/csrc/u8x8_string.c ****     if ( e == '\0' )
  98              		.loc 1 77 0
  99 000a 4BB1     		cbz	r3, .L11
  78:u8g2/csrc/u8x8_string.c ****       break;
  79:u8g2/csrc/u8x8_string.c ****     str++;
 100              		.loc 1 79 0
 101 000c 0131     		adds	r1, r1, #1
 102              	.LVL11:
  80:u8g2/csrc/u8x8_string.c ****     if ( e == '\n' )
 103              		.loc 1 80 0
 104 000e 0A2B     		cmp	r3, #10
 105 0010 FAD1     		bne	.L8
  81:u8g2/csrc/u8x8_string.c ****     {
  82:u8g2/csrc/u8x8_string.c ****       if ( line_cnt == line_idx )
 106              		.loc 1 82 0
 107 0012 A242     		cmp	r2, r4
 108 0014 07D0     		beq	.L12
  83:u8g2/csrc/u8x8_string.c **** 	return str;
  84:u8g2/csrc/u8x8_string.c ****       line_cnt++;
 109              		.loc 1 84 0
 110 0016 0132     		adds	r2, r2, #1
 111              	.LVL12:
 112 0018 D2B2     		uxtb	r2, r2
 113              	.LVL13:
 114 001a F5E7     		b	.L8
 115              	.LVL14:
 116              	.L10:
 117              	.LCFI1:
 118              		.cfi_def_cfa_offset 0
 119              		.cfi_restore 4
  72:u8g2/csrc/u8x8_string.c **** 
 120              		.loc 1 72 0
 121 001c 0846     		mov	r0, r1
 122              	.LVL15:
  85:u8g2/csrc/u8x8_string.c ****     }
  86:u8g2/csrc/u8x8_string.c ****   }
  87:u8g2/csrc/u8x8_string.c ****   return NULL;	/* line not found */
  88:u8g2/csrc/u8x8_string.c **** }
 123              		.loc 1 88 0
 124 001e 7047     		bx	lr
 125              	.LVL16:
 126              	.L11:
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 4
 129              		.cfi_offset 4, -4
  87:u8g2/csrc/u8x8_string.c **** }
 130              		.loc 1 87 0
 131 0020 0020     		movs	r0, #0
 132              	.LVL17:
 133              	.L6:
 134              		.loc 1 88 0
 135 0022 10BC     		pop	{r4}
 136              	.LCFI3:
 137              		.cfi_remember_state
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 5


 138              		.cfi_restore 4
 139              		.cfi_def_cfa_offset 0
 140 0024 7047     		bx	lr
 141              	.LVL18:
 142              	.L12:
 143              	.LCFI4:
 144              		.cfi_restore_state
  83:u8g2/csrc/u8x8_string.c ****       line_cnt++;
 145              		.loc 1 83 0
 146 0026 0846     		mov	r0, r1
 147              	.LVL19:
 148 0028 FBE7     		b	.L6
 149              		.cfi_endproc
 150              	.LFE1:
 152              		.section	.text.u8x8_CopyStringLine,"ax",%progbits
 153              		.align	1
 154              		.global	u8x8_CopyStringLine
 155              		.syntax unified
 156              		.thumb
 157              		.thumb_func
 158              		.fpu softvfp
 160              	u8x8_CopyStringLine:
 161              	.LFB2:
  89:u8g2/csrc/u8x8_string.c **** 
  90:u8g2/csrc/u8x8_string.c **** /* copy until first '\n' or '\0' in str */
  91:u8g2/csrc/u8x8_string.c **** /* Important: There is no string overflow check, ensure */
  92:u8g2/csrc/u8x8_string.c **** /* that the destination buffer is large enough */
  93:u8g2/csrc/u8x8_string.c **** void u8x8_CopyStringLine(char *dest, uint8_t line_idx, const char *str)
  94:u8g2/csrc/u8x8_string.c **** {
 162              		.loc 1 94 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              	.LVL20:
  95:u8g2/csrc/u8x8_string.c ****   if ( dest == NULL )
 167              		.loc 1 95 0
 168 0000 98B1     		cbz	r0, .L22
  94:u8g2/csrc/u8x8_string.c ****   if ( dest == NULL )
 169              		.loc 1 94 0
 170 0002 10B5     		push	{r4, lr}
 171              	.LCFI5:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175 0004 0B46     		mov	r3, r1
 176 0006 0446     		mov	r4, r0
  96:u8g2/csrc/u8x8_string.c ****     return;
  97:u8g2/csrc/u8x8_string.c ****   str = u8x8_GetStringLineStart( line_idx, str );
 177              		.loc 1 97 0
 178 0008 1146     		mov	r1, r2
 179              	.LVL21:
 180 000a 1846     		mov	r0, r3
 181              	.LVL22:
 182 000c FFF7FEFF 		bl	u8x8_GetStringLineStart
 183              	.LVL23:
  98:u8g2/csrc/u8x8_string.c ****   if ( str != NULL )
 184              		.loc 1 98 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 6


 185 0010 0246     		mov	r2, r0
 186 0012 38B1     		cbz	r0, .L19
 187              	.LVL24:
 188              	.L20:
  99:u8g2/csrc/u8x8_string.c ****   {
 100:u8g2/csrc/u8x8_string.c ****     for(;;)
 101:u8g2/csrc/u8x8_string.c ****     {
 102:u8g2/csrc/u8x8_string.c ****       if ( *str == '\n' || *str == '\0' )
 189              		.loc 1 102 0
 190 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 191 0016 0A2B     		cmp	r3, #10
 192 0018 04D0     		beq	.L19
 193              		.loc 1 102 0 is_stmt 0 discriminator 1
 194 001a 1BB1     		cbz	r3, .L19
 103:u8g2/csrc/u8x8_string.c **** 	break;
 104:u8g2/csrc/u8x8_string.c ****       *dest = *str;
 195              		.loc 1 104 0 is_stmt 1
 196 001c 04F8013B 		strb	r3, [r4], #1
 197              	.LVL25:
 105:u8g2/csrc/u8x8_string.c ****       dest++;
 106:u8g2/csrc/u8x8_string.c ****       str++;
 198              		.loc 1 106 0
 199 0020 0132     		adds	r2, r2, #1
 200              	.LVL26:
 102:u8g2/csrc/u8x8_string.c **** 	break;
 201              		.loc 1 102 0
 202 0022 F7E7     		b	.L20
 203              	.L19:
 107:u8g2/csrc/u8x8_string.c ****     }
 108:u8g2/csrc/u8x8_string.c ****   }
 109:u8g2/csrc/u8x8_string.c ****   *dest = '\0';
 204              		.loc 1 109 0
 205 0024 0023     		movs	r3, #0
 206 0026 2370     		strb	r3, [r4]
 110:u8g2/csrc/u8x8_string.c **** }
 207              		.loc 1 110 0
 208 0028 10BD     		pop	{r4, pc}
 209              	.LVL27:
 210              	.L22:
 211              	.LCFI6:
 212              		.cfi_def_cfa_offset 0
 213              		.cfi_restore 4
 214              		.cfi_restore 14
 215 002a 7047     		bx	lr
 216              		.cfi_endproc
 217              	.LFE2:
 219              		.section	.text.u8x8_DrawUTF8Line,"ax",%progbits
 220              		.align	1
 221              		.global	u8x8_DrawUTF8Line
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	u8x8_DrawUTF8Line:
 228              	.LFB3:
 111:u8g2/csrc/u8x8_string.c **** 
 112:u8g2/csrc/u8x8_string.c **** /*
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 7


 113:u8g2/csrc/u8x8_string.c ****   Draw a string
 114:u8g2/csrc/u8x8_string.c ****   Extend the string to size "w"
 115:u8g2/csrc/u8x8_string.c ****   Center the string within "w"
 116:u8g2/csrc/u8x8_string.c ****   return the size of the string
 117:u8g2/csrc/u8x8_string.c **** 
 118:u8g2/csrc/u8x8_string.c **** */
 119:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_DrawUTF8Line(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 120:u8g2/csrc/u8x8_string.c **** {
 229              		.loc 1 120 0
 230              		.cfi_startproc
 231              		@ args = 4, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              	.LVL28:
 234 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 235              	.LCFI7:
 236              		.cfi_def_cfa_offset 32
 237              		.cfi_offset 3, -32
 238              		.cfi_offset 4, -28
 239              		.cfi_offset 5, -24
 240              		.cfi_offset 6, -20
 241              		.cfi_offset 7, -16
 242              		.cfi_offset 8, -12
 243              		.cfi_offset 9, -8
 244              		.cfi_offset 14, -4
 245 0004 0546     		mov	r5, r0
 246 0006 0F46     		mov	r7, r1
 247 0008 1646     		mov	r6, r2
 248 000a 9846     		mov	r8, r3
 249              	.LVL29:
 121:u8g2/csrc/u8x8_string.c ****   uint8_t d, lw;
 122:u8g2/csrc/u8x8_string.c ****   uint8_t cx, dx;
 123:u8g2/csrc/u8x8_string.c ****     
 124:u8g2/csrc/u8x8_string.c ****   d = 0;
 125:u8g2/csrc/u8x8_string.c ****   
 126:u8g2/csrc/u8x8_string.c ****   lw = u8x8_GetUTF8Len(u8x8, s);
 250              		.loc 1 126 0
 251 000c 0899     		ldr	r1, [sp, #32]
 252              	.LVL30:
 253 000e FFF7FEFF 		bl	u8x8_GetUTF8Len
 254              	.LVL31:
 127:u8g2/csrc/u8x8_string.c ****   if ( lw < w )
 255              		.loc 1 127 0
 256 0012 4045     		cmp	r0, r8
 257 0014 08D2     		bcs	.L31
 258              	.LVL32:
 128:u8g2/csrc/u8x8_string.c ****   {
 129:u8g2/csrc/u8x8_string.c ****     d = w;
 130:u8g2/csrc/u8x8_string.c ****     d -=lw;
 259              		.loc 1 130 0
 260 0016 A8EB0009 		sub	r9, r8, r0
 261              	.LVL33:
 131:u8g2/csrc/u8x8_string.c ****     d /= 2;
 262              		.loc 1 131 0
 263 001a C9F34609 		ubfx	r9, r9, #1, #7
 264              	.LVL34:
 265              	.L26:
 132:u8g2/csrc/u8x8_string.c ****   }
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 8


 133:u8g2/csrc/u8x8_string.c ****     
 134:u8g2/csrc/u8x8_string.c ****   cx = x;
 135:u8g2/csrc/u8x8_string.c ****   dx = cx + d;
 266              		.loc 1 135 0
 267 001e B944     		add	r9, r9, r7
 268              	.LVL35:
 269 0020 5FFA89F9 		uxtb	r9, r9
 270              	.LVL36:
 134:u8g2/csrc/u8x8_string.c ****   dx = cx + d;
 271              		.loc 1 134 0
 272 0024 3C46     		mov	r4, r7
 136:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 273              		.loc 1 136 0
 274 0026 0AE0     		b	.L27
 275              	.LVL37:
 276              	.L31:
 124:u8g2/csrc/u8x8_string.c ****   
 277              		.loc 1 124 0
 278 0028 4FF00009 		mov	r9, #0
 279 002c F7E7     		b	.L26
 280              	.LVL38:
 281              	.L28:
 137:u8g2/csrc/u8x8_string.c ****   {
 138:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 282              		.loc 1 138 0
 283 002e 124B     		ldr	r3, .L33
 284 0030 3246     		mov	r2, r6
 285 0032 2146     		mov	r1, r4
 286 0034 2846     		mov	r0, r5
 287 0036 FFF7FEFF 		bl	u8x8_DrawUTF8
 288              	.LVL39:
 139:u8g2/csrc/u8x8_string.c ****     cx++;
 289              		.loc 1 139 0
 290 003a 0134     		adds	r4, r4, #1
 291              	.LVL40:
 292 003c E4B2     		uxtb	r4, r4
 293              	.LVL41:
 294              	.L27:
 136:u8g2/csrc/u8x8_string.c ****   {
 295              		.loc 1 136 0
 296 003e 4C45     		cmp	r4, r9
 297 0040 F5D3     		bcc	.L28
 140:u8g2/csrc/u8x8_string.c ****   }
 141:u8g2/csrc/u8x8_string.c ****   cx += u8x8_DrawUTF8(u8x8, cx, y, s);
 298              		.loc 1 141 0
 299 0042 089B     		ldr	r3, [sp, #32]
 300 0044 3246     		mov	r2, r6
 301 0046 2146     		mov	r1, r4
 302 0048 2846     		mov	r0, r5
 303 004a FFF7FEFF 		bl	u8x8_DrawUTF8
 304              	.LVL42:
 305 004e 0444     		add	r4, r4, r0
 306              	.LVL43:
 307 0050 E4B2     		uxtb	r4, r4
 308              	.LVL44:
 142:u8g2/csrc/u8x8_string.c ****   dx = x + w;
 309              		.loc 1 142 0
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 9


 310 0052 B844     		add	r8, r8, r7
 311 0054 5FFA88F8 		uxtb	r8, r8
 312              	.LVL45:
 143:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 313              		.loc 1 143 0
 314 0058 07E0     		b	.L29
 315              	.L30:
 144:u8g2/csrc/u8x8_string.c ****   {
 145:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8(u8x8, cx, y, " ");
 316              		.loc 1 145 0
 317 005a 074B     		ldr	r3, .L33
 318 005c 3246     		mov	r2, r6
 319 005e 2146     		mov	r1, r4
 320 0060 2846     		mov	r0, r5
 321 0062 FFF7FEFF 		bl	u8x8_DrawUTF8
 322              	.LVL46:
 146:u8g2/csrc/u8x8_string.c ****     cx++;
 323              		.loc 1 146 0
 324 0066 0134     		adds	r4, r4, #1
 325              	.LVL47:
 326 0068 E4B2     		uxtb	r4, r4
 327              	.LVL48:
 328              	.L29:
 143:u8g2/csrc/u8x8_string.c ****   while( cx < dx )
 329              		.loc 1 143 0
 330 006a 4445     		cmp	r4, r8
 331 006c F5D3     		bcc	.L30
 147:u8g2/csrc/u8x8_string.c ****   }
 148:u8g2/csrc/u8x8_string.c ****   cx -= x;
 332              		.loc 1 148 0
 333 006e E01B     		subs	r0, r4, r7
 334              	.LVL49:
 149:u8g2/csrc/u8x8_string.c ****   return cx;
 150:u8g2/csrc/u8x8_string.c **** }
 335              		.loc 1 150 0
 336 0070 C0B2     		uxtb	r0, r0
 337 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 338              	.LVL50:
 339              	.L34:
 340 0076 00BF     		.align	2
 341              	.L33:
 342 0078 00000000 		.word	.LC0
 343              		.cfi_endproc
 344              	.LFE3:
 346              		.section	.text.u8x8_DrawUTF8Lines,"ax",%progbits
 347              		.align	1
 348              		.global	u8x8_DrawUTF8Lines
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 352              		.fpu softvfp
 354              	u8x8_DrawUTF8Lines:
 355              	.LFB4:
 151:u8g2/csrc/u8x8_string.c **** 
 152:u8g2/csrc/u8x8_string.c **** /*
 153:u8g2/csrc/u8x8_string.c ****   draw several lines at position x,y.
 154:u8g2/csrc/u8x8_string.c ****   lines are stored in s and must be separated with '\n'.
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 10


 155:u8g2/csrc/u8x8_string.c ****   lines can be centered with respect to "w" 
 156:u8g2/csrc/u8x8_string.c ****   if s == NULL nothing is drawn and 0 is returned
 157:u8g2/csrc/u8x8_string.c ****   returns the number of lines in s
 158:u8g2/csrc/u8x8_string.c **** */
 159:u8g2/csrc/u8x8_string.c **** uint8_t u8x8_DrawUTF8Lines(u8x8_t *u8x8, uint8_t x, uint8_t y, uint8_t w, const char *s)
 160:u8g2/csrc/u8x8_string.c **** {
 356              		.loc 1 160 0
 357              		.cfi_startproc
 358              		@ args = 4, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              	.LVL51:
 361 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 362              	.LCFI8:
 363              		.cfi_def_cfa_offset 28
 364              		.cfi_offset 4, -28
 365              		.cfi_offset 5, -24
 366              		.cfi_offset 6, -20
 367              		.cfi_offset 7, -16
 368              		.cfi_offset 8, -12
 369              		.cfi_offset 9, -8
 370              		.cfi_offset 14, -4
 371 0004 83B0     		sub	sp, sp, #12
 372              	.LCFI9:
 373              		.cfi_def_cfa_offset 40
 374 0006 8146     		mov	r9, r0
 375 0008 8846     		mov	r8, r1
 376 000a 1546     		mov	r5, r2
 377 000c 1F46     		mov	r7, r3
 161:u8g2/csrc/u8x8_string.c ****   uint8_t i;
 162:u8g2/csrc/u8x8_string.c ****   uint8_t cnt;
 163:u8g2/csrc/u8x8_string.c ****   cnt = u8x8_GetStringLineCnt(s);
 378              		.loc 1 163 0
 379 000e 0A98     		ldr	r0, [sp, #40]
 380              	.LVL52:
 381 0010 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 382              	.LVL53:
 383 0014 0646     		mov	r6, r0
 384              	.LVL54:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 385              		.loc 1 164 0
 386 0016 0024     		movs	r4, #0
 387 0018 0EE0     		b	.L36
 388              	.LVL55:
 389              	.L37:
 165:u8g2/csrc/u8x8_string.c ****   {
 166:u8g2/csrc/u8x8_string.c ****     u8x8_DrawUTF8Line(u8x8, x, y, w, u8x8_GetStringLineStart(i, s));
 390              		.loc 1 166 0 discriminator 3
 391 001a 0A99     		ldr	r1, [sp, #40]
 392 001c 2046     		mov	r0, r4
 393 001e FFF7FEFF 		bl	u8x8_GetStringLineStart
 394              	.LVL56:
 395 0022 0090     		str	r0, [sp]
 396 0024 3B46     		mov	r3, r7
 397 0026 2A46     		mov	r2, r5
 398 0028 4146     		mov	r1, r8
 399 002a 4846     		mov	r0, r9
 400 002c FFF7FEFF 		bl	u8x8_DrawUTF8Line
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 11


 401              	.LVL57:
 167:u8g2/csrc/u8x8_string.c ****     y++;
 402              		.loc 1 167 0 discriminator 3
 403 0030 0135     		adds	r5, r5, #1
 404              	.LVL58:
 405 0032 EDB2     		uxtb	r5, r5
 406              	.LVL59:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 407              		.loc 1 164 0 discriminator 3
 408 0034 0134     		adds	r4, r4, #1
 409              	.LVL60:
 410 0036 E4B2     		uxtb	r4, r4
 411              	.LVL61:
 412              	.L36:
 164:u8g2/csrc/u8x8_string.c ****   for( i = 0; i < cnt; i++ )
 413              		.loc 1 164 0 is_stmt 0 discriminator 1
 414 0038 B442     		cmp	r4, r6
 415 003a EED3     		bcc	.L37
 168:u8g2/csrc/u8x8_string.c ****   }
 169:u8g2/csrc/u8x8_string.c ****   return cnt;
 170:u8g2/csrc/u8x8_string.c **** }
 416              		.loc 1 170 0 is_stmt 1
 417 003c 3046     		mov	r0, r6
 418 003e 03B0     		add	sp, sp, #12
 419              	.LCFI10:
 420              		.cfi_def_cfa_offset 28
 421              		@ sp needed
 422 0040 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 423              		.cfi_endproc
 424              	.LFE4:
 426              		.section	.rodata.u8x8_DrawUTF8Line.str1.4,"aMS",%progbits,1
 427              		.align	2
 428              	.LC0:
 429 0000 2000     		.ascii	" \000"
 430              		.text
 431              	.Letext0:
 432              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 433              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 434              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 u8x8_string.c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:16     .text.u8x8_GetStringLineCnt:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:23     .text.u8x8_GetStringLineCnt:0000000000000000 u8x8_GetStringLineCnt
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:68     .text.u8x8_GetStringLineStart:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:75     .text.u8x8_GetStringLineStart:0000000000000000 u8x8_GetStringLineStart
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:153    .text.u8x8_CopyStringLine:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:160    .text.u8x8_CopyStringLine:0000000000000000 u8x8_CopyStringLine
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:220    .text.u8x8_DrawUTF8Line:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:227    .text.u8x8_DrawUTF8Line:0000000000000000 u8x8_DrawUTF8Line
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:342    .text.u8x8_DrawUTF8Line:0000000000000078 $d
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:347    .text.u8x8_DrawUTF8Lines:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:354    .text.u8x8_DrawUTF8Lines:0000000000000000 u8x8_DrawUTF8Lines
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccvl6sTW.s:427    .rodata.u8x8_DrawUTF8Line.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
u8x8_GetUTF8Len
u8x8_DrawUTF8
