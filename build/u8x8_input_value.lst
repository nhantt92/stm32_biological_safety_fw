ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_input_value.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_UserInterfaceInputValue,"ax",%progbits
  16              		.align	1
  17              		.global	u8x8_UserInterfaceInputValue
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	u8x8_UserInterfaceInputValue:
  24              	.LFB0:
  25              		.file 1 "u8g2/csrc/u8x8_input_value.c"
   1:u8g2/csrc/u8x8_input_value.c **** /*
   2:u8g2/csrc/u8x8_input_value.c **** 
   3:u8g2/csrc/u8x8_input_value.c ****   u8x8_input_value.c
   4:u8g2/csrc/u8x8_input_value.c ****   
   5:u8g2/csrc/u8x8_input_value.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8x8_input_value.c **** 
   7:u8g2/csrc/u8x8_input_value.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8x8_input_value.c ****   All rights reserved.
   9:u8g2/csrc/u8x8_input_value.c **** 
  10:u8g2/csrc/u8x8_input_value.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8x8_input_value.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8x8_input_value.c **** 
  13:u8g2/csrc/u8x8_input_value.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8x8_input_value.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8x8_input_value.c ****     
  16:u8g2/csrc/u8x8_input_value.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8x8_input_value.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8x8_input_value.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8x8_input_value.c **** 
  20:u8g2/csrc/u8x8_input_value.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8x8_input_value.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8x8_input_value.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8x8_input_value.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8x8_input_value.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8x8_input_value.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8x8_input_value.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8x8_input_value.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8x8_input_value.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8x8_input_value.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8x8_input_value.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8x8_input_value.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  32:u8g2/csrc/u8x8_input_value.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8x8_input_value.c ****   
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 2


  34:u8g2/csrc/u8x8_input_value.c **** */
  35:u8g2/csrc/u8x8_input_value.c **** 
  36:u8g2/csrc/u8x8_input_value.c **** #include "u8x8.h"
  37:u8g2/csrc/u8x8_input_value.c **** 
  38:u8g2/csrc/u8x8_input_value.c **** /*
  39:u8g2/csrc/u8x8_input_value.c ****   return:
  40:u8g2/csrc/u8x8_input_value.c ****     0: value is not changed (HOME/Break Button pressed)
  41:u8g2/csrc/u8x8_input_value.c ****     1: value has been updated
  42:u8g2/csrc/u8x8_input_value.c **** */
  43:u8g2/csrc/u8x8_input_value.c **** 
  44:u8g2/csrc/u8x8_input_value.c **** uint8_t u8x8_UserInterfaceInputValue(u8x8_t *u8x8, const char *title, const char *pre, uint8_t *val
  45:u8g2/csrc/u8x8_input_value.c **** {
  26              		.loc 1 45 0
  27              		.cfi_startproc
  28              		@ args = 16, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              	.LVL0:
  31 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 85B0     		sub	sp, sp, #20
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 56
  46 0006 0446     		mov	r4, r0
  47 0008 0391     		str	r1, [sp, #12]
  48 000a 0292     		str	r2, [sp, #8]
  49 000c 9B46     		mov	fp, r3
  50 000e 9DF83890 		ldrb	r9, [sp, #56]	@ zero_extendqisi2
  51 0012 9DF83C80 		ldrb	r8, [sp, #60]	@ zero_extendqisi2
  52 0016 9DF84060 		ldrb	r6, [sp, #64]	@ zero_extendqisi2
  46:u8g2/csrc/u8x8_input_value.c ****   uint8_t height;
  47:u8g2/csrc/u8x8_input_value.c ****   uint8_t y;
  48:u8g2/csrc/u8x8_input_value.c ****   uint8_t width;
  49:u8g2/csrc/u8x8_input_value.c ****   uint8_t x;
  50:u8g2/csrc/u8x8_input_value.c ****   uint8_t local_value = *value;
  53              		.loc 1 50 0
  54 001a 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
  55              	.LVL1:
  51:u8g2/csrc/u8x8_input_value.c ****   uint8_t r;
  52:u8g2/csrc/u8x8_input_value.c ****   uint8_t event;
  53:u8g2/csrc/u8x8_input_value.c **** 
  54:u8g2/csrc/u8x8_input_value.c ****   /* calculate overall height of the input value box */
  55:u8g2/csrc/u8x8_input_value.c ****   height = 1;	/* button line */
  56:u8g2/csrc/u8x8_input_value.c ****   height += u8x8_GetStringLineCnt(title);
  56              		.loc 1 56 0
  57 001c 0846     		mov	r0, r1
  58              	.LVL2:
  59 001e FFF7FEFF 		bl	u8x8_GetStringLineCnt
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 3


  60              	.LVL3:
  61 0022 0130     		adds	r0, r0, #1
  62 0024 C0B2     		uxtb	r0, r0
  63              	.LVL4:
  57:u8g2/csrc/u8x8_input_value.c ****   
  58:u8g2/csrc/u8x8_input_value.c ****   /* calculate offset from top */
  59:u8g2/csrc/u8x8_input_value.c ****   y = 0;
  60:u8g2/csrc/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
  64              		.loc 1 60 0
  65 0026 2368     		ldr	r3, [r4]
  66 0028 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
  67 002a 8342     		cmp	r3, r0
  68 002c 41D9     		bls	.L13
  69              	.LVL5:
  61:u8g2/csrc/u8x8_input_value.c ****   {
  62:u8g2/csrc/u8x8_input_value.c ****     y = u8x8_GetRows(u8x8);
  63:u8g2/csrc/u8x8_input_value.c ****     y -= height;
  70              		.loc 1 63 0
  71 002e 181A     		subs	r0, r3, r0
  72              	.LVL6:
  64:u8g2/csrc/u8x8_input_value.c ****     y /= 2;
  73              		.loc 1 64 0
  74 0030 C0F3460A 		ubfx	r10, r0, #1, #7
  75              	.LVL7:
  76              	.L2:
  65:u8g2/csrc/u8x8_input_value.c ****   }
  66:u8g2/csrc/u8x8_input_value.c ****   
  67:u8g2/csrc/u8x8_input_value.c ****   /* calculate offset from left for the label */
  68:u8g2/csrc/u8x8_input_value.c ****   x = 0;
  69:u8g2/csrc/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
  77              		.loc 1 69 0
  78 0034 0299     		ldr	r1, [sp, #8]
  79 0036 2046     		mov	r0, r4
  80 0038 FFF7FEFF 		bl	u8x8_GetUTF8Len
  81              	.LVL8:
  70:u8g2/csrc/u8x8_input_value.c ****   width += digits;
  82              		.loc 1 70 0
  83 003c 3044     		add	r0, r0, r6
  84              	.LVL9:
  85 003e C7B2     		uxtb	r7, r0
  86              	.LVL10:
  71:u8g2/csrc/u8x8_input_value.c ****   width += u8x8_GetUTF8Len(u8x8, post);
  87              		.loc 1 71 0
  88 0040 1199     		ldr	r1, [sp, #68]
  89 0042 2046     		mov	r0, r4
  90 0044 FFF7FEFF 		bl	u8x8_GetUTF8Len
  91              	.LVL11:
  92 0048 3844     		add	r0, r0, r7
  93 004a C0B2     		uxtb	r0, r0
  94              	.LVL12:
  72:u8g2/csrc/u8x8_input_value.c ****   if ( width < u8x8_GetCols(u8x8) )
  95              		.loc 1 72 0
  96 004c 2368     		ldr	r3, [r4]
  97 004e 1F7C     		ldrb	r7, [r3, #16]	@ zero_extendqisi2
  98 0050 8742     		cmp	r7, r0
  99 0052 31D9     		bls	.L14
 100              	.LVL13:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 4


  73:u8g2/csrc/u8x8_input_value.c ****   {
  74:u8g2/csrc/u8x8_input_value.c ****     x = u8x8_GetCols(u8x8);
  75:u8g2/csrc/u8x8_input_value.c ****     x -= width;
 101              		.loc 1 75 0
 102 0054 3F1A     		subs	r7, r7, r0
 103              	.LVL14:
  76:u8g2/csrc/u8x8_input_value.c ****     x /= 2;
 104              		.loc 1 76 0
 105 0056 C7F34607 		ubfx	r7, r7, #1, #7
 106              	.LVL15:
 107              	.L3:
  77:u8g2/csrc/u8x8_input_value.c ****   }
  78:u8g2/csrc/u8x8_input_value.c ****   
  79:u8g2/csrc/u8x8_input_value.c ****   /* render */
  80:u8g2/csrc/u8x8_input_value.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 108              		.loc 1 80 0
 109 005a 2046     		mov	r0, r4
 110              	.LVL16:
 111 005c FFF7FEFF 		bl	u8x8_ClearDisplay
 112              	.LVL17:
  81:u8g2/csrc/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);  
 113              		.loc 1 81 0
 114 0060 0021     		movs	r1, #0
 115 0062 E177     		strb	r1, [r4, #31]
  82:u8g2/csrc/u8x8_input_value.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title);
 116              		.loc 1 82 0
 117 0064 2368     		ldr	r3, [r4]
 118 0066 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 119 0068 039A     		ldr	r2, [sp, #12]
 120 006a 0092     		str	r2, [sp]
 121 006c 5246     		mov	r2, r10
 122 006e 2046     		mov	r0, r4
 123 0070 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 124              	.LVL18:
 125 0074 5044     		add	r0, r0, r10
 126 0076 5FFA80FA 		uxtb	r10, r0
 127              	.LVL19:
  83:u8g2/csrc/u8x8_input_value.c ****   x += u8x8_DrawUTF8(u8x8, x, y, pre);
 128              		.loc 1 83 0
 129 007a 029B     		ldr	r3, [sp, #8]
 130 007c 5246     		mov	r2, r10
 131 007e 3946     		mov	r1, r7
 132 0080 2046     		mov	r0, r4
 133 0082 FFF7FEFF 		bl	u8x8_DrawUTF8
 134              	.LVL20:
 135 0086 0744     		add	r7, r7, r0
 136              	.LVL21:
 137 0088 FFB2     		uxtb	r7, r7
 138              	.LVL22:
  84:u8g2/csrc/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x+digits, y, post);
 139              		.loc 1 84 0
 140 008a F119     		adds	r1, r6, r7
 141 008c 119B     		ldr	r3, [sp, #68]
 142 008e 5246     		mov	r2, r10
 143 0090 C9B2     		uxtb	r1, r1
 144 0092 2046     		mov	r0, r4
 145 0094 FFF7FEFF 		bl	u8x8_DrawUTF8
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 5


 146              	.LVL23:
  85:u8g2/csrc/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 1);
 147              		.loc 1 85 0
 148 0098 0123     		movs	r3, #1
 149 009a E377     		strb	r3, [r4, #31]
  86:u8g2/csrc/u8x8_input_value.c ****   
  87:u8g2/csrc/u8x8_input_value.c ****   /* event loop */
  88:u8g2/csrc/u8x8_input_value.c ****   u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 150              		.loc 1 88 0
 151 009c 3146     		mov	r1, r6
 152 009e 2846     		mov	r0, r5
 153 00a0 FFF7FEFF 		bl	u8x8_u8toa
 154              	.LVL24:
 155 00a4 0346     		mov	r3, r0
 156 00a6 5246     		mov	r2, r10
 157 00a8 3946     		mov	r1, r7
 158 00aa 2046     		mov	r0, r4
 159 00ac FFF7FEFF 		bl	u8x8_DrawUTF8
 160              	.LVL25:
 161 00b0 1AE0     		b	.L4
 162              	.LVL26:
 163              	.L13:
  59:u8g2/csrc/u8x8_input_value.c ****   if ( height < u8x8_GetRows(u8x8)  )
 164              		.loc 1 59 0
 165 00b2 4FF0000A 		mov	r10, #0
 166 00b6 BDE7     		b	.L2
 167              	.LVL27:
 168              	.L14:
  68:u8g2/csrc/u8x8_input_value.c ****   width = u8x8_GetUTF8Len(u8x8, pre);
 169              		.loc 1 68 0
 170 00b8 0027     		movs	r7, #0
 171 00ba CEE7     		b	.L3
 172              	.LVL28:
 173              	.L19:
  89:u8g2/csrc/u8x8_input_value.c ****   for(;;)
  90:u8g2/csrc/u8x8_input_value.c ****   {
  91:u8g2/csrc/u8x8_input_value.c ****     event = u8x8_GetMenuEvent(u8x8);
  92:u8g2/csrc/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
  93:u8g2/csrc/u8x8_input_value.c ****     {
  94:u8g2/csrc/u8x8_input_value.c ****       *value = local_value;
 174              		.loc 1 94 0
 175 00bc 8BF80050 		strb	r5, [fp]
 176              	.LVL29:
  95:u8g2/csrc/u8x8_input_value.c ****       r = 1;
 177              		.loc 1 95 0
 178 00c0 0120     		movs	r0, #1
 179              	.LVL30:
 180              	.L6:
  96:u8g2/csrc/u8x8_input_value.c ****       break;
  97:u8g2/csrc/u8x8_input_value.c ****     }
  98:u8g2/csrc/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
  99:u8g2/csrc/u8x8_input_value.c ****     {
 100:u8g2/csrc/u8x8_input_value.c ****       r = 0;
 101:u8g2/csrc/u8x8_input_value.c ****       break;
 102:u8g2/csrc/u8x8_input_value.c ****     }
 103:u8g2/csrc/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 104:u8g2/csrc/u8x8_input_value.c ****     {
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 6


 105:u8g2/csrc/u8x8_input_value.c ****       if ( local_value >= hi )
 106:u8g2/csrc/u8x8_input_value.c **** 	local_value = lo;
 107:u8g2/csrc/u8x8_input_value.c ****       else
 108:u8g2/csrc/u8x8_input_value.c **** 	local_value++;
 109:u8g2/csrc/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 110:u8g2/csrc/u8x8_input_value.c ****     }
 111:u8g2/csrc/u8x8_input_value.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN )
 112:u8g2/csrc/u8x8_input_value.c ****     {
 113:u8g2/csrc/u8x8_input_value.c ****       if ( local_value <= lo )
 114:u8g2/csrc/u8x8_input_value.c **** 	local_value = hi;
 115:u8g2/csrc/u8x8_input_value.c ****       else
 116:u8g2/csrc/u8x8_input_value.c **** 	local_value--;
 117:u8g2/csrc/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 118:u8g2/csrc/u8x8_input_value.c ****     }        
 119:u8g2/csrc/u8x8_input_value.c ****   }
 120:u8g2/csrc/u8x8_input_value.c ****   
 121:u8g2/csrc/u8x8_input_value.c ****   u8x8_SetInverseFont(u8x8, 0);
 181              		.loc 1 121 0
 182 00c2 0023     		movs	r3, #0
 183 00c4 E377     		strb	r3, [r4, #31]
 122:u8g2/csrc/u8x8_input_value.c ****   return r;  
 123:u8g2/csrc/u8x8_input_value.c **** }
 184              		.loc 1 123 0
 185 00c6 05B0     		add	sp, sp, #20
 186              	.LCFI2:
 187              		.cfi_remember_state
 188              		.cfi_def_cfa_offset 36
 189              		@ sp needed
 190 00c8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 191              	.LVL31:
 192              	.L7:
 193              	.LCFI3:
 194              		.cfi_restore_state
 105:u8g2/csrc/u8x8_input_value.c **** 	local_value = lo;
 195              		.loc 1 105 0
 196 00cc 4545     		cmp	r5, r8
 197 00ce 29D2     		bcs	.L16
 108:u8g2/csrc/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 198              		.loc 1 108 0
 199 00d0 0135     		adds	r5, r5, #1
 200              	.LVL32:
 201 00d2 EDB2     		uxtb	r5, r5
 202              	.LVL33:
 203              	.L9:
 109:u8g2/csrc/u8x8_input_value.c ****     }
 204              		.loc 1 109 0
 205 00d4 3146     		mov	r1, r6
 206 00d6 2846     		mov	r0, r5
 207              	.LVL34:
 208 00d8 FFF7FEFF 		bl	u8x8_u8toa
 209              	.LVL35:
 210 00dc 0346     		mov	r3, r0
 211 00de 5246     		mov	r2, r10
 212 00e0 3946     		mov	r1, r7
 213 00e2 2046     		mov	r0, r4
 214 00e4 FFF7FEFF 		bl	u8x8_DrawUTF8
 215              	.LVL36:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 7


 216              	.L4:
  91:u8g2/csrc/u8x8_input_value.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 217              		.loc 1 91 0
 218 00e8 2046     		mov	r0, r4
 219 00ea FFF7FEFF 		bl	u8x8_GetMenuEvent
 220              	.LVL37:
  92:u8g2/csrc/u8x8_input_value.c ****     {
 221              		.loc 1 92 0
 222 00ee 5028     		cmp	r0, #80
 223 00f0 E4D0     		beq	.L19
  98:u8g2/csrc/u8x8_input_value.c ****     {
 224              		.loc 1 98 0
 225 00f2 5328     		cmp	r0, #83
 226 00f4 1AD0     		beq	.L15
 103:u8g2/csrc/u8x8_input_value.c ****     {
 227              		.loc 1 103 0
 228 00f6 5128     		cmp	r0, #81
 229 00f8 E8D0     		beq	.L7
 103:u8g2/csrc/u8x8_input_value.c ****     {
 230              		.loc 1 103 0 is_stmt 0 discriminator 1
 231 00fa 5428     		cmp	r0, #84
 232 00fc E6D0     		beq	.L7
 111:u8g2/csrc/u8x8_input_value.c ****     {
 233              		.loc 1 111 0 is_stmt 1
 234 00fe 5228     		cmp	r0, #82
 235 0100 01D0     		beq	.L11
 111:u8g2/csrc/u8x8_input_value.c ****     {
 236              		.loc 1 111 0 is_stmt 0 discriminator 1
 237 0102 5528     		cmp	r0, #85
 238 0104 F0D1     		bne	.L4
 239              	.L11:
 113:u8g2/csrc/u8x8_input_value.c **** 	local_value = hi;
 240              		.loc 1 113 0 is_stmt 1
 241 0106 4D45     		cmp	r5, r9
 242 0108 0ED9     		bls	.L17
 116:u8g2/csrc/u8x8_input_value.c ****       u8x8_DrawUTF8(u8x8, x, y, u8x8_u8toa(local_value, digits));
 243              		.loc 1 116 0
 244 010a 013D     		subs	r5, r5, #1
 245              	.LVL38:
 246 010c EDB2     		uxtb	r5, r5
 247              	.LVL39:
 248              	.L12:
 117:u8g2/csrc/u8x8_input_value.c ****     }        
 249              		.loc 1 117 0
 250 010e 3146     		mov	r1, r6
 251 0110 2846     		mov	r0, r5
 252              	.LVL40:
 253 0112 FFF7FEFF 		bl	u8x8_u8toa
 254              	.LVL41:
 255 0116 0346     		mov	r3, r0
 256 0118 5246     		mov	r2, r10
 257 011a 3946     		mov	r1, r7
 258 011c 2046     		mov	r0, r4
 259 011e FFF7FEFF 		bl	u8x8_DrawUTF8
 260              	.LVL42:
 261 0122 E1E7     		b	.L4
 262              	.LVL43:
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 8


 263              	.L16:
 106:u8g2/csrc/u8x8_input_value.c ****       else
 264              		.loc 1 106 0
 265 0124 4D46     		mov	r5, r9
 266              	.LVL44:
 267 0126 D5E7     		b	.L9
 268              	.LVL45:
 269              	.L17:
 114:u8g2/csrc/u8x8_input_value.c ****       else
 270              		.loc 1 114 0
 271 0128 4546     		mov	r5, r8
 272              	.LVL46:
 273 012a F0E7     		b	.L12
 274              	.LVL47:
 275              	.L15:
 100:u8g2/csrc/u8x8_input_value.c ****       break;
 276              		.loc 1 100 0
 277 012c 0020     		movs	r0, #0
 278              	.LVL48:
 279 012e C8E7     		b	.L6
 280              		.cfi_endproc
 281              	.LFE0:
 283              		.text
 284              	.Letext0:
 285              		.file 2 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 286              		.file 3 "/usr/local/gcc_arm/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 287              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  /var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 u8x8_input_value.c
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s:16     .text.u8x8_UserInterfaceInputValue:0000000000000000 $t
/var/folders/rk/zpr83dd14lx588t7kb0yv2b40000gn/T//ccQpdc15.s:23     .text.u8x8_UserInterfaceInputValue:0000000000000000 u8x8_UserInterfaceInputValue

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetUTF8Len
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8
u8x8_u8toa
u8x8_GetMenuEvent
