ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"clock_rtc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.RTC_GetUnixTimestamp,"ax",%progbits
  16              		.align	1
  17              		.global	RTC_GetUnixTimestamp
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	RTC_GetUnixTimestamp:
  25              	.LVL0:
  26              	.LFB67:
  27              		.file 1 "Src/clock_rtc.c"
   1:Src/clock_rtc.c **** #include "clock_rtc.h"
   2:Src/clock_rtc.c **** 
   3:Src/clock_rtc.c **** DATE_TIME localTime;
   4:Src/clock_rtc.c **** RTC_HandleTypeDef hrtc;
   5:Src/clock_rtc.c **** 
   6:Src/clock_rtc.c **** uint32_t timeRTC;
   7:Src/clock_rtc.c **** 
   8:Src/clock_rtc.c **** void RTC_Init(void)
   9:Src/clock_rtc.c **** {
  10:Src/clock_rtc.c ****     timeRTC = HAL_GetTick();
  11:Src/clock_rtc.c ****     hrtc.Instance = RTC;
  12:Src/clock_rtc.c ****     hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
  13:Src/clock_rtc.c ****     hrtc.Init.OutPut = RTC_OUTPUTSOURCE_NONE;
  14:Src/clock_rtc.c **** 	if (HAL_RTC_Init(&hrtc) != HAL_OK)
  15:Src/clock_rtc.c ****     {
  16:Src/clock_rtc.c ****         Error_Handler();
  17:Src/clock_rtc.c ****     }
  18:Src/clock_rtc.c ****     if (HAL_RTCEx_BKUPRead(&hrtc, RTC_BKP_DR1) != RTC_HOLDER) 
  19:Src/clock_rtc.c ****     {
  20:Src/clock_rtc.c ****         localTime.year = 2019;
  21:Src/clock_rtc.c ****         localTime.month = 10;
  22:Src/clock_rtc.c ****         localTime.mday = 12;
  23:Src/clock_rtc.c ****         localTime.hour = 11 - 7;
  24:Src/clock_rtc.c ****         localTime.min = 30;
  25:Src/clock_rtc.c ****         localTime.sec = 00;
  26:Src/clock_rtc.c ****         RTC_Sync(&localTime, +7);
  27:Src/clock_rtc.c ****         HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, RTC_HOLDER);   
  28:Src/clock_rtc.c ****     }
  29:Src/clock_rtc.c ****     else
  30:Src/clock_rtc.c ****     {
  31:Src/clock_rtc.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_PORRST) != RESET)
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 2


  32:Src/clock_rtc.c ****         {
  33:Src/clock_rtc.c ****         }
  34:Src/clock_rtc.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_PINRST) != RESET)
  35:Src/clock_rtc.c ****         {
  36:Src/clock_rtc.c ****         }
  37:Src/clock_rtc.c ****         /* Clear source Reset Flag */
  38:Src/clock_rtc.c ****         __HAL_RCC_CLEAR_RESET_FLAGS();
  39:Src/clock_rtc.c ****     }
  40:Src/clock_rtc.c ****     HAL_RTCEx_SetSecond_IT(&hrtc);
  41:Src/clock_rtc.c **** }
  42:Src/clock_rtc.c **** 
  43:Src/clock_rtc.c **** uint32_t RTC_GetUnixTimestamp(DATE_TIME *dt)
  44:Src/clock_rtc.c **** {
  28              		.loc 1 44 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 44 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 8BB0     		sub	sp, sp, #44
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 48
  45:Src/clock_rtc.c **** 	struct tm t;
  40              		.loc 1 45 2 is_stmt 1 view .LVU2
  46:Src/clock_rtc.c **** 	time_t t_of_day;
  41              		.loc 1 46 2 view .LVU3
  47:Src/clock_rtc.c **** 	t.tm_year = dt->year - 1900;
  42              		.loc 1 47 2 view .LVU4
  43              		.loc 1 47 16 is_stmt 0 view .LVU5
  44 0004 B0F90030 		ldrsh	r3, [r0]	@ unaligned
  45              		.loc 1 47 23 view .LVU6
  46 0008 A3F26C73 		subw	r3, r3, #1900
  47              		.loc 1 47 12 view .LVU7
  48 000c 0693     		str	r3, [sp, #24]
  48:Src/clock_rtc.c **** 	t.tm_mon = dt->month - 1; 				// Month, 0 - jan
  49              		.loc 1 48 2 is_stmt 1 view .LVU8
  50              		.loc 1 48 15 is_stmt 0 view .LVU9
  51 000e 90F90230 		ldrsb	r3, [r0, #2]
  52              		.loc 1 48 23 view .LVU10
  53 0012 013B     		subs	r3, r3, #1
  54              		.loc 1 48 11 view .LVU11
  55 0014 0593     		str	r3, [sp, #20]
  49:Src/clock_rtc.c **** 	t.tm_mday = dt->mday; 					// Day of the month
  56              		.loc 1 49 2 is_stmt 1 view .LVU12
  57              		.loc 1 49 16 is_stmt 0 view .LVU13
  58 0016 90F90330 		ldrsb	r3, [r0, #3]
  59              		.loc 1 49 12 view .LVU14
  60 001a 0493     		str	r3, [sp, #16]
  50:Src/clock_rtc.c **** 	t.tm_hour = dt->hour;
  61              		.loc 1 50 2 is_stmt 1 view .LVU15
  62              		.loc 1 50 16 is_stmt 0 view .LVU16
  63 001c 90F90530 		ldrsb	r3, [r0, #5]
  64              		.loc 1 50 12 view .LVU17
  65 0020 0393     		str	r3, [sp, #12]
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 3


  51:Src/clock_rtc.c **** 	t.tm_min = dt->min;
  66              		.loc 1 51 2 is_stmt 1 view .LVU18
  67              		.loc 1 51 15 is_stmt 0 view .LVU19
  68 0022 90F90630 		ldrsb	r3, [r0, #6]
  69              		.loc 1 51 11 view .LVU20
  70 0026 0293     		str	r3, [sp, #8]
  52:Src/clock_rtc.c **** 	t.tm_sec = dt->sec;
  71              		.loc 1 52 2 is_stmt 1 view .LVU21
  72              		.loc 1 52 15 is_stmt 0 view .LVU22
  73 0028 90F90730 		ldrsb	r3, [r0, #7]
  74              		.loc 1 52 11 view .LVU23
  75 002c 0193     		str	r3, [sp, #4]
  53:Src/clock_rtc.c **** 	t.tm_isdst = -1; 						// Is DST on? 1 = yes, 0 = no, -1 = unknown
  76              		.loc 1 53 2 is_stmt 1 view .LVU24
  77              		.loc 1 53 13 is_stmt 0 view .LVU25
  78 002e 4FF0FF33 		mov	r3, #-1
  79 0032 0993     		str	r3, [sp, #36]
  54:Src/clock_rtc.c **** 	t_of_day = mktime(&t);
  80              		.loc 1 54 2 is_stmt 1 view .LVU26
  81              		.loc 1 54 13 is_stmt 0 view .LVU27
  82 0034 01A8     		add	r0, sp, #4
  83              	.LVL1:
  84              		.loc 1 54 13 view .LVU28
  85 0036 FFF7FEFF 		bl	mktime
  86              	.LVL2:
  55:Src/clock_rtc.c **** 	return (uint32_t)t_of_day; 
  87              		.loc 1 55 2 is_stmt 1 view .LVU29
  56:Src/clock_rtc.c **** }
  88              		.loc 1 56 1 is_stmt 0 view .LVU30
  89 003a 0BB0     		add	sp, sp, #44
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 4
  92              		@ sp needed
  93 003c 5DF804FB 		ldr	pc, [sp], #4
  94              		.cfi_endproc
  95              	.LFE67:
  97              		.section	.text.RTC_Sync,"ax",%progbits
  98              		.align	1
  99              		.global	RTC_Sync
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	RTC_Sync:
 106              	.LVL3:
 107              	.LFB68:
  57:Src/clock_rtc.c **** 
  58:Src/clock_rtc.c **** void RTC_Sync(DATE_TIME *dt, uint8_t timeZone)
  59:Src/clock_rtc.c **** {
 108              		.loc 1 59 1 is_stmt 1 view -0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		.loc 1 59 1 is_stmt 0 view .LVU32
 113 0000 38B5     		push	{r3, r4, r5, lr}
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 4


 116              		.cfi_offset 3, -16
 117              		.cfi_offset 4, -12
 118              		.cfi_offset 5, -8
 119              		.cfi_offset 14, -4
 120 0002 0D46     		mov	r5, r1
  60:Src/clock_rtc.c **** 	uint32_t tt;
 121              		.loc 1 60 2 is_stmt 1 view .LVU33
  61:Src/clock_rtc.c **** 	uint32_t number;
 122              		.loc 1 61 2 view .LVU34
  62:Src/clock_rtc.c ****     __HAL_RTC_SECOND_DISABLE_IT(&hrtc, RTC_IT_SEC);
 123              		.loc 1 62 5 view .LVU35
 124 0004 0A4C     		ldr	r4, .L5
 125 0006 2268     		ldr	r2, [r4]
 126 0008 1368     		ldr	r3, [r2]
 127 000a 23F00103 		bic	r3, r3, #1
 128 000e 1360     		str	r3, [r2]
  63:Src/clock_rtc.c **** 	tt = RTC_GetUnixTimestamp(dt);
 129              		.loc 1 63 2 view .LVU36
 130              		.loc 1 63 7 is_stmt 0 view .LVU37
 131 0010 FFF7FEFF 		bl	RTC_GetUnixTimestamp
 132              	.LVL4:
  64:Src/clock_rtc.c **** 	tt += timeZone * 60 * 60;
 133              		.loc 1 64 2 is_stmt 1 view .LVU38
  65:Src/clock_rtc.c ****     RTC_WriteTimeCounter(&hrtc, (uint32_t)tt) ;  // ghi vao thanh ghi gia tri Timestamp
 134              		.loc 1 65 5 view .LVU39
 135 0014 4FF46161 		mov	r1, #3600
 136 0018 01FB0501 		mla	r1, r1, r5, r0
 137              	.LVL5:
 138              		.loc 1 65 5 is_stmt 0 view .LVU40
 139 001c 2046     		mov	r0, r4
 140 001e FFF7FEFF 		bl	RTC_WriteTimeCounter
 141              	.LVL6:
  66:Src/clock_rtc.c **** 	__HAL_RTC_SECOND_ENABLE_IT(&hrtc, RTC_IT_SEC);
 142              		.loc 1 66 2 is_stmt 1 view .LVU41
 143 0022 2268     		ldr	r2, [r4]
 144 0024 1368     		ldr	r3, [r2]
 145 0026 43F00103 		orr	r3, r3, #1
 146 002a 1360     		str	r3, [r2]
  67:Src/clock_rtc.c **** }
 147              		.loc 1 67 1 is_stmt 0 view .LVU42
 148 002c 38BD     		pop	{r3, r4, r5, pc}
 149              	.L6:
 150              		.loc 1 67 1 view .LVU43
 151 002e 00BF     		.align	2
 152              	.L5:
 153 0030 00000000 		.word	hrtc
 154              		.cfi_endproc
 155              	.LFE68:
 157              		.section	.text.RTC_Init,"ax",%progbits
 158              		.align	1
 159              		.global	RTC_Init
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu softvfp
 165              	RTC_Init:
 166              	.LFB66:
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 5


   9:Src/clock_rtc.c ****     timeRTC = HAL_GetTick();
 167              		.loc 1 9 1 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
  10:Src/clock_rtc.c ****     hrtc.Instance = RTC;
 176              		.loc 1 10 5 view .LVU45
  10:Src/clock_rtc.c ****     hrtc.Instance = RTC;
 177              		.loc 1 10 15 is_stmt 0 view .LVU46
 178 0002 FFF7FEFF 		bl	HAL_GetTick
 179              	.LVL7:
  10:Src/clock_rtc.c ****     hrtc.Instance = RTC;
 180              		.loc 1 10 13 view .LVU47
 181 0006 1E4B     		ldr	r3, .L14
 182 0008 1860     		str	r0, [r3]
  11:Src/clock_rtc.c ****     hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 183              		.loc 1 11 5 is_stmt 1 view .LVU48
  11:Src/clock_rtc.c ****     hrtc.Init.AsynchPrediv = RTC_AUTO_1_SECOND;
 184              		.loc 1 11 19 is_stmt 0 view .LVU49
 185 000a 1E48     		ldr	r0, .L14+4
 186 000c 1E4B     		ldr	r3, .L14+8
 187 000e 0360     		str	r3, [r0]
  12:Src/clock_rtc.c ****     hrtc.Init.OutPut = RTC_OUTPUTSOURCE_NONE;
 188              		.loc 1 12 5 is_stmt 1 view .LVU50
  12:Src/clock_rtc.c ****     hrtc.Init.OutPut = RTC_OUTPUTSOURCE_NONE;
 189              		.loc 1 12 28 is_stmt 0 view .LVU51
 190 0010 4FF0FF33 		mov	r3, #-1
 191 0014 4360     		str	r3, [r0, #4]
  13:Src/clock_rtc.c **** 	if (HAL_RTC_Init(&hrtc) != HAL_OK)
 192              		.loc 1 13 5 is_stmt 1 view .LVU52
  13:Src/clock_rtc.c **** 	if (HAL_RTC_Init(&hrtc) != HAL_OK)
 193              		.loc 1 13 22 is_stmt 0 view .LVU53
 194 0016 0023     		movs	r3, #0
 195 0018 8360     		str	r3, [r0, #8]
  14:Src/clock_rtc.c ****     {
 196              		.loc 1 14 2 is_stmt 1 view .LVU54
  14:Src/clock_rtc.c ****     {
 197              		.loc 1 14 6 is_stmt 0 view .LVU55
 198 001a FFF7FEFF 		bl	HAL_RTC_Init
 199              	.LVL8:
  14:Src/clock_rtc.c ****     {
 200              		.loc 1 14 5 view .LVU56
 201 001e 88B9     		cbnz	r0, .L12
 202              	.L8:
  18:Src/clock_rtc.c ****     {
 203              		.loc 1 18 5 is_stmt 1 view .LVU57
  18:Src/clock_rtc.c ****     {
 204              		.loc 1 18 9 is_stmt 0 view .LVU58
 205 0020 0121     		movs	r1, #1
 206 0022 1848     		ldr	r0, .L14+4
 207 0024 FFF7FEFF 		bl	HAL_RTCEx_BKUPRead
 208              	.LVL9:
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 6


  18:Src/clock_rtc.c ****     {
 209              		.loc 1 18 8 view .LVU59
 210 0028 4AF2A453 		movw	r3, #42404
 211 002c 9842     		cmp	r0, r3
 212 002e 0CD1     		bne	.L13
  31:Src/clock_rtc.c ****         {
 213              		.loc 1 31 9 is_stmt 1 view .LVU60
  31:Src/clock_rtc.c ****         {
 214              		.loc 1 31 13 is_stmt 0 view .LVU61
 215 0030 164B     		ldr	r3, .L14+12
 216 0032 5A6A     		ldr	r2, [r3, #36]
  33:Src/clock_rtc.c ****         if (__HAL_RCC_GET_FLAG(RCC_FLAG_PINRST) != RESET)
 217              		.loc 1 33 9 is_stmt 1 view .LVU62
  34:Src/clock_rtc.c ****         {
 218              		.loc 1 34 9 view .LVU63
  34:Src/clock_rtc.c ****         {
 219              		.loc 1 34 13 is_stmt 0 view .LVU64
 220 0034 5B6A     		ldr	r3, [r3, #36]
  36:Src/clock_rtc.c ****         /* Clear source Reset Flag */
 221              		.loc 1 36 9 is_stmt 1 view .LVU65
  38:Src/clock_rtc.c ****     }
 222              		.loc 1 38 9 view .LVU66
 223 0036 164B     		ldr	r3, .L14+16
 224 0038 0122     		movs	r2, #1
 225 003a 1A60     		str	r2, [r3]
 226              	.L10:
  40:Src/clock_rtc.c **** }
 227              		.loc 1 40 5 view .LVU67
 228 003c 1148     		ldr	r0, .L14+4
 229 003e FFF7FEFF 		bl	HAL_RTCEx_SetSecond_IT
 230              	.LVL10:
  41:Src/clock_rtc.c **** 
 231              		.loc 1 41 1 is_stmt 0 view .LVU68
 232 0042 08BD     		pop	{r3, pc}
 233              	.L12:
  16:Src/clock_rtc.c ****     }
 234              		.loc 1 16 9 is_stmt 1 view .LVU69
 235 0044 FFF7FEFF 		bl	Error_Handler
 236              	.LVL11:
 237 0048 EAE7     		b	.L8
 238              	.L13:
  20:Src/clock_rtc.c ****         localTime.month = 10;
 239              		.loc 1 20 9 view .LVU70
  20:Src/clock_rtc.c ****         localTime.month = 10;
 240              		.loc 1 20 24 is_stmt 0 view .LVU71
 241 004a 1248     		ldr	r0, .L14+20
 242 004c 6FF01C03 		mvn	r3, #28
 243 0050 0370     		strb	r3, [r0]
 244 0052 0723     		movs	r3, #7
 245 0054 4370     		strb	r3, [r0, #1]
  21:Src/clock_rtc.c ****         localTime.mday = 12;
 246              		.loc 1 21 9 is_stmt 1 view .LVU72
  21:Src/clock_rtc.c ****         localTime.mday = 12;
 247              		.loc 1 21 25 is_stmt 0 view .LVU73
 248 0056 0A23     		movs	r3, #10
 249 0058 8370     		strb	r3, [r0, #2]
  22:Src/clock_rtc.c ****         localTime.hour = 11 - 7;
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 7


 250              		.loc 1 22 9 is_stmt 1 view .LVU74
  22:Src/clock_rtc.c ****         localTime.hour = 11 - 7;
 251              		.loc 1 22 24 is_stmt 0 view .LVU75
 252 005a 0C23     		movs	r3, #12
 253 005c C370     		strb	r3, [r0, #3]
  23:Src/clock_rtc.c ****         localTime.min = 30;
 254              		.loc 1 23 9 is_stmt 1 view .LVU76
  23:Src/clock_rtc.c ****         localTime.min = 30;
 255              		.loc 1 23 24 is_stmt 0 view .LVU77
 256 005e 0423     		movs	r3, #4
 257 0060 4371     		strb	r3, [r0, #5]
  24:Src/clock_rtc.c ****         localTime.sec = 00;
 258              		.loc 1 24 9 is_stmt 1 view .LVU78
  24:Src/clock_rtc.c ****         localTime.sec = 00;
 259              		.loc 1 24 23 is_stmt 0 view .LVU79
 260 0062 1E23     		movs	r3, #30
 261 0064 8371     		strb	r3, [r0, #6]
  25:Src/clock_rtc.c ****         RTC_Sync(&localTime, +7);
 262              		.loc 1 25 9 is_stmt 1 view .LVU80
  25:Src/clock_rtc.c ****         RTC_Sync(&localTime, +7);
 263              		.loc 1 25 23 is_stmt 0 view .LVU81
 264 0066 0023     		movs	r3, #0
 265 0068 C371     		strb	r3, [r0, #7]
  26:Src/clock_rtc.c ****         HAL_RTCEx_BKUPWrite(&hrtc, RTC_BKP_DR1, RTC_HOLDER);   
 266              		.loc 1 26 9 is_stmt 1 view .LVU82
 267 006a 0721     		movs	r1, #7
 268 006c FFF7FEFF 		bl	RTC_Sync
 269              	.LVL12:
  27:Src/clock_rtc.c ****     }
 270              		.loc 1 27 9 view .LVU83
 271 0070 4AF2A452 		movw	r2, #42404
 272 0074 0121     		movs	r1, #1
 273 0076 0348     		ldr	r0, .L14+4
 274 0078 FFF7FEFF 		bl	HAL_RTCEx_BKUPWrite
 275              	.LVL13:
 276 007c DEE7     		b	.L10
 277              	.L15:
 278 007e 00BF     		.align	2
 279              	.L14:
 280 0080 00000000 		.word	timeRTC
 281 0084 00000000 		.word	hrtc
 282 0088 00280040 		.word	1073752064
 283 008c 00100240 		.word	1073876992
 284 0090 E0044242 		.word	1111622880
 285 0094 00000000 		.word	localTime
 286              		.cfi_endproc
 287              	.LFE66:
 289              		.section	.text.RTC_CalcTime,"ax",%progbits
 290              		.align	1
 291              		.global	RTC_CalcTime
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	RTC_CalcTime:
 298              	.LVL14:
 299              	.LFB69:
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 8


  68:Src/clock_rtc.c **** 
  69:Src/clock_rtc.c **** void RTC_CalcTime(DATE_TIME *dt, uint32_t unixTime)
  70:Src/clock_rtc.c **** {
 300              		.loc 1 70 1 view -0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 8
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304              		.loc 1 70 1 is_stmt 0 view .LVU85
 305 0000 10B5     		push	{r4, lr}
 306              	.LCFI5:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              	.LCFI6:
 312              		.cfi_def_cfa_offset 16
 313 0004 0446     		mov	r4, r0
  71:Src/clock_rtc.c **** 	struct tm *gt;
 314              		.loc 1 71 2 is_stmt 1 view .LVU86
  72:Src/clock_rtc.c **** 	time_t epoch;
 315              		.loc 1 72 2 view .LVU87
  73:Src/clock_rtc.c **** 	epoch = unixTime;
 316              		.loc 1 73 2 view .LVU88
 317              		.loc 1 73 8 is_stmt 0 view .LVU89
 318 0006 0091     		str	r1, [sp]
 319 0008 0023     		movs	r3, #0
 320 000a 0193     		str	r3, [sp, #4]
  74:Src/clock_rtc.c **** 	gt = localtime(&epoch);			
 321              		.loc 1 74 2 is_stmt 1 view .LVU90
 322              		.loc 1 74 7 is_stmt 0 view .LVU91
 323 000c 6846     		mov	r0, sp
 324              	.LVL15:
 325              		.loc 1 74 7 view .LVU92
 326 000e FFF7FEFF 		bl	localtime
 327              	.LVL16:
  75:Src/clock_rtc.c **** 	dt->sec = gt->tm_sec;
 328              		.loc 1 75 2 is_stmt 1 view .LVU93
 329              		.loc 1 75 14 is_stmt 0 view .LVU94
 330 0012 0368     		ldr	r3, [r0]
 331              		.loc 1 75 10 view .LVU95
 332 0014 E371     		strb	r3, [r4, #7]
  76:Src/clock_rtc.c **** 	dt->min = gt->tm_min;
 333              		.loc 1 76 2 is_stmt 1 view .LVU96
 334              		.loc 1 76 14 is_stmt 0 view .LVU97
 335 0016 4368     		ldr	r3, [r0, #4]
 336              		.loc 1 76 10 view .LVU98
 337 0018 A371     		strb	r3, [r4, #6]
  77:Src/clock_rtc.c **** 	dt->hour = gt->tm_hour;
 338              		.loc 1 77 2 is_stmt 1 view .LVU99
 339              		.loc 1 77 15 is_stmt 0 view .LVU100
 340 001a 8368     		ldr	r3, [r0, #8]
 341              		.loc 1 77 11 view .LVU101
 342 001c 6371     		strb	r3, [r4, #5]
  78:Src/clock_rtc.c **** 	dt->mday = gt->tm_mday;
 343              		.loc 1 78 2 is_stmt 1 view .LVU102
 344              		.loc 1 78 15 is_stmt 0 view .LVU103
 345 001e C368     		ldr	r3, [r0, #12]
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 9


 346              		.loc 1 78 11 view .LVU104
 347 0020 E370     		strb	r3, [r4, #3]
  79:Src/clock_rtc.c **** 	dt->wday = gt->tm_wday + 1;				// tm_wday 0 - 6 (0 = sunday)
 348              		.loc 1 79 2 is_stmt 1 view .LVU105
 349              		.loc 1 79 15 is_stmt 0 view .LVU106
 350 0022 8369     		ldr	r3, [r0, #24]
 351              		.loc 1 79 25 view .LVU107
 352 0024 0133     		adds	r3, r3, #1
 353              		.loc 1 79 11 view .LVU108
 354 0026 2371     		strb	r3, [r4, #4]
  80:Src/clock_rtc.c **** 	dt->month = gt->tm_mon + 1;				// tm_mon 0 - 11 (0 = Jan)
 355              		.loc 1 80 2 is_stmt 1 view .LVU109
 356              		.loc 1 80 16 is_stmt 0 view .LVU110
 357 0028 0369     		ldr	r3, [r0, #16]
 358              		.loc 1 80 25 view .LVU111
 359 002a 0133     		adds	r3, r3, #1
 360              		.loc 1 80 12 view .LVU112
 361 002c A370     		strb	r3, [r4, #2]
  81:Src/clock_rtc.c **** 	dt->year = gt->tm_year + 1900;		    // tm_year = current year - 1900
 362              		.loc 1 81 2 is_stmt 1 view .LVU113
 363              		.loc 1 81 15 is_stmt 0 view .LVU114
 364 002e 4369     		ldr	r3, [r0, #20]
 365              		.loc 1 81 11 view .LVU115
 366 0030 03F26C73 		addw	r3, r3, #1900
 367 0034 2380     		strh	r3, [r4]	@ unaligned
  82:Src/clock_rtc.c **** }
 368              		.loc 1 82 1 view .LVU116
 369 0036 02B0     		add	sp, sp, #8
 370              	.LCFI7:
 371              		.cfi_def_cfa_offset 8
 372              		@ sp needed
 373 0038 10BD     		pop	{r4, pc}
 374              		.loc 1 82 1 view .LVU117
 375              		.cfi_endproc
 376              	.LFE69:
 378              		.section	.text.HAL_RTCEx_RTCEventCallback,"ax",%progbits
 379              		.align	1
 380              		.global	HAL_RTCEx_RTCEventCallback
 381              		.syntax unified
 382              		.thumb
 383              		.thumb_func
 384              		.fpu softvfp
 386              	HAL_RTCEx_RTCEventCallback:
 387              	.LVL17:
 388              	.LFB70:
  83:Src/clock_rtc.c **** 
  84:Src/clock_rtc.c **** void HAL_RTCEx_RTCEventCallback(RTC_HandleTypeDef *hrtc)
  85:Src/clock_rtc.c **** {
 389              		.loc 1 85 1 is_stmt 1 view -0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 8
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		.loc 1 85 1 is_stmt 0 view .LVU119
 394 0000 00B5     		push	{lr}
 395              	.LCFI8:
 396              		.cfi_def_cfa_offset 4
 397              		.cfi_offset 14, -4
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 10


 398 0002 83B0     		sub	sp, sp, #12
 399              	.LCFI9:
 400              		.cfi_def_cfa_offset 16
  86:Src/clock_rtc.c ****     volatile uint32_t number;
 401              		.loc 1 86 5 is_stmt 1 view .LVU120
  87:Src/clock_rtc.c ****     number = RTC_ReadTimeCounter(hrtc);
 402              		.loc 1 87 5 view .LVU121
 403              		.loc 1 87 14 is_stmt 0 view .LVU122
 404 0004 FFF7FEFF 		bl	RTC_ReadTimeCounter
 405              	.LVL18:
 406              		.loc 1 87 12 view .LVU123
 407 0008 0190     		str	r0, [sp, #4]
  88:Src/clock_rtc.c ****     RTC_CalcTime(&localTime, number); 
 408              		.loc 1 88 5 is_stmt 1 view .LVU124
 409 000a 0199     		ldr	r1, [sp, #4]
 410 000c 0248     		ldr	r0, .L20
 411 000e FFF7FEFF 		bl	RTC_CalcTime
 412              	.LVL19:
  89:Src/clock_rtc.c **** }
 413              		.loc 1 89 1 is_stmt 0 view .LVU125
 414 0012 03B0     		add	sp, sp, #12
 415              	.LCFI10:
 416              		.cfi_def_cfa_offset 4
 417              		@ sp needed
 418 0014 5DF804FB 		ldr	pc, [sp], #4
 419              	.L21:
 420              		.align	2
 421              	.L20:
 422 0018 00000000 		.word	localTime
 423              		.cfi_endproc
 424              	.LFE70:
 426              		.section	.text.RTC_Now,"ax",%progbits
 427              		.align	1
 428              		.global	RTC_Now
 429              		.syntax unified
 430              		.thumb
 431              		.thumb_func
 432              		.fpu softvfp
 434              	RTC_Now:
 435              	.LVL20:
 436              	.LFB71:
  90:Src/clock_rtc.c **** 
  91:Src/clock_rtc.c **** void RTC_Now(DATE_TIME *dt)
  92:Src/clock_rtc.c **** {
 437              		.loc 1 92 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
  93:Src/clock_rtc.c **** 	__HAL_RTC_SECOND_DISABLE_IT(&hrtc, RTC_IT_SEC);
 442              		.loc 1 93 2 view .LVU127
 443 0000 084A     		ldr	r2, .L23
 444 0002 1168     		ldr	r1, [r2]
 445 0004 0B68     		ldr	r3, [r1]
 446 0006 23F00103 		bic	r3, r3, #1
 447 000a 0B60     		str	r3, [r1]
  94:Src/clock_rtc.c **** 	*dt = localTime;
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 11


 448              		.loc 1 94 2 view .LVU128
 449              		.loc 1 94 6 is_stmt 0 view .LVU129
 450 000c 064B     		ldr	r3, .L23+4
 451 000e 1968     		ldr	r1, [r3]	@ unaligned
 452 0010 5B68     		ldr	r3, [r3, #4]	@ unaligned
 453 0012 0160     		str	r1, [r0]	@ unaligned
 454 0014 4360     		str	r3, [r0, #4]	@ unaligned
  95:Src/clock_rtc.c **** 	__HAL_RTC_SECOND_ENABLE_IT(&hrtc, RTC_IT_SEC);
 455              		.loc 1 95 2 is_stmt 1 view .LVU130
 456 0016 1268     		ldr	r2, [r2]
 457 0018 1368     		ldr	r3, [r2]
 458 001a 43F00103 		orr	r3, r3, #1
 459 001e 1360     		str	r3, [r2]
  96:Src/clock_rtc.c **** }
 460              		.loc 1 96 1 is_stmt 0 view .LVU131
 461 0020 7047     		bx	lr
 462              	.L24:
 463 0022 00BF     		.align	2
 464              	.L23:
 465 0024 00000000 		.word	hrtc
 466 0028 00000000 		.word	localTime
 467              		.cfi_endproc
 468              	.LFE71:
 470              		.section	.text.RTC_CalendarShow,"ax",%progbits
 471              		.align	1
 472              		.global	RTC_CalendarShow
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 476              		.fpu softvfp
 478              	RTC_CalendarShow:
 479              	.LFB72:
  97:Src/clock_rtc.c **** 
  98:Src/clock_rtc.c **** 
  99:Src/clock_rtc.c **** void RTC_CalendarShow(void)
 100:Src/clock_rtc.c **** {
 480              		.loc 1 100 1 is_stmt 1 view -0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484 0000 10B5     		push	{r4, lr}
 485              	.LCFI11:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 4, -8
 488              		.cfi_offset 14, -4
 101:Src/clock_rtc.c ****     if(HAL_GetTick() - timeRTC > 1000)
 489              		.loc 1 101 5 view .LVU133
 490              		.loc 1 101 8 is_stmt 0 view .LVU134
 491 0002 FFF7FEFF 		bl	HAL_GetTick
 492              	.LVL21:
 493              		.loc 1 101 22 view .LVU135
 494 0006 0F4B     		ldr	r3, .L29
 495 0008 1B68     		ldr	r3, [r3]
 496 000a C01A     		subs	r0, r0, r3
 497              		.loc 1 101 7 view .LVU136
 498 000c B0F57A7F 		cmp	r0, #1000
 499 0010 00D8     		bhi	.L28
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 12


 500              	.L25:
 102:Src/clock_rtc.c ****     {
 103:Src/clock_rtc.c ****         printf("Date: %02d: %02d: %04d \n", localTime.mday, localTime.month, localTime.year);
 104:Src/clock_rtc.c ****         printf("Time: %02d: %02d: %02d \n", localTime.hour, localTime.min, localTime.sec);
 105:Src/clock_rtc.c ****         timeRTC = HAL_GetTick();
 106:Src/clock_rtc.c ****     }
 107:Src/clock_rtc.c **** }
 501              		.loc 1 107 1 view .LVU137
 502 0012 10BD     		pop	{r4, pc}
 503              	.L28:
 103:Src/clock_rtc.c ****         printf("Time: %02d: %02d: %02d \n", localTime.hour, localTime.min, localTime.sec);
 504              		.loc 1 103 9 is_stmt 1 view .LVU138
 103:Src/clock_rtc.c ****         printf("Time: %02d: %02d: %02d \n", localTime.hour, localTime.min, localTime.sec);
 505              		.loc 1 103 54 is_stmt 0 view .LVU139
 506 0014 0C4C     		ldr	r4, .L29+4
 103:Src/clock_rtc.c ****         printf("Time: %02d: %02d: %02d \n", localTime.hour, localTime.min, localTime.sec);
 507              		.loc 1 103 9 view .LVU140
 508 0016 B4F90030 		ldrsh	r3, [r4]	@ unaligned
 509 001a 94F90220 		ldrsb	r2, [r4, #2]
 510 001e 94F90310 		ldrsb	r1, [r4, #3]
 511 0022 0A48     		ldr	r0, .L29+8
 512 0024 FFF7FEFF 		bl	printf
 513              	.LVL22:
 104:Src/clock_rtc.c ****         timeRTC = HAL_GetTick();
 514              		.loc 1 104 9 is_stmt 1 view .LVU141
 515 0028 94F90730 		ldrsb	r3, [r4, #7]
 516 002c 94F90620 		ldrsb	r2, [r4, #6]
 517 0030 94F90510 		ldrsb	r1, [r4, #5]
 518 0034 0648     		ldr	r0, .L29+12
 519 0036 FFF7FEFF 		bl	printf
 520              	.LVL23:
 105:Src/clock_rtc.c ****     }
 521              		.loc 1 105 9 view .LVU142
 105:Src/clock_rtc.c ****     }
 522              		.loc 1 105 19 is_stmt 0 view .LVU143
 523 003a FFF7FEFF 		bl	HAL_GetTick
 524              	.LVL24:
 105:Src/clock_rtc.c ****     }
 525              		.loc 1 105 17 view .LVU144
 526 003e 014B     		ldr	r3, .L29
 527 0040 1860     		str	r0, [r3]
 528              		.loc 1 107 1 view .LVU145
 529 0042 E6E7     		b	.L25
 530              	.L30:
 531              		.align	2
 532              	.L29:
 533 0044 00000000 		.word	timeRTC
 534 0048 00000000 		.word	localTime
 535 004c 00000000 		.word	.LC0
 536 0050 1C000000 		.word	.LC1
 537              		.cfi_endproc
 538              	.LFE72:
 540              		.section	.text.TIME_GetSec,"ax",%progbits
 541              		.align	1
 542              		.global	TIME_GetSec
 543              		.syntax unified
 544              		.thumb
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 13


 545              		.thumb_func
 546              		.fpu softvfp
 548              	TIME_GetSec:
 549              	.LVL25:
 550              	.LFB74:
 108:Src/clock_rtc.c **** 
 109:Src/clock_rtc.c **** // add number of secs to a DATE_TIME struct
 110:Src/clock_rtc.c **** int8_t TIME_AddSec(DATE_TIME *t, int32_t sec)
 111:Src/clock_rtc.c **** {
 112:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 113:Src/clock_rtc.c **** 	if(sec == 0) return 0;	
 114:Src/clock_rtc.c **** 	TIME_FromSec(t, TIME_GetSec(t) + sec);	
 115:Src/clock_rtc.c **** 	return 0;
 116:Src/clock_rtc.c **** }
 117:Src/clock_rtc.c **** 
 118:Src/clock_rtc.c **** // find the number of sec since 00:00 hours, Jan 1, 1970 UTC
 119:Src/clock_rtc.c **** int32_t TIME_GetSec(DATE_TIME *t)
 120:Src/clock_rtc.c **** {
 551              		.loc 1 120 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 40
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 121:Src/clock_rtc.c **** 	struct tm tx;
 555              		.loc 1 121 2 view .LVU147
 122:Src/clock_rtc.c **** 	if(t == NULL) return -1;	
 556              		.loc 1 122 2 view .LVU148
 557              		.loc 1 122 4 is_stmt 0 view .LVU149
 558 0000 10B3     		cbz	r0, .L33
 120:Src/clock_rtc.c **** 	struct tm tx;
 559              		.loc 1 120 1 view .LVU150
 560 0002 00B5     		push	{lr}
 561              	.LCFI12:
 562              		.cfi_def_cfa_offset 4
 563              		.cfi_offset 14, -4
 564 0004 8BB0     		sub	sp, sp, #44
 565              	.LCFI13:
 566              		.cfi_def_cfa_offset 48
 123:Src/clock_rtc.c **** 	tx.tm_sec = t->sec;
 567              		.loc 1 123 2 is_stmt 1 view .LVU151
 568              		.loc 1 123 15 is_stmt 0 view .LVU152
 569 0006 90F90730 		ldrsb	r3, [r0, #7]
 570              		.loc 1 123 12 view .LVU153
 571 000a 0193     		str	r3, [sp, #4]
 124:Src/clock_rtc.c **** 	tx.tm_min = t->min;
 572              		.loc 1 124 2 is_stmt 1 view .LVU154
 573              		.loc 1 124 15 is_stmt 0 view .LVU155
 574 000c 90F90630 		ldrsb	r3, [r0, #6]
 575              		.loc 1 124 12 view .LVU156
 576 0010 0293     		str	r3, [sp, #8]
 125:Src/clock_rtc.c **** 	tx.tm_hour = t->hour;
 577              		.loc 1 125 2 is_stmt 1 view .LVU157
 578              		.loc 1 125 16 is_stmt 0 view .LVU158
 579 0012 90F90530 		ldrsb	r3, [r0, #5]
 580              		.loc 1 125 13 view .LVU159
 581 0016 0393     		str	r3, [sp, #12]
 126:Src/clock_rtc.c **** 	tx.tm_mday = t->mday;
 582              		.loc 1 126 2 is_stmt 1 view .LVU160
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 14


 583              		.loc 1 126 16 is_stmt 0 view .LVU161
 584 0018 90F90330 		ldrsb	r3, [r0, #3]
 585              		.loc 1 126 13 view .LVU162
 586 001c 0493     		str	r3, [sp, #16]
 127:Src/clock_rtc.c **** 	tx.tm_mday = t->mday;
 587              		.loc 1 127 2 is_stmt 1 view .LVU163
 128:Src/clock_rtc.c **** 	tx.tm_wday = t->wday - 1;
 588              		.loc 1 128 2 view .LVU164
 589              		.loc 1 128 16 is_stmt 0 view .LVU165
 590 001e 90F90430 		ldrsb	r3, [r0, #4]
 591              		.loc 1 128 23 view .LVU166
 592 0022 013B     		subs	r3, r3, #1
 593              		.loc 1 128 13 view .LVU167
 594 0024 0793     		str	r3, [sp, #28]
 129:Src/clock_rtc.c **** 	tx.tm_mon = t->month - 1;
 595              		.loc 1 129 2 is_stmt 1 view .LVU168
 596              		.loc 1 129 15 is_stmt 0 view .LVU169
 597 0026 90F90230 		ldrsb	r3, [r0, #2]
 598              		.loc 1 129 23 view .LVU170
 599 002a 013B     		subs	r3, r3, #1
 600              		.loc 1 129 12 view .LVU171
 601 002c 0593     		str	r3, [sp, #20]
 130:Src/clock_rtc.c **** 	tx.tm_year = t->year - 1900;
 602              		.loc 1 130 2 is_stmt 1 view .LVU172
 603              		.loc 1 130 16 is_stmt 0 view .LVU173
 604 002e B0F90030 		ldrsh	r3, [r0]	@ unaligned
 605              		.loc 1 130 23 view .LVU174
 606 0032 A3F26C73 		subw	r3, r3, #1900
 607              		.loc 1 130 13 view .LVU175
 608 0036 0693     		str	r3, [sp, #24]
 131:Src/clock_rtc.c **** 	tx.tm_isdst = 0;
 609              		.loc 1 131 2 is_stmt 1 view .LVU176
 610              		.loc 1 131 14 is_stmt 0 view .LVU177
 611 0038 0023     		movs	r3, #0
 612 003a 0993     		str	r3, [sp, #36]
 132:Src/clock_rtc.c **** 	return mktime(&tx);
 613              		.loc 1 132 2 is_stmt 1 view .LVU178
 614              		.loc 1 132 9 is_stmt 0 view .LVU179
 615 003c 01A8     		add	r0, sp, #4
 616              	.LVL26:
 617              		.loc 1 132 9 view .LVU180
 618 003e FFF7FEFF 		bl	mktime
 619              	.LVL27:
 133:Src/clock_rtc.c **** }
 620              		.loc 1 133 1 view .LVU181
 621 0042 0BB0     		add	sp, sp, #44
 622              	.LCFI14:
 623              		.cfi_def_cfa_offset 4
 624              		@ sp needed
 625 0044 5DF804FB 		ldr	pc, [sp], #4
 626              	.LVL28:
 627              	.L33:
 628              	.LCFI15:
 629              		.cfi_def_cfa_offset 0
 630              		.cfi_restore 14
 122:Src/clock_rtc.c **** 	tx.tm_sec = t->sec;
 631              		.loc 1 122 23 view .LVU182
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 15


 632 0048 4FF0FF30 		mov	r0, #-1
 633              	.LVL29:
 634              		.loc 1 133 1 view .LVU183
 635 004c 7047     		bx	lr
 636              		.cfi_endproc
 637              	.LFE74:
 639              		.section	.text.TIME_FromSec,"ax",%progbits
 640              		.align	1
 641              		.global	TIME_FromSec
 642              		.syntax unified
 643              		.thumb
 644              		.thumb_func
 645              		.fpu softvfp
 647              	TIME_FromSec:
 648              	.LVL30:
 649              	.LFB75:
 134:Src/clock_rtc.c **** 
 135:Src/clock_rtc.c **** int8_t TIME_FromSec(DATE_TIME *t, int32_t sec)
 136:Src/clock_rtc.c **** {
 650              		.loc 1 136 1 is_stmt 1 view -0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 8
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		.loc 1 136 1 is_stmt 0 view .LVU185
 655 0000 10B5     		push	{r4, lr}
 656              	.LCFI16:
 657              		.cfi_def_cfa_offset 8
 658              		.cfi_offset 4, -8
 659              		.cfi_offset 14, -4
 660 0002 82B0     		sub	sp, sp, #8
 661              	.LCFI17:
 662              		.cfi_def_cfa_offset 16
 663 0004 0191     		str	r1, [sp, #4]
 137:Src/clock_rtc.c **** 	struct tm *gt;
 664              		.loc 1 137 2 is_stmt 1 view .LVU186
 138:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 665              		.loc 1 138 2 view .LVU187
 666              		.loc 1 138 4 is_stmt 0 view .LVU188
 667 0006 C0B1     		cbz	r0, .L40
 668 0008 0446     		mov	r4, r0
 139:Src/clock_rtc.c **** 	gt = localtime((const time_t*)&sec);
 669              		.loc 1 139 2 is_stmt 1 view .LVU189
 670              		.loc 1 139 7 is_stmt 0 view .LVU190
 671 000a 01A8     		add	r0, sp, #4
 672              	.LVL31:
 673              		.loc 1 139 7 view .LVU191
 674 000c FFF7FEFF 		bl	localtime
 675              	.LVL32:
 140:Src/clock_rtc.c **** 	t->sec = gt->tm_sec;
 676              		.loc 1 140 2 is_stmt 1 view .LVU192
 677              		.loc 1 140 13 is_stmt 0 view .LVU193
 678 0010 0368     		ldr	r3, [r0]
 679              		.loc 1 140 9 view .LVU194
 680 0012 E371     		strb	r3, [r4, #7]
 141:Src/clock_rtc.c **** 	t->min = gt->tm_min;
 681              		.loc 1 141 2 is_stmt 1 view .LVU195
 682              		.loc 1 141 13 is_stmt 0 view .LVU196
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 16


 683 0014 4368     		ldr	r3, [r0, #4]
 684              		.loc 1 141 9 view .LVU197
 685 0016 A371     		strb	r3, [r4, #6]
 142:Src/clock_rtc.c **** 	t->hour = gt->tm_hour;
 686              		.loc 1 142 2 is_stmt 1 view .LVU198
 687              		.loc 1 142 14 is_stmt 0 view .LVU199
 688 0018 8368     		ldr	r3, [r0, #8]
 689              		.loc 1 142 10 view .LVU200
 690 001a 6371     		strb	r3, [r4, #5]
 143:Src/clock_rtc.c **** 	t->mday = gt->tm_mday;
 691              		.loc 1 143 2 is_stmt 1 view .LVU201
 692              		.loc 1 143 14 is_stmt 0 view .LVU202
 693 001c C368     		ldr	r3, [r0, #12]
 694              		.loc 1 143 10 view .LVU203
 695 001e E370     		strb	r3, [r4, #3]
 144:Src/clock_rtc.c **** 	t->wday = gt->tm_wday + 1;			// tm_wday 0 - 6 (0 = sunday)
 696              		.loc 1 144 2 is_stmt 1 view .LVU204
 697              		.loc 1 144 14 is_stmt 0 view .LVU205
 698 0020 8369     		ldr	r3, [r0, #24]
 699              		.loc 1 144 24 view .LVU206
 700 0022 0133     		adds	r3, r3, #1
 701              		.loc 1 144 10 view .LVU207
 702 0024 2371     		strb	r3, [r4, #4]
 145:Src/clock_rtc.c **** 	t->month = gt->tm_mon + 1;			// tm_mon 0 - 11 (0 = Jan)
 703              		.loc 1 145 2 is_stmt 1 view .LVU208
 704              		.loc 1 145 15 is_stmt 0 view .LVU209
 705 0026 0369     		ldr	r3, [r0, #16]
 706              		.loc 1 145 24 view .LVU210
 707 0028 0133     		adds	r3, r3, #1
 708              		.loc 1 145 11 view .LVU211
 709 002a A370     		strb	r3, [r4, #2]
 146:Src/clock_rtc.c **** 	t->year = gt->tm_year + 1900;		// tm_year = current year - 1900
 710              		.loc 1 146 2 is_stmt 1 view .LVU212
 711              		.loc 1 146 14 is_stmt 0 view .LVU213
 712 002c 4369     		ldr	r3, [r0, #20]
 713              		.loc 1 146 10 view .LVU214
 714 002e 03F26C73 		addw	r3, r3, #1900
 715 0032 2380     		strh	r3, [r4]	@ unaligned
 147:Src/clock_rtc.c **** 	return 0;
 716              		.loc 1 147 2 is_stmt 1 view .LVU215
 717              		.loc 1 147 9 is_stmt 0 view .LVU216
 718 0034 0020     		movs	r0, #0
 719              	.LVL33:
 720              	.L39:
 148:Src/clock_rtc.c **** }...
 721              		.loc 1 148 1 view .LVU217
 722 0036 02B0     		add	sp, sp, #8
 723              	.LCFI18:
 724              		.cfi_remember_state
 725              		.cfi_def_cfa_offset 8
 726              		@ sp needed
 727 0038 10BD     		pop	{r4, pc}
 728              	.LVL34:
 729              	.L40:
 730              	.LCFI19:
 731              		.cfi_restore_state
 138:Src/clock_rtc.c **** 	if(t == NULL) return -1;
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 17


 732              		.loc 1 138 23 view .LVU218
 733 003a 4FF0FF30 		mov	r0, #-1
 734              	.LVL35:
 138:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 735              		.loc 1 138 23 view .LVU219
 736 003e FAE7     		b	.L39
 737              		.cfi_endproc
 738              	.LFE75:
 740              		.section	.text.TIME_AddSec,"ax",%progbits
 741              		.align	1
 742              		.global	TIME_AddSec
 743              		.syntax unified
 744              		.thumb
 745              		.thumb_func
 746              		.fpu softvfp
 748              	TIME_AddSec:
 749              	.LVL36:
 750              	.LFB73:
 111:Src/clock_rtc.c **** {
 751              		.loc 1 111 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 112:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 755              		.loc 1 112 2 view .LVU221
 112:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 756              		.loc 1 112 4 is_stmt 0 view .LVU222
 757 0000 68B1     		cbz	r0, .L44
 111:Src/clock_rtc.c **** {
 758              		.loc 1 111 1 view .LVU223
 759 0002 38B5     		push	{r3, r4, r5, lr}
 760              	.LCFI20:
 761              		.cfi_def_cfa_offset 16
 762              		.cfi_offset 3, -16
 763              		.cfi_offset 4, -12
 764              		.cfi_offset 5, -8
 765              		.cfi_offset 14, -4
 766 0004 0546     		mov	r5, r0
 113:Src/clock_rtc.c **** 	if(sec == 0) return 0;	
 767              		.loc 1 113 2 is_stmt 1 view .LVU224
 113:Src/clock_rtc.c **** 	if(sec == 0) return 0;	
 768              		.loc 1 113 4 is_stmt 0 view .LVU225
 769 0006 09B9     		cbnz	r1, .L50
 113:Src/clock_rtc.c **** 	if(sec == 0) return 0;	
 770              		.loc 1 113 22 view .LVU226
 771 0008 0020     		movs	r0, #0
 772              	.LVL37:
 773              	.L43:
 116:Src/clock_rtc.c **** }
 774              		.loc 1 116 1 view .LVU227
 775 000a 38BD     		pop	{r3, r4, r5, pc}
 776              	.LVL38:
 777              	.L50:
 116:Src/clock_rtc.c **** }
 778              		.loc 1 116 1 view .LVU228
 779 000c 0C46     		mov	r4, r1
 114:Src/clock_rtc.c **** 	TIME_FromSec(t, TIME_GetSec(t) + sec);	
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 18


 780              		.loc 1 114 2 is_stmt 1 view .LVU229
 114:Src/clock_rtc.c **** 	TIME_FromSec(t, TIME_GetSec(t) + sec);	
 781              		.loc 1 114 18 is_stmt 0 view .LVU230
 782 000e FFF7FEFF 		bl	TIME_GetSec
 783              	.LVL39:
 114:Src/clock_rtc.c **** 	TIME_FromSec(t, TIME_GetSec(t) + sec);	
 784              		.loc 1 114 2 view .LVU231
 785 0012 0119     		adds	r1, r0, r4
 786 0014 2846     		mov	r0, r5
 787 0016 FFF7FEFF 		bl	TIME_FromSec
 788              	.LVL40:
 115:Src/clock_rtc.c **** 	return 0;
 789              		.loc 1 115 2 is_stmt 1 view .LVU232
 115:Src/clock_rtc.c **** 	return 0;
 790              		.loc 1 115 9 is_stmt 0 view .LVU233
 791 001a 0020     		movs	r0, #0
 792 001c F5E7     		b	.L43
 793              	.LVL41:
 794              	.L44:
 795              	.LCFI21:
 796              		.cfi_def_cfa_offset 0
 797              		.cfi_restore 3
 798              		.cfi_restore 4
 799              		.cfi_restore 5
 800              		.cfi_restore 14
 112:Src/clock_rtc.c **** 	if(t == NULL) return -1;
 801              		.loc 1 112 23 view .LVU234
 802 001e 4FF0FF30 		mov	r0, #-1
 803              	.LVL42:
 116:Src/clock_rtc.c **** }
 804              		.loc 1 116 1 view .LVU235
 805 0022 7047     		bx	lr
 806              		.cfi_endproc
 807              	.LFE73:
 809              		.comm	timeRTC,4,4
 810              		.comm	hrtc,20,4
 811              		.comm	localTime,8,4
 812              		.section	.rodata.RTC_CalendarShow.str1.4,"aMS",%progbits,1
 813              		.align	2
 814              	.LC0:
 815 0000 44617465 		.ascii	"Date: %02d: %02d: %04d \012\000"
 815      3A202530 
 815      32643A20 
 815      25303264 
 815      3A202530 
 816 0019 000000   		.space	3
 817              	.LC1:
 818 001c 54696D65 		.ascii	"Time: %02d: %02d: %02d \012\000"
 818      3A202530 
 818      32643A20 
 818      25303264 
 818      3A202530 
 819              		.text
 820              	.Letext0:
 821              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 822              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 823              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 19


 824              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 825              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 826              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 827              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\lib\\gcc\\arm-none-eab
 828              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 829              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 830              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 831              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 832              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 833              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 834              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 835              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 836              		.file 17 "Inc/clock_rtc.h"
 837              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\includ
 838              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc_ex.h"
 839              		.file 20 "Inc/main.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\cc3npcow.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 clock_rtc.c
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:16     .text.RTC_GetUnixTimestamp:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:24     .text.RTC_GetUnixTimestamp:00000000 RTC_GetUnixTimestamp
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:98     .text.RTC_Sync:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:105    .text.RTC_Sync:00000000 RTC_Sync
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:153    .text.RTC_Sync:00000030 $d
                            *COM*:00000014 hrtc
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:158    .text.RTC_Init:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:165    .text.RTC_Init:00000000 RTC_Init
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:280    .text.RTC_Init:00000080 $d
                            *COM*:00000004 timeRTC
                            *COM*:00000008 localTime
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:290    .text.RTC_CalcTime:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:297    .text.RTC_CalcTime:00000000 RTC_CalcTime
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:379    .text.HAL_RTCEx_RTCEventCallback:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:386    .text.HAL_RTCEx_RTCEventCallback:00000000 HAL_RTCEx_RTCEventCallback
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:422    .text.HAL_RTCEx_RTCEventCallback:00000018 $d
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:427    .text.RTC_Now:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:434    .text.RTC_Now:00000000 RTC_Now
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:465    .text.RTC_Now:00000024 $d
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:471    .text.RTC_CalendarShow:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:478    .text.RTC_CalendarShow:00000000 RTC_CalendarShow
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:533    .text.RTC_CalendarShow:00000044 $d
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:541    .text.TIME_GetSec:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:548    .text.TIME_GetSec:00000000 TIME_GetSec
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:640    .text.TIME_FromSec:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:647    .text.TIME_FromSec:00000000 TIME_FromSec
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:741    .text.TIME_AddSec:00000000 $t
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:748    .text.TIME_AddSec:00000000 TIME_AddSec
C:\Users\behun\AppData\Local\Temp\cc3npcow.s:813    .rodata.RTC_CalendarShow.str1.4:00000000 $d

UNDEFINED SYMBOLS
mktime
RTC_WriteTimeCounter
HAL_GetTick
HAL_RTC_Init
HAL_RTCEx_BKUPRead
HAL_RTCEx_SetSecond_IT
Error_Handler
HAL_RTCEx_BKUPWrite
localtime
RTC_ReadTimeCounter
printf
