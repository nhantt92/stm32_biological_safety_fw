ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_message.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_draw_button_line,"ax",%progbits
  16              		.align	1
  17              		.global	u8x8_draw_button_line
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	u8x8_draw_button_line:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "u8g2/csrc/u8x8_message.c"
   1:u8g2/csrc/u8x8_message.c **** /*
   2:u8g2/csrc/u8x8_message.c **** 
   3:u8g2/csrc/u8x8_message.c ****   u8x8_message.c
   4:u8g2/csrc/u8x8_message.c ****   
   5:u8g2/csrc/u8x8_message.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8x8_message.c **** 
   7:u8g2/csrc/u8x8_message.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8x8_message.c ****   All rights reserved.
   9:u8g2/csrc/u8x8_message.c **** 
  10:u8g2/csrc/u8x8_message.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8x8_message.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8x8_message.c **** 
  13:u8g2/csrc/u8x8_message.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8x8_message.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8x8_message.c ****     
  16:u8g2/csrc/u8x8_message.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8x8_message.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8x8_message.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8x8_message.c **** 
  20:u8g2/csrc/u8x8_message.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8x8_message.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8x8_message.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8x8_message.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8x8_message.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8x8_message.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8x8_message.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8x8_message.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8x8_message.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8x8_message.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8x8_message.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8x8_message.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 2


  32:u8g2/csrc/u8x8_message.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8x8_message.c ****   
  34:u8g2/csrc/u8x8_message.c **** */
  35:u8g2/csrc/u8x8_message.c **** 
  36:u8g2/csrc/u8x8_message.c **** #include "u8x8.h"
  37:u8g2/csrc/u8x8_message.c **** 
  38:u8g2/csrc/u8x8_message.c **** uint8_t u8x8_draw_button_line(u8x8_t *u8x8, uint8_t y, uint8_t w, uint8_t cursor, const char *s)
  39:u8g2/csrc/u8x8_message.c **** {
  28              		.loc 1 39 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 39 1 is_stmt 0 view .LVU1
  33 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 40
  36              		.cfi_offset 3, -40
  37              		.cfi_offset 4, -36
  38              		.cfi_offset 5, -32
  39              		.cfi_offset 6, -28
  40              		.cfi_offset 7, -24
  41              		.cfi_offset 8, -20
  42              		.cfi_offset 9, -16
  43              		.cfi_offset 10, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
  46 0004 0646     		mov	r6, r0
  47 0006 8946     		mov	r9, r1
  48 0008 1446     		mov	r4, r2
  49 000a 9A46     		mov	r10, r3
  50 000c DDF82880 		ldr	r8, [sp, #40]
  40:u8g2/csrc/u8x8_message.c ****   uint8_t i;
  51              		.loc 1 40 3 is_stmt 1 view .LVU2
  41:u8g2/csrc/u8x8_message.c ****   uint8_t cnt;
  52              		.loc 1 41 3 view .LVU3
  42:u8g2/csrc/u8x8_message.c ****   uint8_t total;
  53              		.loc 1 42 3 view .LVU4
  43:u8g2/csrc/u8x8_message.c ****   uint8_t d;
  54              		.loc 1 43 3 view .LVU5
  44:u8g2/csrc/u8x8_message.c ****   uint8_t x;
  55              		.loc 1 44 3 view .LVU6
  45:u8g2/csrc/u8x8_message.c ****   cnt = u8x8_GetStringLineCnt(s);
  56              		.loc 1 45 3 view .LVU7
  57              		.loc 1 45 9 is_stmt 0 view .LVU8
  58 0010 4046     		mov	r0, r8
  59              	.LVL1:
  60              		.loc 1 45 9 view .LVU9
  61 0012 FFF7FEFF 		bl	u8x8_GetStringLineCnt
  62              	.LVL2:
  63              		.loc 1 45 9 view .LVU10
  64 0016 0746     		mov	r7, r0
  65              	.LVL3:
  46:u8g2/csrc/u8x8_message.c ****   
  47:u8g2/csrc/u8x8_message.c ****   /* calculate the width of the button */
  48:u8g2/csrc/u8x8_message.c ****   total = 0;
  66              		.loc 1 48 3 is_stmt 1 view .LVU11
  49:u8g2/csrc/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 3


  67              		.loc 1 49 3 view .LVU12
  48:u8g2/csrc/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
  68              		.loc 1 48 9 is_stmt 0 view .LVU13
  69 0018 4FF0000B 		mov	fp, #0
  70              		.loc 1 49 10 view .LVU14
  71 001c 5D46     		mov	r5, fp
  72              	.LVL4:
  73              	.L2:
  74              		.loc 1 49 3 discriminator 1 view .LVU15
  75 001e BD42     		cmp	r5, r7
  76 0020 0DD2     		bcs	.L10
  50:u8g2/csrc/u8x8_message.c ****   {
  51:u8g2/csrc/u8x8_message.c ****     total += u8x8_GetUTF8Len(u8x8, u8x8_GetStringLineStart(i, s));
  77              		.loc 1 51 5 is_stmt 1 discriminator 3 view .LVU16
  78              		.loc 1 51 14 is_stmt 0 discriminator 3 view .LVU17
  79 0022 4146     		mov	r1, r8
  80 0024 2846     		mov	r0, r5
  81 0026 FFF7FEFF 		bl	u8x8_GetStringLineStart
  82              	.LVL5:
  83 002a 0146     		mov	r1, r0
  84 002c 3046     		mov	r0, r6
  85 002e FFF7FEFF 		bl	u8x8_GetUTF8Len
  86              	.LVL6:
  87              		.loc 1 51 11 discriminator 3 view .LVU18
  88 0032 8344     		add	fp, fp, r0
  89              	.LVL7:
  90              		.loc 1 51 11 discriminator 3 view .LVU19
  91 0034 5FFA8BFB 		uxtb	fp, fp
  92              	.LVL8:
  49:u8g2/csrc/u8x8_message.c ****   {
  93              		.loc 1 49 25 discriminator 3 view .LVU20
  94 0038 0135     		adds	r5, r5, #1
  95              	.LVL9:
  49:u8g2/csrc/u8x8_message.c ****   {
  96              		.loc 1 49 25 discriminator 3 view .LVU21
  97 003a EDB2     		uxtb	r5, r5
  98              	.LVL10:
  49:u8g2/csrc/u8x8_message.c ****   {
  99              		.loc 1 49 25 discriminator 3 view .LVU22
 100 003c EFE7     		b	.L2
 101              	.L10:
  52:u8g2/csrc/u8x8_message.c ****   }
  53:u8g2/csrc/u8x8_message.c ****   total += (cnt-1);	/* had one space between the buttons */
 102              		.loc 1 53 3 is_stmt 1 view .LVU23
 103              		.loc 1 53 9 is_stmt 0 view .LVU24
 104 003e 0BEB0703 		add	r3, fp, r7
 105 0042 DBB2     		uxtb	r3, r3
 106 0044 013B     		subs	r3, r3, #1
 107 0046 DBB2     		uxtb	r3, r3
 108              	.LVL11:
  54:u8g2/csrc/u8x8_message.c ****   
  55:u8g2/csrc/u8x8_message.c ****   /* calculate the left offset */
  56:u8g2/csrc/u8x8_message.c ****   d = 0;
 109              		.loc 1 56 3 is_stmt 1 view .LVU25
  57:u8g2/csrc/u8x8_message.c ****   if ( total < w )
 110              		.loc 1 57 3 view .LVU26
 111              		.loc 1 57 6 is_stmt 0 view .LVU27
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 4


 112 0048 A342     		cmp	r3, r4
 113 004a 03D2     		bcs	.L8
  58:u8g2/csrc/u8x8_message.c ****   {
  59:u8g2/csrc/u8x8_message.c ****     d = w;
 114              		.loc 1 59 5 is_stmt 1 view .LVU28
 115              	.LVL12:
  60:u8g2/csrc/u8x8_message.c ****     d -= total;
 116              		.loc 1 60 5 view .LVU29
 117              		.loc 1 60 7 is_stmt 0 view .LVU30
 118 004c E41A     		subs	r4, r4, r3
 119              	.LVL13:
  61:u8g2/csrc/u8x8_message.c ****     d /= 2;
 120              		.loc 1 61 5 is_stmt 1 view .LVU31
 121              		.loc 1 61 7 is_stmt 0 view .LVU32
 122 004e C4F34604 		ubfx	r4, r4, #1, #7
 123              	.LVL14:
 124              		.loc 1 61 7 view .LVU33
 125 0052 00E0     		b	.L4
 126              	.LVL15:
 127              	.L8:
  56:u8g2/csrc/u8x8_message.c ****   if ( total < w )
 128              		.loc 1 56 5 view .LVU34
 129 0054 0024     		movs	r4, #0
 130              	.LVL16:
 131              	.L4:
  62:u8g2/csrc/u8x8_message.c ****   }
  63:u8g2/csrc/u8x8_message.c ****   
  64:u8g2/csrc/u8x8_message.c ****   /* draw the buttons */
  65:u8g2/csrc/u8x8_message.c ****   x = d;
 132              		.loc 1 65 3 is_stmt 1 view .LVU35
  66:u8g2/csrc/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 133              		.loc 1 66 3 view .LVU36
 134 0056 0025     		movs	r5, #0
 135              	.LVL17:
 136              		.loc 1 66 3 is_stmt 0 view .LVU37
 137 0058 F577     		strb	r5, [r6, #31]
  67:u8g2/csrc/u8x8_message.c ****   for( i = 0; i < cnt; i++ )
 138              		.loc 1 67 3 is_stmt 1 view .LVU38
 139              	.LVL18:
 140              		.loc 1 67 3 is_stmt 0 view .LVU39
 141 005a 19E0     		b	.L5
 142              	.LVL19:
 143              	.L12:
  68:u8g2/csrc/u8x8_message.c ****   {
  69:u8g2/csrc/u8x8_message.c ****     if ( i == cursor )
  70:u8g2/csrc/u8x8_message.c ****       u8x8_SetInverseFont(u8x8, 1);
 144              		.loc 1 70 7 is_stmt 1 view .LVU40
 145 005c 0123     		movs	r3, #1
 146 005e F377     		strb	r3, [r6, #31]
 147              	.L6:
  71:u8g2/csrc/u8x8_message.c ****       
  72:u8g2/csrc/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, u8x8_GetStringLineStart(i, s));
 148              		.loc 1 72 5 discriminator 2 view .LVU41
 149              		.loc 1 72 8 is_stmt 0 discriminator 2 view .LVU42
 150 0060 4146     		mov	r1, r8
 151 0062 2846     		mov	r0, r5
 152 0064 FFF7FEFF 		bl	u8x8_GetStringLineStart
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 5


 153              	.LVL20:
 154 0068 0346     		mov	r3, r0
 155 006a 4A46     		mov	r2, r9
 156 006c 2146     		mov	r1, r4
 157 006e 3046     		mov	r0, r6
 158 0070 FFF7FEFF 		bl	u8x8_DrawUTF8
 159              	.LVL21:
 160              		.loc 1 72 6 discriminator 2 view .LVU43
 161 0074 0444     		add	r4, r4, r0
 162              	.LVL22:
 163              		.loc 1 72 6 discriminator 2 view .LVU44
 164 0076 E4B2     		uxtb	r4, r4
 165              	.LVL23:
  73:u8g2/csrc/u8x8_message.c ****     u8x8_SetInverseFont(u8x8, 0);
 166              		.loc 1 73 5 is_stmt 1 discriminator 2 view .LVU45
 167 0078 0023     		movs	r3, #0
 168 007a F377     		strb	r3, [r6, #31]
  74:u8g2/csrc/u8x8_message.c ****     x+=u8x8_DrawUTF8(u8x8, x, y, " ");
 169              		.loc 1 74 5 discriminator 2 view .LVU46
 170              		.loc 1 74 8 is_stmt 0 discriminator 2 view .LVU47
 171 007c 084B     		ldr	r3, .L13
 172 007e 4A46     		mov	r2, r9
 173 0080 2146     		mov	r1, r4
 174 0082 3046     		mov	r0, r6
 175 0084 FFF7FEFF 		bl	u8x8_DrawUTF8
 176              	.LVL24:
 177              		.loc 1 74 6 discriminator 2 view .LVU48
 178 0088 0444     		add	r4, r4, r0
 179              	.LVL25:
 180              		.loc 1 74 6 discriminator 2 view .LVU49
 181 008a E4B2     		uxtb	r4, r4
 182              	.LVL26:
  67:u8g2/csrc/u8x8_message.c ****   {
 183              		.loc 1 67 25 discriminator 2 view .LVU50
 184 008c 0135     		adds	r5, r5, #1
 185              	.LVL27:
  67:u8g2/csrc/u8x8_message.c ****   {
 186              		.loc 1 67 25 discriminator 2 view .LVU51
 187 008e EDB2     		uxtb	r5, r5
 188              	.LVL28:
 189              	.L5:
  67:u8g2/csrc/u8x8_message.c ****   {
 190              		.loc 1 67 3 discriminator 1 view .LVU52
 191 0090 BD42     		cmp	r5, r7
 192 0092 02D2     		bcs	.L11
  69:u8g2/csrc/u8x8_message.c ****       u8x8_SetInverseFont(u8x8, 1);
 193              		.loc 1 69 5 is_stmt 1 view .LVU53
  69:u8g2/csrc/u8x8_message.c ****       u8x8_SetInverseFont(u8x8, 1);
 194              		.loc 1 69 8 is_stmt 0 view .LVU54
 195 0094 5545     		cmp	r5, r10
 196 0096 E3D1     		bne	.L6
 197 0098 E0E7     		b	.L12
 198              	.L11:
  75:u8g2/csrc/u8x8_message.c ****   }
  76:u8g2/csrc/u8x8_message.c ****   
  77:u8g2/csrc/u8x8_message.c ****   /* return the number of buttons */
  78:u8g2/csrc/u8x8_message.c ****   return cnt;
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 6


 199              		.loc 1 78 3 is_stmt 1 view .LVU55
  79:u8g2/csrc/u8x8_message.c **** }
 200              		.loc 1 79 1 is_stmt 0 view .LVU56
 201 009a 3846     		mov	r0, r7
 202 009c BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 203              	.LVL29:
 204              	.L14:
 205              		.loc 1 79 1 view .LVU57
 206              		.align	2
 207              	.L13:
 208 00a0 00000000 		.word	.LC0
 209              		.cfi_endproc
 210              	.LFE0:
 212              		.section	.text.u8x8_UserInterfaceMessage,"ax",%progbits
 213              		.align	1
 214              		.global	u8x8_UserInterfaceMessage
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu softvfp
 220              	u8x8_UserInterfaceMessage:
 221              	.LVL30:
 222              	.LFB1:
  80:u8g2/csrc/u8x8_message.c **** 
  81:u8g2/csrc/u8x8_message.c **** /*
  82:u8g2/csrc/u8x8_message.c ****   title1:	Multiple lines,separated by '\n'
  83:u8g2/csrc/u8x8_message.c ****   title2:	A single line/string which is terminated by '\0' or '\n' . "title2" accepts the return va
  84:u8g2/csrc/u8x8_message.c ****   title3:	Multiple lines,separated by '\n'
  85:u8g2/csrc/u8x8_message.c ****   buttons:	one more more buttons separated by '\n' and terminated with '\0'
  86:u8g2/csrc/u8x8_message.c **** */
  87:u8g2/csrc/u8x8_message.c **** 
  88:u8g2/csrc/u8x8_message.c **** uint8_t u8x8_UserInterfaceMessage(u8x8_t *u8x8, const char *title1, const char *title2, const char 
  89:u8g2/csrc/u8x8_message.c **** {
 223              		.loc 1 89 1 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 4, pretend = 0, frame = 0
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 227              		.loc 1 89 1 is_stmt 0 view .LVU59
 228 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 229              	.LCFI1:
 230              		.cfi_def_cfa_offset 28
 231              		.cfi_offset 4, -28
 232              		.cfi_offset 5, -24
 233              		.cfi_offset 6, -20
 234              		.cfi_offset 7, -16
 235              		.cfi_offset 8, -12
 236              		.cfi_offset 9, -8
 237              		.cfi_offset 14, -4
 238 0004 83B0     		sub	sp, sp, #12
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 40
 241 0006 0546     		mov	r5, r0
 242 0008 0E46     		mov	r6, r1
 243 000a 9046     		mov	r8, r2
 244 000c 9946     		mov	r9, r3
 245 000e 0A9F     		ldr	r7, [sp, #40]
  90:u8g2/csrc/u8x8_message.c ****   uint8_t height;
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 7


 246              		.loc 1 90 3 is_stmt 1 view .LVU60
  91:u8g2/csrc/u8x8_message.c ****   uint8_t y;
 247              		.loc 1 91 3 view .LVU61
  92:u8g2/csrc/u8x8_message.c ****   uint8_t cursor = 0;
 248              		.loc 1 92 3 view .LVU62
 249              	.LVL31:
  93:u8g2/csrc/u8x8_message.c ****   uint8_t button_cnt;
 250              		.loc 1 93 3 view .LVU63
  94:u8g2/csrc/u8x8_message.c ****   uint8_t event;
 251              		.loc 1 94 3 view .LVU64
  95:u8g2/csrc/u8x8_message.c **** 
  96:u8g2/csrc/u8x8_message.c ****   u8x8_SetInverseFont(u8x8, 0);
 252              		.loc 1 96 3 view .LVU65
 253 0010 0023     		movs	r3, #0
 254              	.LVL32:
 255              		.loc 1 96 3 is_stmt 0 view .LVU66
 256 0012 C377     		strb	r3, [r0, #31]
  97:u8g2/csrc/u8x8_message.c ****   
  98:u8g2/csrc/u8x8_message.c ****   /* calculate overall height of the message box */
  99:u8g2/csrc/u8x8_message.c ****   height = 1;	/* button line */
 257              		.loc 1 99 3 is_stmt 1 view .LVU67
 258              	.LVL33:
 100:u8g2/csrc/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title1);
 259              		.loc 1 100 3 view .LVU68
 260              		.loc 1 100 13 is_stmt 0 view .LVU69
 261 0014 0846     		mov	r0, r1
 262              	.LVL34:
 263              		.loc 1 100 13 view .LVU70
 264 0016 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 265              	.LVL35:
 266              		.loc 1 100 10 view .LVU71
 267 001a 441C     		adds	r4, r0, #1
 268 001c E4B2     		uxtb	r4, r4
 269              	.LVL36:
 101:u8g2/csrc/u8x8_message.c ****   if ( title2 != NULL )
 270              		.loc 1 101 3 is_stmt 1 view .LVU72
 271              		.loc 1 101 6 is_stmt 0 view .LVU73
 272 001e B8F1000F 		cmp	r8, #0
 273 0022 01D0     		beq	.L16
 102:u8g2/csrc/u8x8_message.c ****     height ++;
 274              		.loc 1 102 5 is_stmt 1 view .LVU74
 275              		.loc 1 102 12 is_stmt 0 view .LVU75
 276 0024 0230     		adds	r0, r0, #2
 277 0026 C4B2     		uxtb	r4, r0
 278              	.LVL37:
 279              	.L16:
 103:u8g2/csrc/u8x8_message.c ****   height += u8x8_GetStringLineCnt(title3);
 280              		.loc 1 103 3 is_stmt 1 view .LVU76
 281              		.loc 1 103 13 is_stmt 0 view .LVU77
 282 0028 4846     		mov	r0, r9
 283 002a FFF7FEFF 		bl	u8x8_GetStringLineCnt
 284              	.LVL38:
 285              		.loc 1 103 10 view .LVU78
 286 002e 2044     		add	r0, r0, r4
 287 0030 C0B2     		uxtb	r0, r0
 288              	.LVL39:
 104:u8g2/csrc/u8x8_message.c ****   
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 8


 105:u8g2/csrc/u8x8_message.c ****   /* calculate offset from top */
 106:u8g2/csrc/u8x8_message.c ****   y = 0;
 289              		.loc 1 106 3 is_stmt 1 view .LVU79
 107:u8g2/csrc/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
 290              		.loc 1 107 3 view .LVU80
 291              		.loc 1 107 17 is_stmt 0 view .LVU81
 292 0032 2B68     		ldr	r3, [r5]
 293 0034 5C7C     		ldrb	r4, [r3, #17]	@ zero_extendqisi2
 294              		.loc 1 107 6 view .LVU82
 295 0036 8442     		cmp	r4, r0
 296 0038 33D9     		bls	.L28
 108:u8g2/csrc/u8x8_message.c ****   {
 109:u8g2/csrc/u8x8_message.c ****     y = u8x8_GetRows(u8x8);
 297              		.loc 1 109 5 is_stmt 1 view .LVU83
 298              	.LVL40:
 110:u8g2/csrc/u8x8_message.c ****     y -= height;
 299              		.loc 1 110 5 view .LVU84
 300              		.loc 1 110 7 is_stmt 0 view .LVU85
 301 003a 241A     		subs	r4, r4, r0
 302              	.LVL41:
 111:u8g2/csrc/u8x8_message.c ****     y /= 2;
 303              		.loc 1 111 5 is_stmt 1 view .LVU86
 304              		.loc 1 111 7 is_stmt 0 view .LVU87
 305 003c C4F34604 		ubfx	r4, r4, #1, #7
 306              	.LVL42:
 307              	.L17:
 112:u8g2/csrc/u8x8_message.c ****   }
 113:u8g2/csrc/u8x8_message.c **** 
 114:u8g2/csrc/u8x8_message.c ****   /* draw message box */
 115:u8g2/csrc/u8x8_message.c ****   
 116:u8g2/csrc/u8x8_message.c ****   u8x8_ClearDisplay(u8x8);   /* required, because not everything is filled */
 308              		.loc 1 116 3 is_stmt 1 view .LVU88
 309 0040 2846     		mov	r0, r5
 310              	.LVL43:
 311              		.loc 1 116 3 is_stmt 0 view .LVU89
 312 0042 FFF7FEFF 		bl	u8x8_ClearDisplay
 313              	.LVL44:
 117:u8g2/csrc/u8x8_message.c ****   
 118:u8g2/csrc/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title1);
 314              		.loc 1 118 3 is_stmt 1 view .LVU90
 315              		.loc 1 118 39 is_stmt 0 view .LVU91
 316 0046 2B68     		ldr	r3, [r5]
 317              		.loc 1 118 8 view .LVU92
 318 0048 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 319 004a 0096     		str	r6, [sp]
 320 004c 2246     		mov	r2, r4
 321 004e 0021     		movs	r1, #0
 322 0050 2846     		mov	r0, r5
 323 0052 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 324              	.LVL45:
 325              		.loc 1 118 5 view .LVU93
 326 0056 2044     		add	r0, r0, r4
 327 0058 C6B2     		uxtb	r6, r0
 328              	.LVL46:
 119:u8g2/csrc/u8x8_message.c ****   if ( title2 != NULL )
 329              		.loc 1 119 3 is_stmt 1 view .LVU94
 330              		.loc 1 119 6 is_stmt 0 view .LVU95
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 9


 331 005a B8F1000F 		cmp	r8, #0
 332 005e 0AD0     		beq	.L18
 120:u8g2/csrc/u8x8_message.c ****   {
 121:u8g2/csrc/u8x8_message.c ****     u8x8_DrawUTF8Line(u8x8, 0, y, u8x8_GetCols(u8x8), title2);
 333              		.loc 1 121 5 is_stmt 1 view .LVU96
 334              		.loc 1 121 35 is_stmt 0 view .LVU97
 335 0060 2B68     		ldr	r3, [r5]
 336              		.loc 1 121 5 view .LVU98
 337 0062 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 338 0064 CDF80080 		str	r8, [sp]
 339 0068 3246     		mov	r2, r6
 340 006a 0021     		movs	r1, #0
 341 006c 2846     		mov	r0, r5
 342 006e FFF7FEFF 		bl	u8x8_DrawUTF8Line
 343              	.LVL47:
 122:u8g2/csrc/u8x8_message.c ****     y++;
 344              		.loc 1 122 5 is_stmt 1 view .LVU99
 345              		.loc 1 122 6 is_stmt 0 view .LVU100
 346 0072 0136     		adds	r6, r6, #1
 347              	.LVL48:
 348              		.loc 1 122 6 view .LVU101
 349 0074 F6B2     		uxtb	r6, r6
 350              	.LVL49:
 351              	.L18:
 123:u8g2/csrc/u8x8_message.c ****   }
 124:u8g2/csrc/u8x8_message.c ****   y += u8x8_DrawUTF8Lines(u8x8, 0, y, u8x8_GetCols(u8x8), title3);
 352              		.loc 1 124 3 is_stmt 1 view .LVU102
 353              		.loc 1 124 39 is_stmt 0 view .LVU103
 354 0076 2B68     		ldr	r3, [r5]
 355              		.loc 1 124 8 view .LVU104
 356 0078 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 357 007a CDF80090 		str	r9, [sp]
 358 007e 3246     		mov	r2, r6
 359 0080 0021     		movs	r1, #0
 360 0082 2846     		mov	r0, r5
 361 0084 FFF7FEFF 		bl	u8x8_DrawUTF8Lines
 362              	.LVL50:
 363              		.loc 1 124 5 view .LVU105
 364 0088 0644     		add	r6, r6, r0
 365              	.LVL51:
 366              		.loc 1 124 5 view .LVU106
 367 008a F6B2     		uxtb	r6, r6
 368              	.LVL52:
 125:u8g2/csrc/u8x8_message.c **** 
 126:u8g2/csrc/u8x8_message.c ****   button_cnt = u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 369              		.loc 1 126 3 is_stmt 1 view .LVU107
 370              		.loc 1 126 47 is_stmt 0 view .LVU108
 371 008c 2B68     		ldr	r3, [r5]
 372              		.loc 1 126 16 view .LVU109
 373 008e 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 374 0090 0097     		str	r7, [sp]
 375 0092 0023     		movs	r3, #0
 376 0094 3146     		mov	r1, r6
 377 0096 2846     		mov	r0, r5
 378 0098 FFF7FEFF 		bl	u8x8_draw_button_line
 379              	.LVL53:
 380 009c 8046     		mov	r8, r0
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 10


 381              	.LVL54:
  92:u8g2/csrc/u8x8_message.c ****   uint8_t button_cnt;
 382              		.loc 1 92 11 view .LVU110
 383 009e 0024     		movs	r4, #0
 384 00a0 13E0     		b	.L19
 385              	.LVL55:
 386              	.L28:
 106:u8g2/csrc/u8x8_message.c ****   if ( height < u8x8_GetRows(u8x8)  )
 387              		.loc 1 106 5 view .LVU111
 388 00a2 0024     		movs	r4, #0
 389 00a4 CCE7     		b	.L17
 390              	.LVL56:
 391              	.L33:
 127:u8g2/csrc/u8x8_message.c ****   
 128:u8g2/csrc/u8x8_message.c ****   for(;;)
 129:u8g2/csrc/u8x8_message.c ****   {
 130:u8g2/csrc/u8x8_message.c ****     event = u8x8_GetMenuEvent(u8x8);
 131:u8g2/csrc/u8x8_message.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 132:u8g2/csrc/u8x8_message.c ****       return cursor+1;
 392              		.loc 1 132 7 is_stmt 1 view .LVU112
 393              		.loc 1 132 20 is_stmt 0 view .LVU113
 394 00a6 601C     		adds	r0, r4, #1
 395              	.LVL57:
 396              		.loc 1 132 20 view .LVU114
 397 00a8 C0B2     		uxtb	r0, r0
 398              	.L21:
 133:u8g2/csrc/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_HOME )
 134:u8g2/csrc/u8x8_message.c ****       break;
 135:u8g2/csrc/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 136:u8g2/csrc/u8x8_message.c ****     {
 137:u8g2/csrc/u8x8_message.c ****       cursor++;
 138:u8g2/csrc/u8x8_message.c ****       if ( cursor >= button_cnt )
 139:u8g2/csrc/u8x8_message.c **** 	cursor = 0;
 140:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 141:u8g2/csrc/u8x8_message.c ****     }
 142:u8g2/csrc/u8x8_message.c ****     else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN  )
 143:u8g2/csrc/u8x8_message.c ****     {
 144:u8g2/csrc/u8x8_message.c ****       if ( cursor == 0 )
 145:u8g2/csrc/u8x8_message.c **** 	cursor = button_cnt;
 146:u8g2/csrc/u8x8_message.c ****       cursor--;
 147:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 148:u8g2/csrc/u8x8_message.c ****     }    
 149:u8g2/csrc/u8x8_message.c ****   }  
 150:u8g2/csrc/u8x8_message.c ****   return 0;
 151:u8g2/csrc/u8x8_message.c **** }
 399              		.loc 1 151 1 view .LVU115
 400 00aa 03B0     		add	sp, sp, #12
 401              	.LCFI3:
 402              		.cfi_remember_state
 403              		.cfi_def_cfa_offset 28
 404              		@ sp needed
 405 00ac BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 406              	.LVL58:
 407              	.L22:
 408              	.LCFI4:
 409              		.cfi_restore_state
 137:u8g2/csrc/u8x8_message.c ****       if ( cursor >= button_cnt )
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 11


 410              		.loc 1 137 7 is_stmt 1 view .LVU116
 137:u8g2/csrc/u8x8_message.c ****       if ( cursor >= button_cnt )
 411              		.loc 1 137 13 is_stmt 0 view .LVU117
 412 00b0 0134     		adds	r4, r4, #1
 413              	.LVL59:
 137:u8g2/csrc/u8x8_message.c ****       if ( cursor >= button_cnt )
 414              		.loc 1 137 13 view .LVU118
 415 00b2 E4B2     		uxtb	r4, r4
 416              	.LVL60:
 138:u8g2/csrc/u8x8_message.c **** 	cursor = 0;
 417              		.loc 1 138 7 is_stmt 1 view .LVU119
 138:u8g2/csrc/u8x8_message.c **** 	cursor = 0;
 418              		.loc 1 138 10 is_stmt 0 view .LVU120
 419 00b4 A045     		cmp	r8, r4
 420 00b6 00D8     		bhi	.L24
 139:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 421              		.loc 1 139 9 view .LVU121
 422 00b8 0024     		movs	r4, #0
 423              	.LVL61:
 424              	.L24:
 140:u8g2/csrc/u8x8_message.c ****     }
 425              		.loc 1 140 7 is_stmt 1 view .LVU122
 140:u8g2/csrc/u8x8_message.c ****     }
 426              		.loc 1 140 38 is_stmt 0 view .LVU123
 427 00ba 2B68     		ldr	r3, [r5]
 140:u8g2/csrc/u8x8_message.c ****     }
 428              		.loc 1 140 7 view .LVU124
 429 00bc 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 430 00be 0097     		str	r7, [sp]
 431 00c0 2346     		mov	r3, r4
 432 00c2 3146     		mov	r1, r6
 433 00c4 2846     		mov	r0, r5
 434              	.LVL62:
 140:u8g2/csrc/u8x8_message.c ****     }
 435              		.loc 1 140 7 view .LVU125
 436 00c6 FFF7FEFF 		bl	u8x8_draw_button_line
 437              	.LVL63:
 438              	.L19:
 128:u8g2/csrc/u8x8_message.c ****   {
 439              		.loc 1 128 3 is_stmt 1 view .LVU126
 130:u8g2/csrc/u8x8_message.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 440              		.loc 1 130 5 view .LVU127
 130:u8g2/csrc/u8x8_message.c ****     if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 441              		.loc 1 130 13 is_stmt 0 view .LVU128
 442 00ca 2846     		mov	r0, r5
 443 00cc FFF7FEFF 		bl	u8x8_GetMenuEvent
 444              	.LVL64:
 131:u8g2/csrc/u8x8_message.c ****       return cursor+1;
 445              		.loc 1 131 5 is_stmt 1 view .LVU129
 131:u8g2/csrc/u8x8_message.c ****       return cursor+1;
 446              		.loc 1 131 8 is_stmt 0 view .LVU130
 447 00d0 5028     		cmp	r0, #80
 448 00d2 E8D0     		beq	.L33
 133:u8g2/csrc/u8x8_message.c ****       break;
 449              		.loc 1 133 10 is_stmt 1 view .LVU131
 133:u8g2/csrc/u8x8_message.c ****       break;
 450              		.loc 1 133 13 is_stmt 0 view .LVU132
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 12


 451 00d4 5328     		cmp	r0, #83
 452 00d6 14D0     		beq	.L29
 135:u8g2/csrc/u8x8_message.c ****     {
 453              		.loc 1 135 10 is_stmt 1 view .LVU133
 135:u8g2/csrc/u8x8_message.c ****     {
 454              		.loc 1 135 13 is_stmt 0 view .LVU134
 455 00d8 5128     		cmp	r0, #81
 456 00da E9D0     		beq	.L22
 135:u8g2/csrc/u8x8_message.c ****     {
 457              		.loc 1 135 48 discriminator 1 view .LVU135
 458 00dc 5428     		cmp	r0, #84
 459 00de E7D0     		beq	.L22
 142:u8g2/csrc/u8x8_message.c ****     {
 460              		.loc 1 142 10 is_stmt 1 view .LVU136
 142:u8g2/csrc/u8x8_message.c ****     {
 461              		.loc 1 142 13 is_stmt 0 view .LVU137
 462 00e0 5228     		cmp	r0, #82
 463 00e2 01D0     		beq	.L26
 142:u8g2/csrc/u8x8_message.c ****     {
 464              		.loc 1 142 48 discriminator 1 view .LVU138
 465 00e4 5528     		cmp	r0, #85
 466 00e6 F0D1     		bne	.L19
 467              	.L26:
 144:u8g2/csrc/u8x8_message.c **** 	cursor = button_cnt;
 468              		.loc 1 144 7 is_stmt 1 view .LVU139
 144:u8g2/csrc/u8x8_message.c **** 	cursor = button_cnt;
 469              		.loc 1 144 10 is_stmt 0 view .LVU140
 470 00e8 04B9     		cbnz	r4, .L27
 145:u8g2/csrc/u8x8_message.c ****       cursor--;
 471              		.loc 1 145 9 view .LVU141
 472 00ea 4446     		mov	r4, r8
 473              	.LVL65:
 474              	.L27:
 146:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 475              		.loc 1 146 7 is_stmt 1 view .LVU142
 146:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 476              		.loc 1 146 13 is_stmt 0 view .LVU143
 477 00ec 013C     		subs	r4, r4, #1
 478              	.LVL66:
 146:u8g2/csrc/u8x8_message.c ****       u8x8_draw_button_line(u8x8, y, u8x8_GetCols(u8x8), cursor, buttons);
 479              		.loc 1 146 13 view .LVU144
 480 00ee E4B2     		uxtb	r4, r4
 481              	.LVL67:
 147:u8g2/csrc/u8x8_message.c ****     }    
 482              		.loc 1 147 7 is_stmt 1 view .LVU145
 147:u8g2/csrc/u8x8_message.c ****     }    
 483              		.loc 1 147 38 is_stmt 0 view .LVU146
 484 00f0 2B68     		ldr	r3, [r5]
 147:u8g2/csrc/u8x8_message.c ****     }    
 485              		.loc 1 147 7 view .LVU147
 486 00f2 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 487 00f4 0097     		str	r7, [sp]
 488 00f6 2346     		mov	r3, r4
 489 00f8 3146     		mov	r1, r6
 490 00fa 2846     		mov	r0, r5
 491              	.LVL68:
 147:u8g2/csrc/u8x8_message.c ****     }    
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 13


 492              		.loc 1 147 7 view .LVU148
 493 00fc FFF7FEFF 		bl	u8x8_draw_button_line
 494              	.LVL69:
 495 0100 E3E7     		b	.L19
 496              	.LVL70:
 497              	.L29:
 150:u8g2/csrc/u8x8_message.c **** }
 498              		.loc 1 150 10 view .LVU149
 499 0102 0020     		movs	r0, #0
 500              	.LVL71:
 150:u8g2/csrc/u8x8_message.c **** }
 501              		.loc 1 150 10 view .LVU150
 502 0104 D1E7     		b	.L21
 503              		.cfi_endproc
 504              	.LFE1:
 506              		.section	.rodata.u8x8_draw_button_line.str1.4,"aMS",%progbits,1
 507              		.align	2
 508              	.LC0:
 509 0000 2000     		.ascii	" \000"
 510              		.text
 511              	.Letext0:
 512              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 513              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 514              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_message.c
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:16     .text.u8x8_draw_button_line:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:24     .text.u8x8_draw_button_line:00000000 u8x8_draw_button_line
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:208    .text.u8x8_draw_button_line:000000a0 $d
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:213    .text.u8x8_UserInterfaceMessage:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:220    .text.u8x8_UserInterfaceMessage:00000000 u8x8_UserInterfaceMessage
C:\Users\behun\AppData\Local\Temp\ccPnGDnz.s:507    .rodata.u8x8_draw_button_line.str1.4:00000000 $d

UNDEFINED SYMBOLS
u8x8_GetStringLineCnt
u8x8_GetStringLineStart
u8x8_GetUTF8Len
u8x8_DrawUTF8
u8x8_ClearDisplay
u8x8_DrawUTF8Lines
u8x8_DrawUTF8Line
u8x8_GetMenuEvent
