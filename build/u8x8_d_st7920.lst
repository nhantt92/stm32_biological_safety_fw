ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8x8_d_st7920.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8x8_d_st7920_common,"ax",%progbits
  16              		.align	1
  17              		.global	u8x8_d_st7920_common
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	u8x8_d_st7920_common:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "u8g2/csrc/u8x8_d_st7920.c"
   1:u8g2/csrc/u8x8_d_st7920.c **** /*
   2:u8g2/csrc/u8x8_d_st7920.c **** 
   3:u8g2/csrc/u8x8_d_st7920.c ****   u8x8_d_st7920.c
   4:u8g2/csrc/u8x8_d_st7920.c ****   
   5:u8g2/csrc/u8x8_d_st7920.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8x8_d_st7920.c **** 
   7:u8g2/csrc/u8x8_d_st7920.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8x8_d_st7920.c ****   All rights reserved.
   9:u8g2/csrc/u8x8_d_st7920.c **** 
  10:u8g2/csrc/u8x8_d_st7920.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8x8_d_st7920.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8x8_d_st7920.c **** 
  13:u8g2/csrc/u8x8_d_st7920.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8x8_d_st7920.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8x8_d_st7920.c ****     
  16:u8g2/csrc/u8x8_d_st7920.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8x8_d_st7920.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8x8_d_st7920.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8x8_d_st7920.c **** 
  20:u8g2/csrc/u8x8_d_st7920.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8x8_d_st7920.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8x8_d_st7920.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8x8_d_st7920.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8x8_d_st7920.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8x8_d_st7920.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8x8_d_st7920.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8x8_d_st7920.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8x8_d_st7920.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8x8_d_st7920.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8x8_d_st7920.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8x8_d_st7920.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 2


  32:u8g2/csrc/u8x8_d_st7920.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8x8_d_st7920.c **** 
  34:u8g2/csrc/u8x8_d_st7920.c **** 
  35:u8g2/csrc/u8x8_d_st7920.c ****   The ST7920 controller does not support hardware graphics flip.
  36:u8g2/csrc/u8x8_d_st7920.c ****   Contrast adjustment is done by an external resistor --> no support for contrast adjustment
  37:u8g2/csrc/u8x8_d_st7920.c ****   
  38:u8g2/csrc/u8x8_d_st7920.c ****   
  39:u8g2/csrc/u8x8_d_st7920.c **** */
  40:u8g2/csrc/u8x8_d_st7920.c **** #include "u8x8.h"
  41:u8g2/csrc/u8x8_d_st7920.c **** 
  42:u8g2/csrc/u8x8_d_st7920.c **** 
  43:u8g2/csrc/u8x8_d_st7920.c **** 
  44:u8g2/csrc/u8x8_d_st7920.c **** static const uint8_t u8x8_d_st7920_init_seq[] = {
  45:u8g2/csrc/u8x8_d_st7920.c ****     
  46:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_DLY(100),
  47:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_START_TRANSFER(),             	/* enable chip, delay is part of the transfer start */
  48:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_DLY(10),
  49:u8g2/csrc/u8x8_d_st7920.c ****   
  50:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x038),            			/* 8 Bit interface (DL=1), basic instruction set (RE=0) */
  51:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x008),		                /* display on, cursor & blink off; 0x08: all off */
  52:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x006),		                /* Entry mode: Cursor move to right ,DDRAM address counter (AC) p
  53:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x002),		                /* disable scroll, enable CGRAM adress  */
  54:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x001),		                /* clear RAM, needs 1.6 ms */
  55:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_DLY(4),					/* delay 2ms */
  56:u8g2/csrc/u8x8_d_st7920.c **** 
  57:u8g2/csrc/u8x8_d_st7920.c ****   
  58:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END_TRANSFER(),             	/* disable chip */
  59:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END()             			/* end of sequence */
  60:u8g2/csrc/u8x8_d_st7920.c **** };
  61:u8g2/csrc/u8x8_d_st7920.c **** 
  62:u8g2/csrc/u8x8_d_st7920.c **** static const uint8_t u8x8_d_st7920_powersave0_seq[] = {
  63:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_START_TRANSFER(),             	/* enable chip, delay is part of the transfer start */
  64:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x038),            			/* 8 Bit interface (DL=1), basic instruction set (RE=0) */
  65:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x00c),		                /* display on, cursor & blink off */
  66:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END_TRANSFER(),             	/* disable chip */
  67:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END()             			/* end of sequence */
  68:u8g2/csrc/u8x8_d_st7920.c **** };
  69:u8g2/csrc/u8x8_d_st7920.c **** 
  70:u8g2/csrc/u8x8_d_st7920.c **** static const uint8_t u8x8_d_st7920_powersave1_seq[] = {
  71:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_START_TRANSFER(),             	/* enable chip, delay is part of the transfer start */
  72:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x038),            			/* 8 Bit interface (DL=1), basic instruction set (RE=0) */
  73:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_C(0x008),		                /* display off */
  74:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END_TRANSFER(),             	/* disable chip */
  75:u8g2/csrc/u8x8_d_st7920.c ****   U8X8_END()             			/* end of sequence */
  76:u8g2/csrc/u8x8_d_st7920.c **** };
  77:u8g2/csrc/u8x8_d_st7920.c **** 
  78:u8g2/csrc/u8x8_d_st7920.c **** 
  79:u8g2/csrc/u8x8_d_st7920.c **** uint8_t u8x8_d_st7920_common(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
  80:u8g2/csrc/u8x8_d_st7920.c **** {
  28              		.loc 1 80 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 80 1 is_stmt 0 view .LVU1
  33 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 3


  36              		.cfi_offset 4, -32
  37              		.cfi_offset 5, -28
  38              		.cfi_offset 6, -24
  39              		.cfi_offset 7, -20
  40              		.cfi_offset 8, -16
  41              		.cfi_offset 9, -12
  42              		.cfi_offset 10, -8
  43              		.cfi_offset 14, -4
  44 0004 0546     		mov	r5, r0
  81:u8g2/csrc/u8x8_d_st7920.c ****   uint8_t x, y, c, i;
  45              		.loc 1 81 3 is_stmt 1 view .LVU2
  82:u8g2/csrc/u8x8_d_st7920.c ****   uint8_t *ptr;
  46              		.loc 1 82 3 view .LVU3
  83:u8g2/csrc/u8x8_d_st7920.c ****   switch(msg)
  47              		.loc 1 83 3 view .LVU4
  48 0006 0B29     		cmp	r1, #11
  49 0008 0FD0     		beq	.L2
  50 000a 9846     		mov	r8, r3
  51 000c 0F29     		cmp	r1, #15
  52 000e 17D0     		beq	.L3
  53 0010 0A29     		cmp	r1, #10
  54 0012 02D0     		beq	.L11
  84:u8g2/csrc/u8x8_d_st7920.c ****   {
  85:u8g2/csrc/u8x8_d_st7920.c ****     /* U8X8_MSG_DISPLAY_SETUP_MEMORY is handled by the calling function */
  86:u8g2/csrc/u8x8_d_st7920.c ****     /*
  87:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SETUP_MEMORY:
  88:u8g2/csrc/u8x8_d_st7920.c ****       break;
  89:u8g2/csrc/u8x8_d_st7920.c ****     */
  90:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_INIT:
  91:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_d_helper_display_init(u8x8);
  92:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_init_seq);
  93:u8g2/csrc/u8x8_d_st7920.c ****       break;
  94:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
  95:u8g2/csrc/u8x8_d_st7920.c ****       if ( arg_int == 0 )
  96:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_powersave0_seq);
  97:u8g2/csrc/u8x8_d_st7920.c ****       else
  98:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_powersave1_seq);
  99:u8g2/csrc/u8x8_d_st7920.c ****       break;
 100:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_DRAW_TILE:
 101:u8g2/csrc/u8x8_d_st7920.c ****       y = (((u8x8_tile_t *)arg_ptr)->y_pos);
 102:u8g2/csrc/u8x8_d_st7920.c ****       y*=8;
 103:u8g2/csrc/u8x8_d_st7920.c ****       x = ((u8x8_tile_t *)arg_ptr)->x_pos;
 104:u8g2/csrc/u8x8_d_st7920.c ****       x /= 2;		/* not sure whether this is a clever idea, problem is, the ST7920 can address only e
 105:u8g2/csrc/u8x8_d_st7920.c ****     
 106:u8g2/csrc/u8x8_d_st7920.c ****       if ( y >= 32 )	/* this is the adjustment for 128x64 displays */
 107:u8g2/csrc/u8x8_d_st7920.c ****       {
 108:u8g2/csrc/u8x8_d_st7920.c **** 	y-=32;
 109:u8g2/csrc/u8x8_d_st7920.c **** 	x+=8;
 110:u8g2/csrc/u8x8_d_st7920.c ****       }
 111:u8g2/csrc/u8x8_d_st7920.c ****     
 112:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_cad_StartTransfer(u8x8);
 113:u8g2/csrc/u8x8_d_st7920.c ****         
 114:u8g2/csrc/u8x8_d_st7920.c **** 
 115:u8g2/csrc/u8x8_d_st7920.c ****       /* 
 116:u8g2/csrc/u8x8_d_st7920.c **** 	Tile structure is reused here for the ST7920, however u8x8 is not supported 
 117:u8g2/csrc/u8x8_d_st7920.c **** 	tile_ptr points to data which has cnt*8 bytes (same as SSD1306 tiles)
 118:u8g2/csrc/u8x8_d_st7920.c **** 	Buffer is expected to have 8 lines of code fitting to the ST7920 internal memory
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 4


 119:u8g2/csrc/u8x8_d_st7920.c **** 	"cnt" includes the number of horizontal bytes. width is equal to cnt*8
 120:u8g2/csrc/u8x8_d_st7920.c **** 	Also important: Width must be a multiple of 16 (ST7920 requirement), so cnt must be even.
 121:u8g2/csrc/u8x8_d_st7920.c **** 	
 122:u8g2/csrc/u8x8_d_st7920.c **** 	TODO: Consider arg_int, however arg_int is not used by u8g2
 123:u8g2/csrc/u8x8_d_st7920.c ****       */
 124:u8g2/csrc/u8x8_d_st7920.c ****       c = ((u8x8_tile_t *)arg_ptr)->cnt;	/* number of tiles */
 125:u8g2/csrc/u8x8_d_st7920.c ****       ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;	/* data ptr to the tiles */
 126:u8g2/csrc/u8x8_d_st7920.c ****       /* The following byte is sent to allow the ST7920 to sync up with the data */
 127:u8g2/csrc/u8x8_d_st7920.c ****       /* it solves some issues with garbage data */
 128:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_cad_SendCmd(u8x8, 0x03e );	/* enable extended mode */
 129:u8g2/csrc/u8x8_d_st7920.c ****       for( i = 0; i < 8; i++ )
 130:u8g2/csrc/u8x8_d_st7920.c ****       {
 131:u8g2/csrc/u8x8_d_st7920.c **** 	//u8x8_cad_SendCmd(u8x8, 0x03e );	/* enable extended mode */
 132:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | (y+i) );      /* y pos  */
 133:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | x );      /* set x pos */
 134:u8g2/csrc/u8x8_d_st7920.c **** 	c = ((u8x8_tile_t *)arg_ptr)->cnt;	/* number of tiles */
 135:u8g2/csrc/u8x8_d_st7920.c **** 
 136:u8g2/csrc/u8x8_d_st7920.c **** 	//u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, 200, NULL);	/* extra dely required */
 137:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendData(u8x8, c, ptr);	/* note: SendData can not handle more than 255 bytes, send one li
 138:u8g2/csrc/u8x8_d_st7920.c **** 	ptr += c;
 139:u8g2/csrc/u8x8_d_st7920.c **** 	//u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, 200, NULL);	/* extra dely required */
 140:u8g2/csrc/u8x8_d_st7920.c ****       }
 141:u8g2/csrc/u8x8_d_st7920.c **** 
 142:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_cad_EndTransfer(u8x8);
 143:u8g2/csrc/u8x8_d_st7920.c **** 
 144:u8g2/csrc/u8x8_d_st7920.c ****       break;
 145:u8g2/csrc/u8x8_d_st7920.c ****     default:
 146:u8g2/csrc/u8x8_d_st7920.c ****       return 0;
  55              		.loc 1 146 14 is_stmt 0 view .LVU5
  56 0014 0020     		movs	r0, #0
  57              	.LVL1:
  58              	.L4:
 147:u8g2/csrc/u8x8_d_st7920.c ****   }
 148:u8g2/csrc/u8x8_d_st7920.c ****   return 1;
 149:u8g2/csrc/u8x8_d_st7920.c **** }
  59              		.loc 1 149 1 view .LVU6
  60 0016 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
  61              	.LVL2:
  62              	.L11:
  91:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_init_seq);
  63              		.loc 1 91 7 is_stmt 1 view .LVU7
  64 001a FFF7FEFF 		bl	u8x8_d_helper_display_init
  65              	.LVL3:
  92:u8g2/csrc/u8x8_d_st7920.c ****       break;
  66              		.loc 1 92 7 view .LVU8
  67 001e 2349     		ldr	r1, .L12
  68 0020 2846     		mov	r0, r5
  69 0022 FFF7FEFF 		bl	u8x8_cad_SendSequence
  70              	.LVL4:
  93:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
  71              		.loc 1 93 7 view .LVU9
 148:u8g2/csrc/u8x8_d_st7920.c **** }
  72              		.loc 1 148 10 is_stmt 0 view .LVU10
  73 0026 0120     		movs	r0, #1
  93:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SET_POWER_SAVE:
  74              		.loc 1 93 7 view .LVU11
  75 0028 F5E7     		b	.L4
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 5


  76              	.LVL5:
  77              	.L2:
  95:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_powersave0_seq);
  78              		.loc 1 95 7 is_stmt 1 view .LVU12
  95:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendSequence(u8x8, u8x8_d_st7920_powersave0_seq);
  79              		.loc 1 95 10 is_stmt 0 view .LVU13
  80 002a 22B9     		cbnz	r2, .L5
  96:u8g2/csrc/u8x8_d_st7920.c ****       else
  81              		.loc 1 96 2 is_stmt 1 view .LVU14
  82 002c 2049     		ldr	r1, .L12+4
  83              	.LVL6:
  96:u8g2/csrc/u8x8_d_st7920.c ****       else
  84              		.loc 1 96 2 is_stmt 0 view .LVU15
  85 002e FFF7FEFF 		bl	u8x8_cad_SendSequence
  86              	.LVL7:
 148:u8g2/csrc/u8x8_d_st7920.c **** }
  87              		.loc 1 148 10 view .LVU16
  88 0032 0120     		movs	r0, #1
  89 0034 EFE7     		b	.L4
  90              	.LVL8:
  91              	.L5:
  98:u8g2/csrc/u8x8_d_st7920.c ****       break;
  92              		.loc 1 98 2 is_stmt 1 view .LVU17
  93 0036 1F49     		ldr	r1, .L12+8
  94              	.LVL9:
  98:u8g2/csrc/u8x8_d_st7920.c ****       break;
  95              		.loc 1 98 2 is_stmt 0 view .LVU18
  96 0038 FFF7FEFF 		bl	u8x8_cad_SendSequence
  97              	.LVL10:
 148:u8g2/csrc/u8x8_d_st7920.c **** }
  98              		.loc 1 148 10 view .LVU19
  99 003c 0120     		movs	r0, #1
 100 003e EAE7     		b	.L4
 101              	.LVL11:
 102              	.L3:
 101:u8g2/csrc/u8x8_d_st7920.c ****       y*=8;
 103              		.loc 1 101 7 is_stmt 1 view .LVU20
 101:u8g2/csrc/u8x8_d_st7920.c ****       y*=8;
 104              		.loc 1 101 9 is_stmt 0 view .LVU21
 105 0040 9F79     		ldrb	r7, [r3, #6]	@ zero_extendqisi2
 106              	.LVL12:
 102:u8g2/csrc/u8x8_d_st7920.c ****       x = ((u8x8_tile_t *)arg_ptr)->x_pos;
 107              		.loc 1 102 7 is_stmt 1 view .LVU22
 102:u8g2/csrc/u8x8_d_st7920.c ****       x = ((u8x8_tile_t *)arg_ptr)->x_pos;
 108              		.loc 1 102 8 is_stmt 0 view .LVU23
 109 0042 FF00     		lsls	r7, r7, #3
 110              	.LVL13:
 102:u8g2/csrc/u8x8_d_st7920.c ****       x = ((u8x8_tile_t *)arg_ptr)->x_pos;
 111              		.loc 1 102 8 view .LVU24
 112 0044 FFB2     		uxtb	r7, r7
 113              	.LVL14:
 103:u8g2/csrc/u8x8_d_st7920.c ****       x /= 2;		/* not sure whether this is a clever idea, problem is, the ST7920 can address only e
 114              		.loc 1 103 7 is_stmt 1 view .LVU25
 103:u8g2/csrc/u8x8_d_st7920.c ****       x /= 2;		/* not sure whether this is a clever idea, problem is, the ST7920 can address only e
 115              		.loc 1 103 9 is_stmt 0 view .LVU26
 116 0046 93F80590 		ldrb	r9, [r3, #5]	@ zero_extendqisi2
 117              	.LVL15:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 6


 104:u8g2/csrc/u8x8_d_st7920.c ****     
 118              		.loc 1 104 7 is_stmt 1 view .LVU27
 104:u8g2/csrc/u8x8_d_st7920.c ****     
 119              		.loc 1 104 9 is_stmt 0 view .LVU28
 120 004a 4FEA5909 		lsr	r9, r9, #1
 121              	.LVL16:
 106:u8g2/csrc/u8x8_d_st7920.c ****       {
 122              		.loc 1 106 7 is_stmt 1 view .LVU29
 106:u8g2/csrc/u8x8_d_st7920.c ****       {
 123              		.loc 1 106 10 is_stmt 0 view .LVU30
 124 004e 1F2F     		cmp	r7, #31
 125 0050 03D9     		bls	.L6
 108:u8g2/csrc/u8x8_d_st7920.c **** 	x+=8;
 126              		.loc 1 108 2 is_stmt 1 view .LVU31
 108:u8g2/csrc/u8x8_d_st7920.c **** 	x+=8;
 127              		.loc 1 108 3 is_stmt 0 view .LVU32
 128 0052 203F     		subs	r7, r7, #32
 129              	.LVL17:
 108:u8g2/csrc/u8x8_d_st7920.c **** 	x+=8;
 130              		.loc 1 108 3 view .LVU33
 131 0054 FFB2     		uxtb	r7, r7
 132              	.LVL18:
 109:u8g2/csrc/u8x8_d_st7920.c ****       }
 133              		.loc 1 109 2 is_stmt 1 view .LVU34
 109:u8g2/csrc/u8x8_d_st7920.c ****       }
 134              		.loc 1 109 3 is_stmt 0 view .LVU35
 135 0056 09F10809 		add	r9, r9, #8
 136              	.LVL19:
 137              	.L6:
 112:u8g2/csrc/u8x8_d_st7920.c ****         
 138              		.loc 1 112 7 is_stmt 1 view .LVU36
 139 005a 2846     		mov	r0, r5
 140              	.LVL20:
 112:u8g2/csrc/u8x8_d_st7920.c ****         
 141              		.loc 1 112 7 is_stmt 0 view .LVU37
 142 005c FFF7FEFF 		bl	u8x8_cad_StartTransfer
 143              	.LVL21:
 124:u8g2/csrc/u8x8_d_st7920.c ****       ptr = ((u8x8_tile_t *)arg_ptr)->tile_ptr;	/* data ptr to the tiles */
 144              		.loc 1 124 7 is_stmt 1 view .LVU38
 125:u8g2/csrc/u8x8_d_st7920.c ****       /* The following byte is sent to allow the ST7920 to sync up with the data */
 145              		.loc 1 125 7 view .LVU39
 125:u8g2/csrc/u8x8_d_st7920.c ****       /* The following byte is sent to allow the ST7920 to sync up with the data */
 146              		.loc 1 125 11 is_stmt 0 view .LVU40
 147 0060 D8F80060 		ldr	r6, [r8]
 148              	.LVL22:
 128:u8g2/csrc/u8x8_d_st7920.c ****       for( i = 0; i < 8; i++ )
 149              		.loc 1 128 7 is_stmt 1 view .LVU41
 150 0064 3E21     		movs	r1, #62
 151 0066 2846     		mov	r0, r5
 152 0068 FFF7FEFF 		bl	u8x8_cad_SendCmd
 153              	.LVL23:
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
 154              		.loc 1 129 7 view .LVU42
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
 155              		.loc 1 129 14 is_stmt 0 view .LVU43
 156 006c 0024     		movs	r4, #0
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 7


 157              		.loc 1 129 7 view .LVU44
 158 006e 16E0     		b	.L7
 159              	.LVL24:
 160              	.L8:
 132:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | x );      /* set x pos */
 161              		.loc 1 132 2 is_stmt 1 discriminator 3 view .LVU45
 132:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | x );      /* set x pos */
 162              		.loc 1 132 35 is_stmt 0 discriminator 3 view .LVU46
 163 0070 3919     		adds	r1, r7, r4
 164 0072 49B2     		sxtb	r1, r1
 132:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | x );      /* set x pos */
 165              		.loc 1 132 31 discriminator 3 view .LVU47
 166 0074 61F07F01 		orn	r1, r1, #127
 132:u8g2/csrc/u8x8_d_st7920.c **** 	u8x8_cad_SendCmd(u8x8, 0x080 | x );      /* set x pos */
 167              		.loc 1 132 2 discriminator 3 view .LVU48
 168 0078 C9B2     		uxtb	r1, r1
 169 007a 2846     		mov	r0, r5
 170 007c FFF7FEFF 		bl	u8x8_cad_SendCmd
 171              	.LVL25:
 133:u8g2/csrc/u8x8_d_st7920.c **** 	c = ((u8x8_tile_t *)arg_ptr)->cnt;	/* number of tiles */
 172              		.loc 1 133 2 is_stmt 1 discriminator 3 view .LVU49
 173 0080 49F08001 		orr	r1, r9, #128
 174 0084 2846     		mov	r0, r5
 175 0086 FFF7FEFF 		bl	u8x8_cad_SendCmd
 176              	.LVL26:
 134:u8g2/csrc/u8x8_d_st7920.c **** 
 177              		.loc 1 134 2 discriminator 3 view .LVU50
 134:u8g2/csrc/u8x8_d_st7920.c **** 
 178              		.loc 1 134 4 is_stmt 0 discriminator 3 view .LVU51
 179 008a 98F804A0 		ldrb	r10, [r8, #4]	@ zero_extendqisi2
 180              	.LVL27:
 137:u8g2/csrc/u8x8_d_st7920.c **** 	ptr += c;
 181              		.loc 1 137 2 is_stmt 1 discriminator 3 view .LVU52
 182 008e 3246     		mov	r2, r6
 183 0090 5146     		mov	r1, r10
 184 0092 2846     		mov	r0, r5
 185 0094 FFF7FEFF 		bl	u8x8_cad_SendData
 186              	.LVL28:
 138:u8g2/csrc/u8x8_d_st7920.c **** 	//u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, 200, NULL);	/* extra dely required */
 187              		.loc 1 138 2 discriminator 3 view .LVU53
 138:u8g2/csrc/u8x8_d_st7920.c **** 	//u8x8->gpio_and_delay_cb(u8x8, U8X8_MSG_DELAY_NANO, 200, NULL);	/* extra dely required */
 188              		.loc 1 138 6 is_stmt 0 discriminator 3 view .LVU54
 189 0098 5644     		add	r6, r6, r10
 190              	.LVL29:
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
 191              		.loc 1 129 27 discriminator 3 view .LVU55
 192 009a 0134     		adds	r4, r4, #1
 193              	.LVL30:
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
 194              		.loc 1 129 27 discriminator 3 view .LVU56
 195 009c E4B2     		uxtb	r4, r4
 196              	.LVL31:
 197              	.L7:
 129:u8g2/csrc/u8x8_d_st7920.c ****       {
 198              		.loc 1 129 7 discriminator 1 view .LVU57
 199 009e 072C     		cmp	r4, #7
 200 00a0 E6D9     		bls	.L8
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 8


 142:u8g2/csrc/u8x8_d_st7920.c **** 
 201              		.loc 1 142 7 is_stmt 1 view .LVU58
 202 00a2 2846     		mov	r0, r5
 203 00a4 FFF7FEFF 		bl	u8x8_cad_EndTransfer
 204              	.LVL32:
 144:u8g2/csrc/u8x8_d_st7920.c ****     default:
 205              		.loc 1 144 7 view .LVU59
 148:u8g2/csrc/u8x8_d_st7920.c **** }
 206              		.loc 1 148 10 is_stmt 0 view .LVU60
 207 00a8 0120     		movs	r0, #1
 144:u8g2/csrc/u8x8_d_st7920.c ****     default:
 208              		.loc 1 144 7 view .LVU61
 209 00aa B4E7     		b	.L4
 210              	.L13:
 211              		.align	2
 212              	.L12:
 213 00ac 00000000 		.word	.LANCHOR0
 214 00b0 00000000 		.word	.LANCHOR1
 215 00b4 00000000 		.word	.LANCHOR2
 216              		.cfi_endproc
 217              	.LFE0:
 219              		.section	.text.u8x8_d_st7920_192x32,"ax",%progbits
 220              		.align	1
 221              		.global	u8x8_d_st7920_192x32
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	u8x8_d_st7920_192x32:
 228              	.LVL33:
 229              	.LFB1:
 150:u8g2/csrc/u8x8_d_st7920.c **** 
 151:u8g2/csrc/u8x8_d_st7920.c **** static const u8x8_display_info_t u8x8_st7920_192x32_display_info =
 152:u8g2/csrc/u8x8_d_st7920.c **** {
 153:u8g2/csrc/u8x8_d_st7920.c ****   /* chip_enable_level = */ 1,
 154:u8g2/csrc/u8x8_d_st7920.c ****   /* chip_disable_level = */ 0,
 155:u8g2/csrc/u8x8_d_st7920.c ****   
 156:u8g2/csrc/u8x8_d_st7920.c ****   /* post_chip_enable_wait_ns = */ 5,
 157:u8g2/csrc/u8x8_d_st7920.c ****   /* pre_chip_disable_wait_ns = */ 5,
 158:u8g2/csrc/u8x8_d_st7920.c ****   /* reset_pulse_width_ms = */ 1, 
 159:u8g2/csrc/u8x8_d_st7920.c ****   /* post_reset_wait_ms = */ 6, 
 160:u8g2/csrc/u8x8_d_st7920.c ****   /* sda_setup_time_ns = */ 20,		
 161:u8g2/csrc/u8x8_d_st7920.c ****   /* sck_pulse_width_ns = */  140,	/* datasheet ST7920 */
 162:u8g2/csrc/u8x8_d_st7920.c ****   /* sck_clock_hz = */ 1000000UL,	/* since Arduino 1.6.0, the SPI bus speed in Hz. Should be  10000
 163:u8g2/csrc/u8x8_d_st7920.c ****   /* spi_mode = */ 3,		/* old: sck_takeover_edge, new: active high (bit 1), rising edge (bit 0), 18
 164:u8g2/csrc/u8x8_d_st7920.c **** 	/* Arduino mode 3: aktive low clock, but use rising edge */
 165:u8g2/csrc/u8x8_d_st7920.c ****   /* i2c_bus_clock_100kHz = */ 4,
 166:u8g2/csrc/u8x8_d_st7920.c ****   /* data_setup_time_ns = */ 30,
 167:u8g2/csrc/u8x8_d_st7920.c ****   /* write_pulse_width_ns = */ 40,
 168:u8g2/csrc/u8x8_d_st7920.c ****   /* tile_width = */ 24,
 169:u8g2/csrc/u8x8_d_st7920.c ****   /* tile_hight = */ 4,
 170:u8g2/csrc/u8x8_d_st7920.c ****   /* default_x_offset = */ 0,
 171:u8g2/csrc/u8x8_d_st7920.c ****   /* flipmode_x_offset = */ 0,
 172:u8g2/csrc/u8x8_d_st7920.c ****   /* pixel_width = */ 192,
 173:u8g2/csrc/u8x8_d_st7920.c ****   /* pixel_height = */ 32
 174:u8g2/csrc/u8x8_d_st7920.c **** };
 175:u8g2/csrc/u8x8_d_st7920.c **** 
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 9


 176:u8g2/csrc/u8x8_d_st7920.c **** static const u8x8_display_info_t u8x8_st7920_128x64_display_info =
 177:u8g2/csrc/u8x8_d_st7920.c **** {
 178:u8g2/csrc/u8x8_d_st7920.c ****   /* chip_enable_level = */ 1,
 179:u8g2/csrc/u8x8_d_st7920.c ****   /* chip_disable_level = */ 0,
 180:u8g2/csrc/u8x8_d_st7920.c ****   
 181:u8g2/csrc/u8x8_d_st7920.c ****   /* post_chip_enable_wait_ns = */ 5,
 182:u8g2/csrc/u8x8_d_st7920.c ****   /* pre_chip_disable_wait_ns = */ 5,
 183:u8g2/csrc/u8x8_d_st7920.c ****   /* reset_pulse_width_ms = */ 1, 
 184:u8g2/csrc/u8x8_d_st7920.c ****   /* post_reset_wait_ms = */ 6, 
 185:u8g2/csrc/u8x8_d_st7920.c ****   /* sda_setup_time_ns = */ 20,		
 186:u8g2/csrc/u8x8_d_st7920.c ****   /* sck_pulse_width_ns = */  140,	/* datasheet ST7920 */
 187:u8g2/csrc/u8x8_d_st7920.c ****   /* sck_clock_hz = */ 1000000UL,	/* since Arduino 1.6.0, the SPI bus speed in Hz. Should be  10000
 188:u8g2/csrc/u8x8_d_st7920.c ****   /* ST7920+Due work with 1MHz but not with 2MHz, ST7920+Uno works with 2MHz */
 189:u8g2/csrc/u8x8_d_st7920.c ****   /* spi_mode = */ 3,		/* active high, rising edge, 18 Aug 16: changed from 1 to 3 which works for 
 190:u8g2/csrc/u8x8_d_st7920.c ****   /* in theory mode 3 should be correct  */
 191:u8g2/csrc/u8x8_d_st7920.c ****   /* i2c_bus_clock_100kHz = */ 4,
 192:u8g2/csrc/u8x8_d_st7920.c ****   /* data_setup_time_ns = */ 30,
 193:u8g2/csrc/u8x8_d_st7920.c ****   /* write_pulse_width_ns = */ 40,
 194:u8g2/csrc/u8x8_d_st7920.c ****   /* tile_width = */ 16,
 195:u8g2/csrc/u8x8_d_st7920.c ****   /* tile_hight = */ 8,
 196:u8g2/csrc/u8x8_d_st7920.c ****   /* default_x_offset = */ 0,
 197:u8g2/csrc/u8x8_d_st7920.c ****   /* flipmode_x_offset = */ 0,
 198:u8g2/csrc/u8x8_d_st7920.c ****   /* pixel_width = */ 128,
 199:u8g2/csrc/u8x8_d_st7920.c ****   /* pixel_height = */ 64
 200:u8g2/csrc/u8x8_d_st7920.c **** };
 201:u8g2/csrc/u8x8_d_st7920.c **** 
 202:u8g2/csrc/u8x8_d_st7920.c **** uint8_t u8x8_d_st7920_192x32(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 203:u8g2/csrc/u8x8_d_st7920.c **** {
 230              		.loc 1 203 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              		.loc 1 203 1 is_stmt 0 view .LVU63
 235 0000 08B5     		push	{r3, lr}
 236              	.LCFI1:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 3, -8
 239              		.cfi_offset 14, -4
 204:u8g2/csrc/u8x8_d_st7920.c ****   switch(msg)
 240              		.loc 1 204 3 is_stmt 1 view .LVU64
 241 0002 0929     		cmp	r1, #9
 242 0004 02D0     		beq	.L18
 205:u8g2/csrc/u8x8_d_st7920.c ****   {
 206:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SETUP_MEMORY:
 207:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_d_helper_display_setup_memory(u8x8, &u8x8_st7920_192x32_display_info);
 208:u8g2/csrc/u8x8_d_st7920.c ****       break;
 209:u8g2/csrc/u8x8_d_st7920.c ****     default:
 210:u8g2/csrc/u8x8_d_st7920.c ****       return u8x8_d_st7920_common(u8x8, msg, arg_int, arg_ptr);
 243              		.loc 1 210 7 view .LVU65
 244              		.loc 1 210 14 is_stmt 0 view .LVU66
 245 0006 FFF7FEFF 		bl	u8x8_d_st7920_common
 246              	.LVL34:
 247              	.L16:
 211:u8g2/csrc/u8x8_d_st7920.c ****   }
 212:u8g2/csrc/u8x8_d_st7920.c ****   return 1;
 213:u8g2/csrc/u8x8_d_st7920.c **** }
 248              		.loc 1 213 1 view .LVU67
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 10


 249 000a 08BD     		pop	{r3, pc}
 250              	.LVL35:
 251              	.L18:
 207:u8g2/csrc/u8x8_d_st7920.c ****       break;
 252              		.loc 1 207 7 is_stmt 1 view .LVU68
 253 000c 0249     		ldr	r1, .L19
 254              	.LVL36:
 207:u8g2/csrc/u8x8_d_st7920.c ****       break;
 255              		.loc 1 207 7 is_stmt 0 view .LVU69
 256 000e FFF7FEFF 		bl	u8x8_d_helper_display_setup_memory
 257              	.LVL37:
 208:u8g2/csrc/u8x8_d_st7920.c ****     default:
 258              		.loc 1 208 7 is_stmt 1 view .LVU70
 212:u8g2/csrc/u8x8_d_st7920.c **** }
 259              		.loc 1 212 3 view .LVU71
 212:u8g2/csrc/u8x8_d_st7920.c **** }
 260              		.loc 1 212 10 is_stmt 0 view .LVU72
 261 0012 0120     		movs	r0, #1
 262 0014 F9E7     		b	.L16
 263              	.L20:
 264 0016 00BF     		.align	2
 265              	.L19:
 266 0018 00000000 		.word	.LANCHOR3
 267              		.cfi_endproc
 268              	.LFE1:
 270              		.section	.text.u8x8_d_st7920_128x64,"ax",%progbits
 271              		.align	1
 272              		.global	u8x8_d_st7920_128x64
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	u8x8_d_st7920_128x64:
 279              	.LVL38:
 280              	.LFB2:
 214:u8g2/csrc/u8x8_d_st7920.c **** 
 215:u8g2/csrc/u8x8_d_st7920.c **** uint8_t u8x8_d_st7920_128x64(u8x8_t *u8x8, uint8_t msg, uint8_t arg_int, void *arg_ptr)
 216:u8g2/csrc/u8x8_d_st7920.c **** {
 281              		.loc 1 216 1 is_stmt 1 view -0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              		.loc 1 216 1 is_stmt 0 view .LVU74
 286 0000 08B5     		push	{r3, lr}
 287              	.LCFI2:
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 3, -8
 290              		.cfi_offset 14, -4
 217:u8g2/csrc/u8x8_d_st7920.c ****   switch(msg)
 291              		.loc 1 217 3 is_stmt 1 view .LVU75
 292 0002 0929     		cmp	r1, #9
 293 0004 02D0     		beq	.L25
 218:u8g2/csrc/u8x8_d_st7920.c ****   {
 219:u8g2/csrc/u8x8_d_st7920.c ****     case U8X8_MSG_DISPLAY_SETUP_MEMORY:
 220:u8g2/csrc/u8x8_d_st7920.c ****       u8x8_d_helper_display_setup_memory(u8x8, &u8x8_st7920_128x64_display_info);
 221:u8g2/csrc/u8x8_d_st7920.c ****       break;
 222:u8g2/csrc/u8x8_d_st7920.c ****     default:
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 11


 223:u8g2/csrc/u8x8_d_st7920.c ****       return u8x8_d_st7920_common(u8x8, msg, arg_int, arg_ptr);
 294              		.loc 1 223 7 view .LVU76
 295              		.loc 1 223 14 is_stmt 0 view .LVU77
 296 0006 FFF7FEFF 		bl	u8x8_d_st7920_common
 297              	.LVL39:
 298              	.L23:
 224:u8g2/csrc/u8x8_d_st7920.c ****   }
 225:u8g2/csrc/u8x8_d_st7920.c ****   return 1;
 226:u8g2/csrc/u8x8_d_st7920.c **** }
 299              		.loc 1 226 1 view .LVU78
 300 000a 08BD     		pop	{r3, pc}
 301              	.LVL40:
 302              	.L25:
 220:u8g2/csrc/u8x8_d_st7920.c ****       break;
 303              		.loc 1 220 7 is_stmt 1 view .LVU79
 304 000c 0249     		ldr	r1, .L26
 305              	.LVL41:
 220:u8g2/csrc/u8x8_d_st7920.c ****       break;
 306              		.loc 1 220 7 is_stmt 0 view .LVU80
 307 000e FFF7FEFF 		bl	u8x8_d_helper_display_setup_memory
 308              	.LVL42:
 221:u8g2/csrc/u8x8_d_st7920.c ****     default:
 309              		.loc 1 221 7 is_stmt 1 view .LVU81
 225:u8g2/csrc/u8x8_d_st7920.c **** }
 310              		.loc 1 225 3 view .LVU82
 225:u8g2/csrc/u8x8_d_st7920.c **** }
 311              		.loc 1 225 10 is_stmt 0 view .LVU83
 312 0012 0120     		movs	r0, #1
 313 0014 F9E7     		b	.L23
 314              	.L27:
 315 0016 00BF     		.align	2
 316              	.L26:
 317 0018 00000000 		.word	.LANCHOR4
 318              		.cfi_endproc
 319              	.LFE2:
 321              		.section	.rodata.u8x8_d_st7920_init_seq,"a"
 322              		.align	2
 323              		.set	.LANCHOR0,. + 0
 326              	u8x8_d_st7920_init_seq:
 327 0000 FE       		.byte	-2
 328 0001 64       		.byte	100
 329 0002 18       		.byte	24
 330 0003 FE       		.byte	-2
 331 0004 0A       		.byte	10
 332 0005 15       		.byte	21
 333 0006 38       		.byte	56
 334 0007 15       		.byte	21
 335 0008 08       		.byte	8
 336 0009 15       		.byte	21
 337 000a 06       		.byte	6
 338 000b 15       		.byte	21
 339 000c 02       		.byte	2
 340 000d 15       		.byte	21
 341 000e 01       		.byte	1
 342 000f FE       		.byte	-2
 343 0010 04       		.byte	4
 344 0011 19       		.byte	25
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 12


 345 0012 FF       		.byte	-1
 346              		.section	.rodata.u8x8_d_st7920_powersave0_seq,"a"
 347              		.align	2
 348              		.set	.LANCHOR1,. + 0
 351              	u8x8_d_st7920_powersave0_seq:
 352 0000 18       		.byte	24
 353 0001 15       		.byte	21
 354 0002 38       		.byte	56
 355 0003 15       		.byte	21
 356 0004 0C       		.byte	12
 357 0005 19       		.byte	25
 358 0006 FF       		.byte	-1
 359              		.section	.rodata.u8x8_d_st7920_powersave1_seq,"a"
 360              		.align	2
 361              		.set	.LANCHOR2,. + 0
 364              	u8x8_d_st7920_powersave1_seq:
 365 0000 18       		.byte	24
 366 0001 15       		.byte	21
 367 0002 38       		.byte	56
 368 0003 15       		.byte	21
 369 0004 08       		.byte	8
 370 0005 19       		.byte	25
 371 0006 FF       		.byte	-1
 372              		.section	.rodata.u8x8_st7920_128x64_display_info,"a"
 373              		.align	2
 374              		.set	.LANCHOR4,. + 0
 377              	u8x8_st7920_128x64_display_info:
 378 0000 01       		.byte	1
 379 0001 00       		.byte	0
 380 0002 05       		.byte	5
 381 0003 05       		.byte	5
 382 0004 01       		.byte	1
 383 0005 06       		.byte	6
 384 0006 14       		.byte	20
 385 0007 8C       		.byte	-116
 386 0008 40420F00 		.word	1000000
 387 000c 03       		.byte	3
 388 000d 04       		.byte	4
 389 000e 1E       		.byte	30
 390 000f 28       		.byte	40
 391 0010 10       		.byte	16
 392 0011 08       		.byte	8
 393 0012 00       		.byte	0
 394 0013 00       		.byte	0
 395 0014 8000     		.short	128
 396 0016 4000     		.short	64
 397              		.section	.rodata.u8x8_st7920_192x32_display_info,"a"
 398              		.align	2
 399              		.set	.LANCHOR3,. + 0
 402              	u8x8_st7920_192x32_display_info:
 403 0000 01       		.byte	1
 404 0001 00       		.byte	0
 405 0002 05       		.byte	5
 406 0003 05       		.byte	5
 407 0004 01       		.byte	1
 408 0005 06       		.byte	6
 409 0006 14       		.byte	20
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 13


 410 0007 8C       		.byte	-116
 411 0008 40420F00 		.word	1000000
 412 000c 03       		.byte	3
 413 000d 04       		.byte	4
 414 000e 1E       		.byte	30
 415 000f 28       		.byte	40
 416 0010 18       		.byte	24
 417 0011 04       		.byte	4
 418 0012 00       		.byte	0
 419 0013 00       		.byte	0
 420 0014 C000     		.short	192
 421 0016 2000     		.short	32
 422              		.text
 423              	.Letext0:
 424              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 425              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 426              		.file 4 "u8g2/csrc/u8x8.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 u8x8_d_st7920.c
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:16     .text.u8x8_d_st7920_common:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:24     .text.u8x8_d_st7920_common:00000000 u8x8_d_st7920_common
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:213    .text.u8x8_d_st7920_common:000000ac $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:220    .text.u8x8_d_st7920_192x32:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:227    .text.u8x8_d_st7920_192x32:00000000 u8x8_d_st7920_192x32
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:266    .text.u8x8_d_st7920_192x32:00000018 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:271    .text.u8x8_d_st7920_128x64:00000000 $t
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:278    .text.u8x8_d_st7920_128x64:00000000 u8x8_d_st7920_128x64
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:317    .text.u8x8_d_st7920_128x64:00000018 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:322    .rodata.u8x8_d_st7920_init_seq:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:326    .rodata.u8x8_d_st7920_init_seq:00000000 u8x8_d_st7920_init_seq
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:347    .rodata.u8x8_d_st7920_powersave0_seq:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:351    .rodata.u8x8_d_st7920_powersave0_seq:00000000 u8x8_d_st7920_powersave0_seq
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:360    .rodata.u8x8_d_st7920_powersave1_seq:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:364    .rodata.u8x8_d_st7920_powersave1_seq:00000000 u8x8_d_st7920_powersave1_seq
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:373    .rodata.u8x8_st7920_128x64_display_info:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:377    .rodata.u8x8_st7920_128x64_display_info:00000000 u8x8_st7920_128x64_display_info
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:398    .rodata.u8x8_st7920_192x32_display_info:00000000 $d
C:\Users\behun\AppData\Local\Temp\ccAv4GOl.s:402    .rodata.u8x8_st7920_192x32_display_info:00000000 u8x8_st7920_192x32_display_info

UNDEFINED SYMBOLS
u8x8_d_helper_display_init
u8x8_cad_SendSequence
u8x8_cad_StartTransfer
u8x8_cad_SendCmd
u8x8_cad_SendData
u8x8_cad_EndTransfer
u8x8_d_helper_display_setup_memory
