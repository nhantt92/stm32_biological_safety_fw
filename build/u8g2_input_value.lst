ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_input_value.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_UserInterfaceInputValue,"ax",%progbits
  16              		.align	1
  17              		.global	u8g2_UserInterfaceInputValue
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	u8g2_UserInterfaceInputValue:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "u8g2/csrc/u8g2_input_value.c"
   1:u8g2/csrc/u8g2_input_value.c **** /*
   2:u8g2/csrc/u8g2_input_value.c **** 
   3:u8g2/csrc/u8g2_input_value.c ****   u8g2_input_value.c
   4:u8g2/csrc/u8g2_input_value.c ****   
   5:u8g2/csrc/u8g2_input_value.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   6:u8g2/csrc/u8g2_input_value.c **** 
   7:u8g2/csrc/u8g2_input_value.c ****   Copyright (c) 2016, olikraus@gmail.com
   8:u8g2/csrc/u8g2_input_value.c ****   All rights reserved.
   9:u8g2/csrc/u8g2_input_value.c **** 
  10:u8g2/csrc/u8g2_input_value.c ****   Redistribution and use in source and binary forms, with or without modification, 
  11:u8g2/csrc/u8g2_input_value.c ****   are permitted provided that the following conditions are met:
  12:u8g2/csrc/u8g2_input_value.c **** 
  13:u8g2/csrc/u8g2_input_value.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  14:u8g2/csrc/u8g2_input_value.c ****     of conditions and the following disclaimer.
  15:u8g2/csrc/u8g2_input_value.c ****     
  16:u8g2/csrc/u8g2_input_value.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  17:u8g2/csrc/u8g2_input_value.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  18:u8g2/csrc/u8g2_input_value.c ****     materials provided with the distribution.
  19:u8g2/csrc/u8g2_input_value.c **** 
  20:u8g2/csrc/u8g2_input_value.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  21:u8g2/csrc/u8g2_input_value.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  22:u8g2/csrc/u8g2_input_value.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  23:u8g2/csrc/u8g2_input_value.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  24:u8g2/csrc/u8g2_input_value.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  25:u8g2/csrc/u8g2_input_value.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  26:u8g2/csrc/u8g2_input_value.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  27:u8g2/csrc/u8g2_input_value.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  28:u8g2/csrc/u8g2_input_value.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  29:u8g2/csrc/u8g2_input_value.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  30:u8g2/csrc/u8g2_input_value.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  31:u8g2/csrc/u8g2_input_value.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 2


  32:u8g2/csrc/u8g2_input_value.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  33:u8g2/csrc/u8g2_input_value.c ****   
  34:u8g2/csrc/u8g2_input_value.c **** */
  35:u8g2/csrc/u8g2_input_value.c **** 
  36:u8g2/csrc/u8g2_input_value.c **** #include "u8g2.h"
  37:u8g2/csrc/u8g2_input_value.c **** 
  38:u8g2/csrc/u8g2_input_value.c **** /*
  39:u8g2/csrc/u8g2_input_value.c ****   return:
  40:u8g2/csrc/u8g2_input_value.c ****     0: value is not changed (HOME/Break Button pressed)
  41:u8g2/csrc/u8g2_input_value.c ****     1: value has been updated
  42:u8g2/csrc/u8g2_input_value.c **** */
  43:u8g2/csrc/u8g2_input_value.c **** 
  44:u8g2/csrc/u8g2_input_value.c **** uint8_t u8g2_UserInterfaceInputValue(u8g2_t *u8g2, const char *title, const char *pre, uint8_t *val
  45:u8g2/csrc/u8g2_input_value.c **** {
  28              		.loc 1 45 1 view -0
  29              		.cfi_startproc
  30              		@ args = 16, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 45 1 is_stmt 0 view .LVU1
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  45 0004 89B0     		sub	sp, sp, #36
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 72
  48 0006 0446     		mov	r4, r0
  49 0008 8B46     		mov	fp, r1
  50 000a 0392     		str	r2, [sp, #12]
  51 000c 0793     		str	r3, [sp, #28]
  52 000e 9DF84820 		ldrb	r2, [sp, #72]	@ zero_extendqisi2
  53              	.LVL1:
  54              		.loc 1 45 1 view .LVU2
  55 0012 0592     		str	r2, [sp, #20]
  56 0014 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
  57 0018 0692     		str	r2, [sp, #24]
  58 001a 9DF85020 		ldrb	r2, [sp, #80]	@ zero_extendqisi2
  59 001e 0492     		str	r2, [sp, #16]
  46:u8g2/csrc/u8g2_input_value.c ****   uint8_t line_height;
  60              		.loc 1 46 3 is_stmt 1 view .LVU3
  47:u8g2/csrc/u8g2_input_value.c ****   uint8_t height;
  61              		.loc 1 47 3 view .LVU4
  48:u8g2/csrc/u8g2_input_value.c ****   u8g2_uint_t pixel_height;
  62              		.loc 1 48 3 view .LVU5
  49:u8g2/csrc/u8g2_input_value.c ****   u8g2_uint_t  y, yy;
  63              		.loc 1 49 3 view .LVU6
  50:u8g2/csrc/u8g2_input_value.c ****   u8g2_uint_t  pixel_width;
  64              		.loc 1 50 3 view .LVU7
  51:u8g2/csrc/u8g2_input_value.c ****   u8g2_uint_t  x, xx;
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 3


  65              		.loc 1 51 3 view .LVU8
  52:u8g2/csrc/u8g2_input_value.c ****   
  53:u8g2/csrc/u8g2_input_value.c ****   uint8_t local_value = *value;
  66              		.loc 1 53 3 view .LVU9
  67              		.loc 1 53 11 is_stmt 0 view .LVU10
  68 0020 93F800A0 		ldrb	r10, [r3]	@ zero_extendqisi2
  69              	.LVL2:
  54:u8g2/csrc/u8g2_input_value.c ****   //uint8_t r; /* not used ??? */
  55:u8g2/csrc/u8g2_input_value.c ****   uint8_t event;
  70              		.loc 1 55 3 is_stmt 1 view .LVU11
  56:u8g2/csrc/u8g2_input_value.c **** 
  57:u8g2/csrc/u8g2_input_value.c ****   /* only horizontal strings are supported, so force this here */
  58:u8g2/csrc/u8g2_input_value.c ****   u8g2_SetFontDirection(u8g2, 0);
  71              		.loc 1 58 3 view .LVU12
  72 0024 0021     		movs	r1, #0
  73              	.LVL3:
  74              		.loc 1 58 3 is_stmt 0 view .LVU13
  75 0026 FFF7FEFF 		bl	u8g2_SetFontDirection
  76              	.LVL4:
  59:u8g2/csrc/u8g2_input_value.c **** 
  60:u8g2/csrc/u8g2_input_value.c ****   /* force baseline position */
  61:u8g2/csrc/u8g2_input_value.c ****   u8g2_SetFontPosBaseline(u8g2);
  77              		.loc 1 61 3 is_stmt 1 view .LVU14
  78 002a 2046     		mov	r0, r4
  79 002c FFF7FEFF 		bl	u8g2_SetFontPosBaseline
  80              	.LVL5:
  62:u8g2/csrc/u8g2_input_value.c ****   
  63:u8g2/csrc/u8g2_input_value.c ****   /* calculate line height */
  64:u8g2/csrc/u8g2_input_value.c ****   line_height = u8g2_GetAscent(u8g2);
  81              		.loc 1 64 3 view .LVU15
  82              		.loc 1 64 17 is_stmt 0 view .LVU16
  83 0030 94F97990 		ldrsb	r9, [r4, #121]
  84              		.loc 1 64 15 view .LVU17
  85 0034 5FFA89F9 		uxtb	r9, r9
  86              	.LVL6:
  65:u8g2/csrc/u8g2_input_value.c ****   line_height -= u8g2_GetDescent(u8g2);
  87              		.loc 1 65 3 is_stmt 1 view .LVU18
  88              		.loc 1 65 18 is_stmt 0 view .LVU19
  89 0038 94F87A30 		ldrb	r3, [r4, #122]	@ zero_extendqisi2
  90              		.loc 1 65 15 view .LVU20
  91 003c A9EB0309 		sub	r9, r9, r3
  92              	.LVL7:
  93              		.loc 1 65 15 view .LVU21
  94 0040 5FFA89F9 		uxtb	r9, r9
  95              	.LVL8:
  66:u8g2/csrc/u8g2_input_value.c ****   
  67:u8g2/csrc/u8g2_input_value.c ****   
  68:u8g2/csrc/u8g2_input_value.c ****   /* calculate overall height of the input value box */
  69:u8g2/csrc/u8g2_input_value.c ****   height = 1;	/* value input line */
  96              		.loc 1 69 3 is_stmt 1 view .LVU22
  70:u8g2/csrc/u8g2_input_value.c ****   height += u8x8_GetStringLineCnt(title);
  97              		.loc 1 70 3 view .LVU23
  98              		.loc 1 70 13 is_stmt 0 view .LVU24
  99 0044 5846     		mov	r0, fp
 100 0046 FFF7FEFF 		bl	u8x8_GetStringLineCnt
 101              	.LVL9:
 102              		.loc 1 70 10 view .LVU25
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 4


 103 004a 431C     		adds	r3, r0, #1
 104 004c DBB2     		uxtb	r3, r3
 105              	.LVL10:
  71:u8g2/csrc/u8g2_input_value.c **** 
  72:u8g2/csrc/u8g2_input_value.c ****   /* calculate the height in pixel */
  73:u8g2/csrc/u8g2_input_value.c ****   pixel_height = height;
 106              		.loc 1 73 3 is_stmt 1 view .LVU26
  74:u8g2/csrc/u8g2_input_value.c ****   pixel_height *= line_height;
 107              		.loc 1 74 3 view .LVU27
 108              		.loc 1 74 16 is_stmt 0 view .LVU28
 109 004e 03FB09F3 		mul	r3, r3, r9
 110              	.LVL11:
 111              		.loc 1 74 16 view .LVU29
 112 0052 DBB2     		uxtb	r3, r3
 113              	.LVL12:
  75:u8g2/csrc/u8g2_input_value.c **** 
  76:u8g2/csrc/u8g2_input_value.c **** 
  77:u8g2/csrc/u8g2_input_value.c ****   /* calculate offset from top */
  78:u8g2/csrc/u8g2_input_value.c ****   y = 0;
 114              		.loc 1 78 3 is_stmt 1 view .LVU30
  79:u8g2/csrc/u8g2_input_value.c ****   if ( pixel_height < u8g2_GetDisplayHeight(u8g2)  )
 115              		.loc 1 79 3 view .LVU31
 116              		.loc 1 79 23 is_stmt 0 view .LVU32
 117 0054 94F84080 		ldrb	r8, [r4, #64]	@ zero_extendqisi2
 118              		.loc 1 79 6 view .LVU33
 119 0058 9845     		cmp	r8, r3
 120 005a 04D9     		bls	.L13
  80:u8g2/csrc/u8g2_input_value.c ****   {
  81:u8g2/csrc/u8g2_input_value.c ****     y = u8g2_GetDisplayHeight(u8g2);
 121              		.loc 1 81 5 is_stmt 1 view .LVU34
 122              	.LVL13:
  82:u8g2/csrc/u8g2_input_value.c ****     y -= pixel_height;
 123              		.loc 1 82 5 view .LVU35
 124              		.loc 1 82 7 is_stmt 0 view .LVU36
 125 005c A8EB0308 		sub	r8, r8, r3
 126              	.LVL14:
  83:u8g2/csrc/u8g2_input_value.c ****     y /= 2;
 127              		.loc 1 83 5 is_stmt 1 view .LVU37
 128              		.loc 1 83 7 is_stmt 0 view .LVU38
 129 0060 C8F34608 		ubfx	r8, r8, #1, #7
 130              	.LVL15:
 131              		.loc 1 83 7 view .LVU39
 132 0064 01E0     		b	.L2
 133              	.LVL16:
 134              	.L13:
  78:u8g2/csrc/u8g2_input_value.c ****   if ( pixel_height < u8g2_GetDisplayHeight(u8g2)  )
 135              		.loc 1 78 5 view .LVU40
 136 0066 4FF00008 		mov	r8, #0
 137              	.LVL17:
 138              	.L2:
  84:u8g2/csrc/u8g2_input_value.c ****   }
  85:u8g2/csrc/u8g2_input_value.c ****   
  86:u8g2/csrc/u8g2_input_value.c ****   /* calculate offset from left for the label */
  87:u8g2/csrc/u8g2_input_value.c ****   x = 0;
 139              		.loc 1 87 3 is_stmt 1 view .LVU41
  88:u8g2/csrc/u8g2_input_value.c ****   pixel_width = u8g2_GetUTF8Width(u8g2, pre);
 140              		.loc 1 88 3 view .LVU42
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 5


 141              		.loc 1 88 17 is_stmt 0 view .LVU43
 142 006a 0399     		ldr	r1, [sp, #12]
 143 006c 2046     		mov	r0, r4
 144              	.LVL18:
 145              		.loc 1 88 17 view .LVU44
 146 006e FFF7FEFF 		bl	u8g2_GetUTF8Width
 147              	.LVL19:
 148              		.loc 1 88 17 view .LVU45
 149 0072 0546     		mov	r5, r0
 150              	.LVL20:
  89:u8g2/csrc/u8g2_input_value.c ****   pixel_width += u8g2_GetUTF8Width(u8g2, "0") * digits;
 151              		.loc 1 89 3 is_stmt 1 view .LVU46
 152              		.loc 1 89 18 is_stmt 0 view .LVU47
 153 0074 3949     		ldr	r1, .L20
 154 0076 2046     		mov	r0, r4
 155 0078 FFF7FEFF 		bl	u8g2_GetUTF8Width
 156              	.LVL21:
 157              		.loc 1 89 15 view .LVU48
 158 007c 049B     		ldr	r3, [sp, #16]
 159 007e 00FB0355 		mla	r5, r0, r3, r5
 160              	.LVL22:
 161              		.loc 1 89 15 view .LVU49
 162 0082 EDB2     		uxtb	r5, r5
 163              	.LVL23:
  90:u8g2/csrc/u8g2_input_value.c ****   pixel_width += u8g2_GetUTF8Width(u8g2, post);
 164              		.loc 1 90 3 is_stmt 1 view .LVU50
 165              		.loc 1 90 18 is_stmt 0 view .LVU51
 166 0084 1599     		ldr	r1, [sp, #84]
 167 0086 2046     		mov	r0, r4
 168 0088 FFF7FEFF 		bl	u8g2_GetUTF8Width
 169              	.LVL24:
 170              		.loc 1 90 15 view .LVU52
 171 008c 2844     		add	r0, r0, r5
 172 008e C0B2     		uxtb	r0, r0
 173              	.LVL25:
  91:u8g2/csrc/u8g2_input_value.c ****   if ( pixel_width < u8g2_GetDisplayWidth(u8g2) )
 174              		.loc 1 91 3 is_stmt 1 view .LVU53
 175              		.loc 1 91 22 is_stmt 0 view .LVU54
 176 0090 94F83F70 		ldrb	r7, [r4, #63]	@ zero_extendqisi2
 177              		.loc 1 91 6 view .LVU55
 178 0094 8742     		cmp	r7, r0
 179 0096 03D9     		bls	.L14
  92:u8g2/csrc/u8g2_input_value.c ****   {
  93:u8g2/csrc/u8g2_input_value.c ****     x = u8g2_GetDisplayWidth(u8g2);
 180              		.loc 1 93 5 is_stmt 1 view .LVU56
 181              	.LVL26:
  94:u8g2/csrc/u8g2_input_value.c ****     x -= pixel_width;
 182              		.loc 1 94 5 view .LVU57
 183              		.loc 1 94 7 is_stmt 0 view .LVU58
 184 0098 3F1A     		subs	r7, r7, r0
 185              	.LVL27:
  95:u8g2/csrc/u8g2_input_value.c ****     x /= 2;
 186              		.loc 1 95 5 is_stmt 1 view .LVU59
 187              		.loc 1 95 7 is_stmt 0 view .LVU60
 188 009a C7F34607 		ubfx	r7, r7, #1, #7
 189              	.LVL28:
 190              		.loc 1 95 7 view .LVU61
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 6


 191 009e 00E0     		b	.L4
 192              	.LVL29:
 193              	.L14:
  87:u8g2/csrc/u8g2_input_value.c ****   pixel_width = u8g2_GetUTF8Width(u8g2, pre);
 194              		.loc 1 87 5 view .LVU62
 195 00a0 0027     		movs	r7, #0
 196              	.LVL30:
 197              	.L4:
  96:u8g2/csrc/u8g2_input_value.c ****   }
  97:u8g2/csrc/u8g2_input_value.c ****   
  98:u8g2/csrc/u8g2_input_value.c ****   /* event loop */
  99:u8g2/csrc/u8g2_input_value.c ****   for(;;)
 198              		.loc 1 99 3 is_stmt 1 view .LVU63
 100:u8g2/csrc/u8g2_input_value.c ****   {
 101:u8g2/csrc/u8g2_input_value.c ****     u8g2_FirstPage(u8g2);
 199              		.loc 1 101 5 view .LVU64
 200 00a2 2046     		mov	r0, r4
 201 00a4 FFF7FEFF 		bl	u8g2_FirstPage
 202              	.LVL31:
 203              	.L5:
 102:u8g2/csrc/u8g2_input_value.c ****     do
 204              		.loc 1 102 5 discriminator 1 view .LVU65
 103:u8g2/csrc/u8g2_input_value.c ****     {
 104:u8g2/csrc/u8g2_input_value.c ****       /* render */
 105:u8g2/csrc/u8g2_input_value.c ****       yy = y;
 205              		.loc 1 105 7 discriminator 1 view .LVU66
 106:u8g2/csrc/u8g2_input_value.c ****       yy += u8g2_DrawUTF8Lines(u8g2, 0, yy, u8g2_GetDisplayWidth(u8g2), line_height, title);
 206              		.loc 1 106 7 discriminator 1 view .LVU67
 207              		.loc 1 106 13 is_stmt 0 discriminator 1 view .LVU68
 208 00a8 CDF804B0 		str	fp, [sp, #4]
 209 00ac CDF80090 		str	r9, [sp]
 210 00b0 94F83F30 		ldrb	r3, [r4, #63]	@ zero_extendqisi2
 211 00b4 4246     		mov	r2, r8
 212 00b6 0021     		movs	r1, #0
 213 00b8 2046     		mov	r0, r4
 214 00ba FFF7FEFF 		bl	u8g2_DrawUTF8Lines
 215              	.LVL32:
 216              		.loc 1 106 10 discriminator 1 view .LVU69
 217 00be 4044     		add	r0, r0, r8
 218 00c0 C6B2     		uxtb	r6, r0
 219              	.LVL33:
 107:u8g2/csrc/u8g2_input_value.c ****       xx = x;
 220              		.loc 1 107 7 is_stmt 1 discriminator 1 view .LVU70
 108:u8g2/csrc/u8g2_input_value.c ****       xx += u8g2_DrawUTF8(u8g2, xx, yy, pre);
 221              		.loc 1 108 7 discriminator 1 view .LVU71
 222              		.loc 1 108 13 is_stmt 0 discriminator 1 view .LVU72
 223 00c2 039B     		ldr	r3, [sp, #12]
 224 00c4 3246     		mov	r2, r6
 225 00c6 3946     		mov	r1, r7
 226 00c8 2046     		mov	r0, r4
 227 00ca FFF7FEFF 		bl	u8g2_DrawUTF8
 228              	.LVL34:
 229              		.loc 1 108 10 discriminator 1 view .LVU73
 230 00ce 3844     		add	r0, r0, r7
 231 00d0 C5B2     		uxtb	r5, r0
 232              	.LVL35:
 109:u8g2/csrc/u8g2_input_value.c ****       xx += u8g2_DrawUTF8(u8g2, xx, yy, u8x8_u8toa(local_value, digits));
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 7


 233              		.loc 1 109 7 is_stmt 1 discriminator 1 view .LVU74
 234              		.loc 1 109 13 is_stmt 0 discriminator 1 view .LVU75
 235 00d2 0499     		ldr	r1, [sp, #16]
 236 00d4 5046     		mov	r0, r10
 237 00d6 FFF7FEFF 		bl	u8x8_u8toa
 238              	.LVL36:
 239 00da 0346     		mov	r3, r0
 240 00dc 3246     		mov	r2, r6
 241 00de 2946     		mov	r1, r5
 242 00e0 2046     		mov	r0, r4
 243 00e2 FFF7FEFF 		bl	u8g2_DrawUTF8
 244              	.LVL37:
 245              		.loc 1 109 10 discriminator 1 view .LVU76
 246 00e6 2844     		add	r0, r0, r5
 247              	.LVL38:
 110:u8g2/csrc/u8g2_input_value.c ****       u8g2_DrawUTF8(u8g2, xx, yy, post);
 248              		.loc 1 110 7 is_stmt 1 discriminator 1 view .LVU77
 249 00e8 159B     		ldr	r3, [sp, #84]
 250 00ea 3246     		mov	r2, r6
 251 00ec C1B2     		uxtb	r1, r0
 252 00ee 2046     		mov	r0, r4
 253              	.LVL39:
 254              		.loc 1 110 7 is_stmt 0 discriminator 1 view .LVU78
 255 00f0 FFF7FEFF 		bl	u8g2_DrawUTF8
 256              	.LVL40:
 111:u8g2/csrc/u8g2_input_value.c ****     } while( u8g2_NextPage(u8g2) );
 257              		.loc 1 111 14 discriminator 1 view .LVU79
 258 00f4 2046     		mov	r0, r4
 259 00f6 FFF7FEFF 		bl	u8g2_NextPage
 260              	.LVL41:
 261              		.loc 1 111 5 discriminator 1 view .LVU80
 262 00fa 0546     		mov	r5, r0
 263 00fc 0028     		cmp	r0, #0
 264 00fe D3D1     		bne	.L5
 265              	.L12:
 112:u8g2/csrc/u8g2_input_value.c ****     
 113:u8g2/csrc/u8g2_input_value.c **** #ifdef U8G2_REF_MAN_PIC
 114:u8g2/csrc/u8g2_input_value.c ****       return 0;
 115:u8g2/csrc/u8g2_input_value.c **** #endif
 116:u8g2/csrc/u8g2_input_value.c ****     
 117:u8g2/csrc/u8g2_input_value.c ****     for(;;)
 266              		.loc 1 117 5 is_stmt 1 view .LVU81
 118:u8g2/csrc/u8g2_input_value.c ****     {
 119:u8g2/csrc/u8g2_input_value.c ****       event = u8x8_GetMenuEvent(u8g2_GetU8x8(u8g2));
 267              		.loc 1 119 7 view .LVU82
 268              		.loc 1 119 15 is_stmt 0 view .LVU83
 269 0100 2046     		mov	r0, r4
 270 0102 FFF7FEFF 		bl	u8x8_GetMenuEvent
 271              	.LVL42:
 120:u8g2/csrc/u8g2_input_value.c ****       if ( event == U8X8_MSG_GPIO_MENU_SELECT )
 272              		.loc 1 120 7 is_stmt 1 view .LVU84
 273              		.loc 1 120 10 is_stmt 0 view .LVU85
 274 0106 5028     		cmp	r0, #80
 275 0108 17D0     		beq	.L19
 121:u8g2/csrc/u8g2_input_value.c ****       {
 122:u8g2/csrc/u8g2_input_value.c **** 	*value = local_value;
 123:u8g2/csrc/u8g2_input_value.c **** 	return 1;
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 8


 124:u8g2/csrc/u8g2_input_value.c ****       }
 125:u8g2/csrc/u8g2_input_value.c ****       else if ( event == U8X8_MSG_GPIO_MENU_HOME )
 276              		.loc 1 125 12 is_stmt 1 view .LVU86
 277              		.loc 1 125 15 is_stmt 0 view .LVU87
 278 010a 5328     		cmp	r0, #83
 279 010c 19D0     		beq	.L7
 126:u8g2/csrc/u8g2_input_value.c ****       {
 127:u8g2/csrc/u8g2_input_value.c **** 	return 0;
 128:u8g2/csrc/u8g2_input_value.c ****       }
 129:u8g2/csrc/u8g2_input_value.c ****       else if ( event == U8X8_MSG_GPIO_MENU_NEXT || event == U8X8_MSG_GPIO_MENU_UP )
 280              		.loc 1 129 12 is_stmt 1 view .LVU88
 281              		.loc 1 129 15 is_stmt 0 view .LVU89
 282 010e 5128     		cmp	r0, #81
 283 0110 1BD0     		beq	.L8
 284              		.loc 1 129 50 discriminator 1 view .LVU90
 285 0112 5428     		cmp	r0, #84
 286 0114 19D0     		beq	.L8
 130:u8g2/csrc/u8g2_input_value.c ****       {
 131:u8g2/csrc/u8g2_input_value.c **** 	if ( local_value >= hi )
 132:u8g2/csrc/u8g2_input_value.c **** 	  local_value = lo;
 133:u8g2/csrc/u8g2_input_value.c **** 	else
 134:u8g2/csrc/u8g2_input_value.c **** 	  local_value++;
 135:u8g2/csrc/u8g2_input_value.c **** 	break;
 136:u8g2/csrc/u8g2_input_value.c ****       }
 137:u8g2/csrc/u8g2_input_value.c ****       else if ( event == U8X8_MSG_GPIO_MENU_PREV || event == U8X8_MSG_GPIO_MENU_DOWN )
 287              		.loc 1 137 12 is_stmt 1 view .LVU91
 288              		.loc 1 137 15 is_stmt 0 view .LVU92
 289 0116 5228     		cmp	r0, #82
 290 0118 01D0     		beq	.L11
 291              		.loc 1 137 50 discriminator 1 view .LVU93
 292 011a 5528     		cmp	r0, #85
 293 011c F0D1     		bne	.L12
 294              	.L11:
 138:u8g2/csrc/u8g2_input_value.c ****       {
 139:u8g2/csrc/u8g2_input_value.c **** 	if ( local_value <= lo )
 295              		.loc 1 139 2 is_stmt 1 view .LVU94
 296              		.loc 1 139 5 is_stmt 0 view .LVU95
 297 011e 059B     		ldr	r3, [sp, #20]
 298 0120 9A45     		cmp	r10, r3
 299 0122 07D9     		bls	.L16
 140:u8g2/csrc/u8g2_input_value.c **** 	  local_value = hi;
 141:u8g2/csrc/u8g2_input_value.c **** 	else
 142:u8g2/csrc/u8g2_input_value.c **** 	  local_value--;
 300              		.loc 1 142 4 is_stmt 1 view .LVU96
 301              		.loc 1 142 15 is_stmt 0 view .LVU97
 302 0124 0AF1FF3A 		add	r10, r10, #-1
 303              	.LVL43:
 304              		.loc 1 142 15 view .LVU98
 305 0128 5FFA8AFA 		uxtb	r10, r10
 306              	.LVL44:
 307              		.loc 1 142 15 view .LVU99
 308 012c B9E7     		b	.L4
 309              	.L15:
 132:u8g2/csrc/u8g2_input_value.c **** 	else
 310              		.loc 1 132 16 view .LVU100
 311 012e DDF814A0 		ldr	r10, [sp, #20]
 312              	.LVL45:
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 9


 132:u8g2/csrc/u8g2_input_value.c **** 	else
 313              		.loc 1 132 16 view .LVU101
 314 0132 B6E7     		b	.L4
 315              	.LVL46:
 316              	.L16:
 140:u8g2/csrc/u8g2_input_value.c **** 	  local_value = hi;
 317              		.loc 1 140 16 view .LVU102
 318 0134 DDF818A0 		ldr	r10, [sp, #24]
 319              	.LVL47:
 140:u8g2/csrc/u8g2_input_value.c **** 	  local_value = hi;
 320              		.loc 1 140 16 view .LVU103
 321 0138 B3E7     		b	.L4
 322              	.LVL48:
 323              	.L19:
 122:u8g2/csrc/u8g2_input_value.c **** 	return 1;
 324              		.loc 1 122 2 is_stmt 1 view .LVU104
 122:u8g2/csrc/u8g2_input_value.c **** 	return 1;
 325              		.loc 1 122 9 is_stmt 0 view .LVU105
 326 013a 079B     		ldr	r3, [sp, #28]
 327 013c 83F800A0 		strb	r10, [r3]
 123:u8g2/csrc/u8g2_input_value.c ****       }
 328              		.loc 1 123 2 is_stmt 1 view .LVU106
 123:u8g2/csrc/u8g2_input_value.c ****       }
 329              		.loc 1 123 9 is_stmt 0 view .LVU107
 330 0140 0125     		movs	r5, #1
 331              	.L7:
 143:u8g2/csrc/u8g2_input_value.c **** 	break;
 144:u8g2/csrc/u8g2_input_value.c ****       }        
 145:u8g2/csrc/u8g2_input_value.c ****     }
 146:u8g2/csrc/u8g2_input_value.c ****   }
 147:u8g2/csrc/u8g2_input_value.c ****   
 148:u8g2/csrc/u8g2_input_value.c ****   /* never reached */
 149:u8g2/csrc/u8g2_input_value.c ****   //return r;  
 150:u8g2/csrc/u8g2_input_value.c **** }
 332              		.loc 1 150 1 view .LVU108
 333 0142 2846     		mov	r0, r5
 334              	.LVL49:
 335              		.loc 1 150 1 view .LVU109
 336 0144 09B0     		add	sp, sp, #36
 337              	.LCFI2:
 338              		.cfi_remember_state
 339              		.cfi_def_cfa_offset 36
 340              		@ sp needed
 341 0146 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 342              	.LVL50:
 343              	.L8:
 344              	.LCFI3:
 345              		.cfi_restore_state
 131:u8g2/csrc/u8g2_input_value.c **** 	  local_value = lo;
 346              		.loc 1 131 2 is_stmt 1 view .LVU110
 131:u8g2/csrc/u8g2_input_value.c **** 	  local_value = lo;
 347              		.loc 1 131 5 is_stmt 0 view .LVU111
 348 014a 069B     		ldr	r3, [sp, #24]
 349 014c 9A45     		cmp	r10, r3
 350 014e EED2     		bcs	.L15
 134:u8g2/csrc/u8g2_input_value.c **** 	break;
 351              		.loc 1 134 4 is_stmt 1 view .LVU112
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 10


 134:u8g2/csrc/u8g2_input_value.c **** 	break;
 352              		.loc 1 134 15 is_stmt 0 view .LVU113
 353 0150 0AF1010A 		add	r10, r10, #1
 354              	.LVL51:
 134:u8g2/csrc/u8g2_input_value.c **** 	break;
 355              		.loc 1 134 15 view .LVU114
 356 0154 5FFA8AFA 		uxtb	r10, r10
 357              	.LVL52:
 134:u8g2/csrc/u8g2_input_value.c **** 	break;
 358              		.loc 1 134 15 view .LVU115
 359 0158 A3E7     		b	.L4
 360              	.L21:
 361 015a 00BF     		.align	2
 362              	.L20:
 363 015c 00000000 		.word	.LC0
 364              		.cfi_endproc
 365              	.LFE0:
 367              		.section	.rodata.u8g2_UserInterfaceInputValue.str1.4,"aMS",%progbits,1
 368              		.align	2
 369              	.LC0:
 370 0000 3000     		.ascii	"0\000"
 371              		.text
 372              	.Letext0:
 373              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 374              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\8 2019-q3-update\\arm-none-eabi\\include
 375              		.file 4 "u8g2/csrc/u8x8.h"
 376              		.file 5 "u8g2/csrc/u8g2.h"
ARM GAS  C:\Users\behun\AppData\Local\Temp\cciK4SNL.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_input_value.c
C:\Users\behun\AppData\Local\Temp\cciK4SNL.s:16     .text.u8g2_UserInterfaceInputValue:00000000 $t
C:\Users\behun\AppData\Local\Temp\cciK4SNL.s:24     .text.u8g2_UserInterfaceInputValue:00000000 u8g2_UserInterfaceInputValue
C:\Users\behun\AppData\Local\Temp\cciK4SNL.s:363    .text.u8g2_UserInterfaceInputValue:0000015c $d
C:\Users\behun\AppData\Local\Temp\cciK4SNL.s:368    .rodata.u8g2_UserInterfaceInputValue.str1.4:00000000 $d

UNDEFINED SYMBOLS
u8g2_SetFontDirection
u8g2_SetFontPosBaseline
u8x8_GetStringLineCnt
u8g2_GetUTF8Width
u8g2_FirstPage
u8g2_DrawUTF8Lines
u8g2_DrawUTF8
u8x8_u8toa
u8g2_NextPage
u8x8_GetMenuEvent
